{
    "swagger": "2.0",
    "info": {
        "title": "Cloud Governance Api",
        "contact": {
            "name": "AvePoint Support",
            "url": "http://www.avepoint.com/support",
            "email": "support@avepoint.com"
        },
        "version": "1.0"
    },
    "basePath": "Cloud%20Governance%20Modern%20API%20Endpoint",
    "paths": {
        "/auth/token/delegate": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "get delegate access token by client id and client secret which created in cloud governance Api Authentication Management",
                "operationId": "GetDelegateAccessToken",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApiCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DelegatedAccessTokenApiResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/auth/token/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "refresh user access token",
                "operationId": "RefreshUserAccessToken",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "refresh_token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DelegatedAccessTokenApiResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/allsitedesigns": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get all site designs by site url",
                "operationId": "GetAllSiteDesigns",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "siteUrl",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteDesignModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGAllSiteDesigns"
            }
        },
        "/office365/groups/allmembers": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get group members by group email",
                "operationId": "GetGroupAllMembersByGroupValue",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "objectIdOrNameOrEmail",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "tenantId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiUserPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/groups/{email}/memberswithoutowner": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get group members without owners by group email",
                "operationId": "GetGroupMembers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiUserPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGGroupMembers"
            }
        },
        "/office365/groups/{email}/owners": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get group owners by group email",
                "operationId": "GetGroupOwners",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiUserPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGGroupOwners"
            }
        },
        "/office365/hubsites": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get all hubsites from site's tenant",
                "operationId": "GetHubSitesByUrl",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "siteUrl",
                        "description": "any site url in your tenant",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GuidModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/hubsiteurls": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get all hubsite urls from site's tenant",
                "operationId": "GetHubSiteUrlsByUrl",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "siteUrl",
                        "description": "any site url in your tenant",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HubSiteUrl"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/permissions": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get web permissions for creating list request by web url",
                "operationId": "GetPermissions",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "webUrl",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserGroupPermissions"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGPermissions"
            }
        },
        "/office365/roleassignment": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site permimssion role assignment",
                "operationId": "GetRoleAssignment",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SPRoleAssignment"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGRoleAssignment"
            }
        },
        "/office365/securitygroups": {
            "post": {
                "tags": [
                    "Office365"
                ],
                "summary": "Create mail-enabled security group",
                "operationId": "CreateSecurityGroup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "GroupName,GroupEmailAddress,Owners,Members",
                        "schema": {
                            "$ref": "#/definitions/GroupSettingModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "New-ACGSecurityGroup"
            }
        },
        "/office365/securitygroups/{name}": {
            "delete": {
                "tags": [
                    "Office365"
                ],
                "summary": "Remove mail-enabled security group by group name",
                "operationId": "RemoveSecurityGroup",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "description": "group email address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Remove-ACGSecurityGroup"
            }
        },
        "/office365/sitedesigns": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site designs by site url",
                "operationId": "GetSiteDesigns",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "siteUrl",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGSiteDesigns"
            }
        },
        "/office365/sites/haspermission": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "whether user has permission on the site",
                "operationId": "HasPermission",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "siteurl",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "currentuser",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/sites/permissionlevels": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site permission levels",
                "operationId": "GetSitePermissionLevels",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "uri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionLevel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/sites/sensitivitylabelsetting": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site sharePoint groups",
                "operationId": "GetSiteSensitivityLabels",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "uri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Office365SiteSettingModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/sites/sharepointgroups": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site sharePoint groups",
                "operationId": "GetSiteSharePointGroups",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "uri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SPGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/office365/sites/status": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "check site collection status by full url",
                "operationId": "GetSiteStatus",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "fullUrl",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiSiteStatus"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGSiteStatus"
            }
        },
        "/office365/sites/templates/{languageid}": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site templates with language code identifier",
                "operationId": "GetSiteTemplates",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "in": "path",
                        "name": "languageid",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteTemplate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGSiteTemplates"
            }
        },
        "/office365/{officeTenantId}/sites/templates/{languageId}": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get site templates with language code identifier",
                "operationId": "GetOfficeSiteTemplates",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "officeTenantId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "languageId",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteTemplate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-OfficeSiteTemplates"
            }
        },
        "/office365/teamsitedesigns": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "operationId": "GetTeamSiteDesigns",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "tenantId",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGTeamSiteDesigns"
            }
        },
        "/office365/teams/my": {
            "get": {
                "tags": [
                    "Office365"
                ],
                "summary": "get all teams that owner is curernt user",
                "operationId": "GetOwnedTeams",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GuidModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get request by id",
                "operationId": "GetRequestById",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archivegroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get archive group request",
                "operationId": "GetArchiveGroupRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ArchiveGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archivegroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit archive group group request",
                "operationId": "SubmitArchiveGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archivesite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get archive site request",
                "operationId": "GetArchiveSiteRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ArchiveSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archivesite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit archive site request",
                "operationId": "SubmitArchiveSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archiveweb/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get archive web request",
                "operationId": "GetArchiveWebRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ArchiveWebLifecycleRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/archiveweb": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit archive web request",
                "operationId": "SubmitArchiveWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveWebLifecycleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/{id}/cancel": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "cancel request",
                "operationId": "CancelRequest",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change group settings request",
                "operationId": "GetChangeGroupSettingRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change group settings request",
                "operationId": "SubmitChangeGroupSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegrouppolicy/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change group policy request",
                "operationId": "GetChagneGroupPolicyRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupPolicyRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegrouppolicy": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change group policy request",
                "operationId": "SubmitChangeGroupPolicyRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegroupquota/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change group quota request",
                "operationId": "GetChangeGroupQuotaRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupQuotaRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changegroupquota": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change group quota request",
                "operationId": "SubmitChangeGroupQuotaRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changelistsetting/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change list settings request",
                "operationId": "GetChangeListSettingRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeListSettingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changelistsetting": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change list settings request",
                "operationId": "SubmitChangeListSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeListSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changepermission/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change permission request",
                "operationId": "GetChangePermissionRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changepermission": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change permission request",
                "operationId": "SubmitChangePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changeprivatechannel/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change private channel request",
                "operationId": "GetChangePrivateChannelRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePrivateChannelRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changeprivatechannel": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change private channel request",
                "operationId": "SubmitChangePrivateChannelRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangePrivateChannelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesite/adminorcontact/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change site administrator or contact request",
                "operationId": "GetChangeSiteContactRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteContactRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesite/adminorcontact": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change site administrator or contact request",
                "operationId": "SubmitChangeSiteContactRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesitepolicy/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change site policy request",
                "operationId": "GetChangeSitePolicyRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSitePolicyRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesitepolicy": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change site policy request",
                "operationId": "SubmitChangeSitePolicyRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSitePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesitequota/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change site quota request",
                "operationId": "GetChangeSiteQuotaRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteQuotaRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesitequota": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change site quota request",
                "operationId": "SubmitChangeSiteQuotaRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesite/setting/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change site settings request",
                "operationId": "GetChangeSiteSettingRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changesite/setting": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change site settings request",
                "operationId": "SubmitChangeSiteSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changewebcontact/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change web contact request",
                "operationId": "GetChangeWebContactRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebContactRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changewebcontact": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change web contact request",
                "operationId": "SubmitChangeWebContactRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changewebsettings/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get change web settings request",
                "operationId": "GetChangeWebSettingRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebSettingRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/changewebsettings": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit change web settings request",
                "operationId": "SubmitChangeWebSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/clonepermission/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get clone permission request",
                "operationId": "GetClonePermissionRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ClonePermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/clonepermission": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "get clone permission request",
                "operationId": "SubmitClonePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ClonePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/contentmove/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get content move request",
                "operationId": "GetContentMoveRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/contentmove": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create content move request",
                "operationId": "SubmitContentMoveRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/creategroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get create group request",
                "operationId": "GetCreateGroupRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/creategroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create group request",
                "operationId": "SubmitCreateGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createguestuser/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get create guest user request",
                "operationId": "GetCreateGuestUserRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateGuestUserRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createguestuser": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create guest user request",
                "operationId": "SubmitCreateGuestUserRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateGuestUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createlist/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get create list request",
                "operationId": "GetCreateListRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateListRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createlist": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create list request",
                "operationId": "SubmitCreateListRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createprivatechannel/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get private channel request",
                "operationId": "GetCreatePrivateChannelRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreatePrivateChannelRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createprivatechannel": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit private channel request",
                "operationId": "SubmitCreatePrivateChannelRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreatePrivateChannelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createsite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get create site request",
                "operationId": "GetCreateSiteRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id of create site collection request.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createsite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create site collection request",
                "operationId": "SubmitCreateSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "CreateSiteRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createweb/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get create web request",
                "operationId": "GetCreateWebRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateWebRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/createweb": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit create web request",
                "operationId": "SubmitCreateWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateWebRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/custom/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get custom service request",
                "operationId": "GetCustomRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/custom": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit custom service request",
                "operationId": "SubmitCustomRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deletegroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get delete group request",
                "operationId": "GetDeleteGroupRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deletegroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit delete group request",
                "operationId": "SubmitDeleteGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deletesite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get delete site request",
                "operationId": "GetDeleteSiteRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deletesite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit delete site request",
                "operationId": "SubmitDeleteSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deleteweb/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get delete web request",
                "operationId": "GetDeleteWebRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DeleteWebLifecycleRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/deleteweb": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit delete web request",
                "operationId": "SubmitDeleteWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteWebLifecycleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get dynamic request",
                "operationId": "GetDynamicRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DynamicRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit dynamic request",
                "operationId": "SubmitDynamicRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DynamicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changecontact": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeContactGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DynamicChangeContactGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changeexchangeresourcemembership": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeExchangeResourceMembershipGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeExchangeResourceMembershipGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changelicense": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeLicenseGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeLicenseGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changesecuritygroupsettings": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeSecurityGroupSettingsGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSecurityGroupSettingsGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changesharedchannel": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeSharedChannelGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSharedChannelGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changesharedmailboxpermission": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeSharedMailboxPermissionGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSharedMailboxPermissionGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changesiteprofile": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeSiteProfileGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteProfilesGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changesitesetting": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeSiteSettingGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/changeteamsetting": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestChangeTeamSettingGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeTeamSettingGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createdistributionlist": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateDistributionListGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateDistributionListGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createequipmentmailbox": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateEquipmentMailboxGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateEquipmentMailboxGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/creategroups": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateGroupGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateGroupGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createlibrary": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateLibraryGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateLibraryGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createmailenabledgroup": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateMailEnabledGroupGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateMailEnabledGroupGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createroommailbox": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateRoomMailboxGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateRoomMailboxGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createsecuritygroupgallery": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateSecurityGroupGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSecurityGroupGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createsharedchannel": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateSharedChannelGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSharedChannelGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createsharedmailbox": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateSharedMailboxGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSharedMailboxGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createsite": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateSiteGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSiteGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/createteams": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestCreateTeamsGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateTeamGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/exchangeresourcelifecycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestExchangeResourceLifecycleGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExchangeResourceLifecycleGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/inviteguest": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestInviteGuestGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/InviteGuestGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/m365grouplifecycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestM365GroupLifecycleGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/M365GroupLifecycleGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/sclifecycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestSCLifecycleGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SCLifecycleGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/sharedmailboxlifecycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestSharedMailboxLifecycleGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SharedMailboxLifecycleGalleryRequestModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/dynamic/{id}/gallery/teamlifecycle": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "operationId": "GetDynamicRequestTeamLifecycleGallery",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "galleryName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TeamLifecycleGallery"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/extendgroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get extend group request",
                "operationId": "GetExtendGroupRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExtendGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/extendgroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit extend group request",
                "operationId": "SubmitExtendGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ExtendGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/extendsite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get extend site request",
                "operationId": "GetExtendSiteRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ExtendSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/extendsite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit extend site request",
                "operationId": "SubmitExtendSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ExtendSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/grantpermission/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get grant permission request",
                "operationId": "GetGrantPermissionRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GrantPermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/grantpermission": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "get submit grant permission request",
                "operationId": "SubmitGrantPermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/GrantPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/isUrlExistInPendingRequests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "check url exists in pending requests.",
                "operationId": "IsUrlExistsInPendingRequests",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "url",
                        "description": "Site collection full url.",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    },
                    {
                        "in": "query",
                        "name": "requestId",
                        "description": "Only needed if you're editing a request.",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/locksite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get lock site request",
                "operationId": "GetLockSiteReuqest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LockSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/locksite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit lock site request",
                "operationId": "SubmitLockSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/LockSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/managepermission/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get manage permission request",
                "operationId": "GetManagePermissionRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ManagePermissionRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/managepermission": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit manage permission request",
                "operationId": "SubmitManagePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManagePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/my": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get my requests",
                "operationId": "GetMyRequests",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, serviceId, serviceName, serviceType, category, categoryName, approvalStageName, participants, objectUrl, objectID, hasSubRequest, modifiedBy, modifiedByDisplayName, modifiedDate, ticketNumber, summary, status, processStatus, modified, submitStatus, assigned, assignedLoginName, serviceAdmin, enabledCopy",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, serviceId, serviceName, serviceType, category, categoryName, approvalStageName, participants, objectUrl, objectID, hasSubRequest, modifiedBy, modifiedByDisplayName, modifiedDate, ticketNumber, summary, status, processStatus, modified, submitStatus, assigned, assignedLoginName, serviceAdmin, enabledCopy",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for ticketNumber",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/restoregroup/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get restore group request",
                "operationId": "GetRestoreGroupRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RestoreGroupRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/restoregroup": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit restore group request",
                "operationId": "SubmitRestoreGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/RestoreGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/sitelifecycle/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get site lifecycel request",
                "operationId": "GetSiteCollectionLifecycleRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteLifecycleRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/{requestid}/tasks": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get task by request id",
                "operationId": "GetTasks",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "includeCompleted",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiTask"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/unlocksite/{id}": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "get unlock site request",
                "operationId": "GetUnlockSiteRequest",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UnlockSiteRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/requests/unlocksite": {
            "post": {
                "tags": [
                    "Requests"
                ],
                "summary": "submit unlock site request",
                "operationId": "SubmitUnlockSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UnlockSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changegroupsetting/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change group setting service",
                "operationId": "GetChangeGroupSettingService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changegroupsetting/{id}/group/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change group setting service",
                "operationId": "ValidateForChangeGroupSettingService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingCheckResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changelistsetting/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change list setting service",
                "operationId": "GetChangeListSettingService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeListSettingService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changelistsetting/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change list setting service",
                "operationId": "ValidateForChangeListSettingService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeListSettingValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changepermission/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change permission service",
                "operationId": "GetChangePermissionService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePermissionService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changepermission/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change permission service",
                "operationId": "ValidateForChangePermissionService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePermissionValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changeprivatechannel/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get private channel service detail",
                "operationId": "GetChangePrivateChannelService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePrivateChannelService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changeprivatechannel/{serviceId}/team/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate teams for change private channel service",
                "operationId": "ValidateTeamForChangePrivateChannelService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangePrivateChannelValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangePrivateChannelCheckResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changesitecontact/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change site contact service",
                "operationId": "GetChangeSiteContactService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteContactService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changesitecontact/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change site contact service",
                "operationId": "ValidateForChangeSiteContactService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteContactValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changesitesetting/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change site setting service",
                "operationId": "GetChangeSiteSettingService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changesitesetting/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change site setting service",
                "operationId": "ValidateForChangeSiteSettingService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changewebcontact/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change web contact service",
                "operationId": "GetChangeWebContactService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebContactService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changewebcontact/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change web contact service",
                "operationId": "ValidateForChangeWebContactService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebContactValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changewebsettings/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get change web setting service",
                "operationId": "GetChangeWebSettingsService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebSettingService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/changewebsettings/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for change web setting service",
                "operationId": "ValidateForChangeWebSettingService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebUrlValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/clonepermission/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get clone permission service",
                "operationId": "GetClonePermissionService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ClonePermissionService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/clonepermission/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for clone permission service",
                "operationId": "ValidateForClonePermissionService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ClonePermissionValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/contentmove/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get content move service",
                "operationId": "GetContentMoveService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/contentmove/profiles": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get content move profiles from cloud management",
                "operationId": "GetContentMoveProfiles",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveProfiles"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/contentmove/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for content move service",
                "operationId": "ValidateForContentMoveService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveUrlValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveUrlValidationResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/creategroup/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get create group service",
                "operationId": "GetCreateGroupService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateGroupService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createguestuser/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get create group service",
                "operationId": "GetCreateGuestUserService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateGuestUserService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createguestuser/{id}/email/validate": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "validate guest user email",
                "operationId": "ValidateEmailForCreateGuestUserService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "requestId",
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ObjectValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate guest user emails",
                "operationId": "ValidateEmailsForCreateGuestUserService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createguestuser/{id}/group/validate": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate groups can invite",
                "operationId": "ValidateForCreateGuestUserService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "requestId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiUser"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateGuestUserValidationResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createlist/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get create list service",
                "operationId": "GetCreateListService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateListService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createlist/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for create list service",
                "operationId": "ValidateForCreateListService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ListValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateListUrlValidationResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createprivatechannel/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get private channel service detail",
                "operationId": "GetCreatePrivateChannelService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreatePrivateChannelService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createprivatechannel/{serviceId}/team/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate teams for create private channel service",
                "operationId": "ValidateTeamForCreatePrivateChannelService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "serviceId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreatePrivateChannelValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreatePrivateChannelCheckResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createsite/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get create site service",
                "operationId": "GetCreateSiteService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateSiteService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createweb/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get create web service",
                "operationId": "GetCreateWebService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateWebService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/createweb/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for create web service",
                "operationId": "ValidateForCreateWebService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateWebValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CreateWebUrlValidationResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/custom/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get custom service",
                "operationId": "GetCustomService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceForRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/dynamic/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get dynamic service",
                "operationId": "GetDynamicService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DynamicServiceForRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/grantpermission/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get grant permission service",
                "operationId": "GetGrantPermissionService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GrantPermissionService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/grantpermission/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for grant permission service",
                "operationId": "ValidateForGrantPermissionService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GrantPermissionUrlValidationResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/grouplifecycle/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get group lifecycle service",
                "operationId": "GetGroupLifecycleService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupLifecycleService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/grouplifecycle/{id}/group/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for group lifecycle service",
                "operationId": "ValidateForGroupLifecycleService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/GroupValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupLifecycleValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/id": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get service id by service name",
                "operationId": "GetServiceId",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "name",
                        "description": "service name, case insensitive",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/managepermission/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get manage permission service",
                "operationId": "GetManagePermissionService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ManagePermissionService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/managepermission/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for manage permission service",
                "operationId": "ValidateForManagePermissionService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ManagePermissionValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/my": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get services that can be used to start a request",
                "operationId": "GetMyServices",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/sitelifecycle/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get site lifecycle service",
                "operationId": "GetSiteLifecycleService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteLifecycleService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/sitelifecycle/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for site lifecycle service",
                "operationId": "ValidateForSiteLifecycleService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteLifecycleValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/weblifecycle/{id}": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "get web lifecycle service",
                "operationId": "GetWebLifecycleService",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "questionnaireId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isValidatePermission",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WebLifecycleService"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/services/weblifecycle/{id}/url/validation": {
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "validate permissions, scope for web lifecycle service",
                "operationId": "ValidateForWebLifecycleService",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteValidationParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WebLifecycleValidateResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/settings/my": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "get my personal settings",
                "operationId": "GetMyPersonalSettings",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PersonalSettings"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/settings/office365/groups/dynamicmembershiprule/{tenantid}": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "get group/teams dynamic membership rules",
                "operationId": "GetDynamicMembershipRuleItems",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenantid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isDynamic",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Contact": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DynamicRuleElement"
                                    }
                                },
                                "License": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DynamicRuleElement"
                                    }
                                },
                                "Organization": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/DynamicRuleElement"
                                    }
                                }
                            },
                            "additionalProperties": false
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/settings/office365/permissionlevels": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "get permission levels",
                "operationId": "GetPermissionLevels",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PermissionLevel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Get-ACGPermissionLevels"
            }
        },
        "/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "get task by id",
                "operationId": "GetTaskById",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiTask"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/approve": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "approve task",
                "operationId": "ApproveTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/archivegroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit archive group request in task",
                "operationId": "EditArchiveGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/archivesite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit archive site request in task",
                "operationId": "EditArchiveSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/archiveweb": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit archive web request in task",
                "operationId": "EditArchiveWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveWebLifecycleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/batchTasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "get all batch tasks by id",
                "operationId": "GetBatchTasksById",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiTask"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changegroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create change group request",
                "operationId": "EditChangeGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changegrouppolicy": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change group policy request in task",
                "operationId": "EditChangeGroupPolicyRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupPolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changegroupquota": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change group quota request in task",
                "operationId": "EditChangeGroupQuotaRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeGroupQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changelistsetting": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change list setting request in task",
                "operationId": "EditChangeListSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeListSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changepermission": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change permission request in task",
                "operationId": "EditChangePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changesite/adminorcontact": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change site administrator/contact request",
                "operationId": "EditChangeSiteContactRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changesitepolicy": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change site policy request in task",
                "operationId": "EditChangeSitePolicyRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSitePolicyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changesitequota": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change site quota request in task",
                "operationId": "EditChangeSiteQuotaRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteQuotaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changesite/setting": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change site setting request",
                "operationId": "EditChangeSiteSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeSiteSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changewebcontact": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change web contact request in task",
                "operationId": "EditChangeWebContactRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/changewebsettings": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit change web setting request in task",
                "operationId": "EditChangeWebSettingRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ChangeWebSettingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/clonepermission": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit clone permission request",
                "operationId": "EditClonePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ClonePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/contentmove": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit content move request",
                "operationId": "EditContentMoveRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ContentMoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/continueaccessgroup": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "submit group continue access auto task",
                "operationId": "SubmitContinueAccessGroupAutoTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/continueaccesssite": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "submit site continue access auto task",
                "operationId": "SubmitContinueAccessSiteAutoTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "id",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/creategroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create site group request",
                "operationId": "EditCreateGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/createguestuser": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create guest user request in task",
                "operationId": "EditCreateGuestUserRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateGuestUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/createlist": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create list request in task",
                "operationId": "EditCreateListRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/createsite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create site request",
                "operationId": "EditCreateSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/createweb": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit create web request in task",
                "operationId": "EditCreateWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CreateWebRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/custom": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit custom request",
                "operationId": "EditCustomRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/deletegroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit delete change group request in task",
                "operationId": "EditDeleteGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/deletesite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit delete site request in task",
                "operationId": "EditDeleteSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/deleteweb": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit delete web request in task",
                "operationId": "EditDeleteWebRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteWebLifecycleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/dynamic": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit dynamic service request",
                "operationId": "EditDynamicServiceRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DynamicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/extendgroup": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "submit extend group auto task",
                "operationId": "SubmitExtendGroupAutoTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AutoTaskExtendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/extendgroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit extend group request in task",
                "operationId": "EditExtendGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ExtendGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/extendsite": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "submit site extend auto task",
                "operationId": "SubmitExtendSiteAutoTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AutoTaskExtendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/extendsite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit extend site request in task",
                "operationId": "EditExtendSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ExtendSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/grantpermission": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit grant permission request in task",
                "operationId": "EditGrantPermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/GrantPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/locksite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit lock site request",
                "operationId": "EditLockSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/LockSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/managepermission": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit manage permission request",
                "operationId": "EditManagePermissionRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManagePermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/my/{batchid}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "get my task by batch id",
                "operationId": "GetTaskByBatchId",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "batchid",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TaskList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/my/v2": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "get my tasks",
                "operationId": "GetMyTasks",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "taskApprovalStatus",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, title, requester, requestId, requestTicketNumber, requesterDisplayName, requesterEmail, dueDate, serviceType, createdTime, taskType, status, taskFullPath, lastUpdated, category, serviceName, objectId, profileId, allowEdit, progressStatus, batchId, isEnabledPassback",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, title, requester, requestId, requestTicketNumber, requesterDisplayName, requesterEmail, dueDate, serviceType, createdTime, taskType, status, taskFullPath, lastUpdated, category, serviceName, objectId, profileId, allowEdit, progressStatus, batchId, isEnabledPassback",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TaskListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/reassignto/{user}": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "reassign task",
                "operationId": "ReassignTask",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "path",
                        "name": "user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/reject": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "reject task",
                "operationId": "RejectTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isPassbackEnabled",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/restoregroup": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit restore group request in task",
                "operationId": "EditRestoreGroupRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/RestoreGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/retry": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "retry error task",
                "operationId": "RetryErrorTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/skip": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "skip error task",
                "operationId": "SkipErrorTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/unlocksite": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "edit unlock site request",
                "operationId": "EditUnLockSiteRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/UnlockSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/users/{username}/azuread/extensionproperties": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "get user's extension property value from azure ad",
                "operationId": "GetExtensionAzureAdUserPropertyValues",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StringModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/users/{username}/azuread/property": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "get Azure Ad user's property value",
                "operationId": "GetAzureAdUserPropertyValue",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "propertyName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "extensionAttribute",
                        "type": "string",
                        "default": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/StringModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/users/filter": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "filter users by property value",
                "operationId": "FilterUsersByAttribute",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "attributeName",
                        "description": "azure ad attribute name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "attributeValue",
                        "description": "value of attribute name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "office365TenantId",
                        "description": "office 365 tenant id, optional, if not specified, only return the first tenant's result which is not empty",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "only return the first 100 users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/users/{userprincipalname}/ismemberof/{groupid}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Is Member Of Group",
                "operationId": "IsMemberOfGroup",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userprincipalname",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "groupid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/users/resolve": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "resolve users",
                "operationId": "ResolveUsers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userSource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sharingOptions",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "siteUrlOrTenantId",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "in": "query",
                        "name": "groupEmail",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "in": "query",
                        "name": "peopleFilterProfileId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isGetTenantBySiteUrl",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "query",
                        "name": "includeBlockedUser",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "query",
                        "name": "isNeedEveryone",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "query",
                        "name": "isMultiTenantContact",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Resolve-ACGUsers"
            }
        },
        "/users/search": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "search users",
                "operationId": "SearchUsers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "keyword",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userType",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "userSource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sharingOptions",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "siteUrlOrTenantId",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "in": "query",
                        "name": "groupEmail",
                        "type": "string",
                        "default": ""
                    },
                    {
                        "in": "query",
                        "name": "peopleFilterProfileId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isGetTenantBySiteUrl",
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "query",
                        "name": "includeBlockedUser",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "query",
                        "name": "isNeedEveryone",
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "query",
                        "name": "isMultiTenantContact",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "x-powershell-method-name": "Search-ACGUsers"
            }
        },
        "/workspace/exchangeresource/{id}": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "operationId": "GetMyExchangeResourceInformation",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MyExchangeResource"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/groups/{id}": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "get O365 group/teams information",
                "operationId": "GetMyGroupInformation",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ApiMyGroup"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/groups/{id}/metadata": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "get group/teams metadata",
                "operationId": "GetGroupMetadata",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestMetadata"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/my": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "get my workspace items",
                "operationId": "GetWorkspaceItems",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, name, type, siteUrl, groupEmail, primaryContact, phase, isCurrentRenewer, createdTime, status, autoImportProfileId, pendingAction, secondaryContact, policy, policyId, renewalProfile, renewalProfileId, electionProfile, electionProfileId, quotaProfile, quotaProfileId, externalSharingProfile, externalSharingProfileId, description, primaryAdmin, additionalAdmin, geoLocation, storageLimit, storageUsage, classification, privacy, sensitivity, enableDynamicMembership, webLink, createdSource, lastAccessedTime",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, name, type, siteUrl, groupEmail, primaryContact, phase, isCurrentRenewer, createdTime, status, autoImportProfileId, pendingAction, secondaryContact, policy, policyId, renewalProfile, renewalProfileId, electionProfile, electionProfileId, quotaProfile, quotaProfileId, externalSharingProfile, externalSharingProfileId, description, primaryAdmin, additionalAdmin, geoLocation, storageLimit, storageUsage, classification, privacy, sensitivity, enableDynamicMembership, webLink, createdSource, lastAccessedTime",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/resourcemailbox/{id}": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "operationId": "GetMyResourceMailboxInformation",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MyResourceMailbox"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/sharedmailbox/{id}": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "operationId": "GetMySharedMailboxInformation",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MySharedMailbox"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/sites/{id}": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "get site information",
                "operationId": "GetMySiteInformation",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/MySite"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/workspace/sites/metadata": {
            "get": {
                "tags": [
                    "Workspace"
                ],
                "summary": "get site metadata",
                "operationId": "GetSiteMetadata",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomMetadata"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/auth/token/cache": {
            "delete": {
                "tags": [
                    "Auth/Admin"
                ],
                "summary": "delete token cache",
                "operationId": "DeleteTokenCache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ApiCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/guestusers": {
            "get": {
                "tags": [
                    "GuestUsers/Admin"
                ],
                "summary": "get all managed guest users",
                "operationId": "GetManagedGuestUsers",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, displayName, userPrincipalName, mail, primaryContact, secondaryContact, status, phaseProfileId, profileName, tenantId, nextRenewalDate, renewalAssignees, lastRenewalBy, externalUserState, lastSyncTime, inviteTime, lastRenewalTime, renewalStartTime, renewalDueDate, electionProfileId, electionProfileName, phase, claimStatus, ongoingTaskCount",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, displayName, userPrincipalName, mail, primaryContact, secondaryContact, status, phaseProfileId, profileName, tenantId, nextRenewalDate, renewalAssignees, lastRenewalBy, externalUserState, lastSyncTime, inviteTime, lastRenewalTime, renewalStartTime, renewalDueDate, electionProfileId, electionProfileName, phase, claimStatus, ongoingTaskCount",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for displayName",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GuestUserGridModelPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/requests": {
            "get": {
                "tags": [
                    "Requests/Admin"
                ],
                "summary": "get all requests",
                "operationId": "GetAllRequests",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, serviceId, serviceName, serviceType, category, approvalStageName, participants, ticketNumber, summary, requester, detailStatus, progressStatus, modified, modifiedBy, modifiedDate, assignTo, serviceAdmin, objectUrl, objectID, createdTime, hasSubRequest, isEnabledPassback, requestResourceType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, serviceId, serviceName, serviceType, category, approvalStageName, participants, ticketNumber, summary, requester, detailStatus, progressStatus, modified, modifiedBy, modifiedDate, assignTo, serviceAdmin, objectUrl, objectID, createdTime, hasSubRequest, isEnabledPassback, requestResourceType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for ticketNumber",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 3000, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AllRequestListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/tasks": {
            "get": {
                "tags": [
                    "Tasks/Admin"
                ],
                "summary": "get all tasks",
                "operationId": "GetAllTasks",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, title, requester, requesterLoginName, requesterDisplayName, requestTicketNumber, dueDate, serviceType, createdTime, taskType, status, isApproveTask, assignee, assigneeLoginName, assigneeDisplayName, url",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, title, requester, requesterLoginName, requesterDisplayName, requestTicketNumber, dueDate, serviceType, createdTime, taskType, status, isApproveTask, assignee, assigneeLoginName, assigneeDisplayName, url",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for title",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AllTaskListPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/adgroup/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing azure ad groups",
                "operationId": "ImportUnmanagedAdGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportAdGroupJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/environment/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing environments",
                "operationId": "ImportUnmanagedEnvironments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportEnvironmentJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/group/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing microsoft 365 groups",
                "operationId": "ImportUnmanagedGroups",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportGroupJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/powerapps/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing power apps",
                "operationId": "ImportUnmanagedPowerApps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportPowerAppsJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/powerautomate/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing power automate",
                "operationId": "ImportUnmanagedPowerAutomate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportPowerAutomateJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/powerbi/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing power bi",
                "operationId": "ImportUnmanagedPowerBI",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportPowerBIJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/sharedmailbox/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing shared mailbox",
                "operationId": "ImportUnmanagedSharedMailboxes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportSharedMailboxJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/site/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing site collections",
                "operationId": "ImportUnmanagedSites",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportSiteJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/unmanaged/team/import": {
            "post": {
                "tags": [
                    "Unmanaged/Directory/Admin"
                ],
                "summary": "manually import existing microsoft teams",
                "operationId": "ImportUnmanagedTeams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ManualImportTeamJobModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace": {
            "get": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "get managed workspaces",
                "operationId": "GetWorkspaces",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceGridModelPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "delete workspaces",
                "operationId": "DeleteWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/DeleteWorkspaceParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/archive": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "archive workspace",
                "operationId": "ArchiveWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/ArchiveWorkspaceParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/contacts": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "specify contacts",
                "operationId": "SpecifyContacts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/SpecifyContactParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/election/trigger": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "trigger workspace election",
                "operationId": "TriggerWorkspacesElection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceActionParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/filters": {
            "get": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "get filters for workspace report",
                "operationId": "GetWorkspaceFilters",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "distinct",
                        "description": "support value: PolicyId,PolicyName,PhaseProfileId,PhaseProfileName,GeoLocation,Classification and metadata",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DistinctResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/group/applyprofiles": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "apply group profiles",
                "operationId": "ApplyGroupProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "apply profiles",
                        "schema": {
                            "$ref": "#/definitions/ApplyTeamProfilesModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "start to apply group profiles"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/groups/policy": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "apply groups policy",
                "operationId": "ApplyGroupsPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "apply policy setting",
                        "schema": {
                            "$ref": "#/definitions/ApplyGroupPolicyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "start to apply site policy"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/lock": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "lock sites or Office365 group sites",
                "operationId": "LockWorkspaces",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/LockSiteParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/{type}/ongoningtasks": {
            "get": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "get workspace ongoing tasks",
                "operationId": "GetOngoingTasks",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "groupNameOrUrl",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorksapceOngoingTasksModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/renewal/complete": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "completed renewal task",
                "operationId": "CompleteWorkspaceRenewalTask",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/AutoCompleteRenewalTaskParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/renewal/trigger": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "trigger workspace renewal",
                "operationId": "TriggerWorkspaceRenewal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceSendCancelEmailParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/sites/policy": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "apply site policy",
                "operationId": "ApplySitesPolicy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "apply policy setting",
                        "schema": {
                            "$ref": "#/definitions/ApplySitePolicyModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "start to apply site policy"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/sites/profiles": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "apply site profiles",
                "operationId": "ApplySiteProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "apply profiles",
                        "schema": {
                            "$ref": "#/definitions/ApplyProfilesModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "start to apply site profiles"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/teams/profiles": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "apply team profiles",
                "operationId": "ApplyTeamProfiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "apply profiles",
                        "schema": {
                            "$ref": "#/definitions/ApplyTeamProfilesModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "start to apply team profiles"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/directory/workspace/unlock": {
            "post": {
                "tags": [
                    "Workspaces/Admin"
                ],
                "summary": "unlock sites and Office365 group site",
                "operationId": "UnlockWorkspace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceActionParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/jobs": {
            "get": {
                "tags": [
                    "Jobs/Admin"
                ],
                "summary": "Get worker jobs",
                "operationId": "GetJobs",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, name, type, method, updateTime, nextRunTime, isTimer, status, message, priority, intervalSeconds, jobType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, name, type, method, updateTime, nextRunTime, isTimer, status, message, priority, intervalSeconds, jobType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WorkerJobGridModelPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/jobs/relations": {
            "get": {
                "tags": [
                    "Jobs/Admin"
                ],
                "summary": "Get related worker job",
                "operationId": "GetRelatedJobs",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "workspaceIdentity",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "objectType",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WorkerJobModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/metadata": {
            "get": {
                "tags": [
                    "Metadata/Admin"
                ],
                "summary": "get all metadata",
                "operationId": "GetAllMetadata",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> createdBy, createdByDisplayName, id, name, description, fieldType, metadataValue, showInReportType, lastModifiedTime",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> createdBy, createdByDisplayName, id, name, description, fieldType, metadataValue, showInReportType, lastModifiedTime",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 2000, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OldMetadataGridModelPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/metadata/{id}": {
            "get": {
                "tags": [
                    "Metadata/Admin"
                ],
                "summary": "Get metadata by id",
                "operationId": "GetSingleMetadataById",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustomMetadata"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/azuread/{tenantId}/property/custom": {
            "get": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "get azure ad custom property with data type",
                "operationId": "GetAzureADExtensionPropertyNamesWithDataType",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenantId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomExtensionPropertyModel"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/azuread/{tenantId}/property/names/custom": {
            "get": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "get azure ad custom property names",
                "operationId": "GetAzureAdCustomPropertyNames",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "tenantId",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "isSearchUserProperty",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/tenantid": {
            "get": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "get tenant ids by url",
                "operationId": "GetTenantIdByUrl",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "uri",
                        "required": true,
                        "type": "string",
                        "format": "uri"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/tenantids": {
            "get": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "get tenant ids by filter expression",
                "operationId": "GetTenantIds",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "viewId",
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/uploadurl/{type}": {
            "get": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "get upload file url",
                "operationId": "GetUploadFileUrL",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fileName",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SASUriModel"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/office365/web/usercustomactions": {
            "post": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "add user custom actions, if exists, will update the existing one.",
                "operationId": "AddWebUserCustomAction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCustomAction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Office365/Admin"
                ],
                "summary": "delete user custom actions by action name",
                "operationId": "DeleteWebUserCustomAction",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "webFullUrl",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/report/requests": {
            "get": {
                "tags": [
                    "Report/Admin"
                ],
                "summary": "get requests report",
                "operationId": "GetRequestReport",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, serviceId, serviceName, serviceType, category, approvalStageName, participants, ticketNumber, summary, requester, detailStatus, progressStatus, modified, modifiedBy, modifiedDate, assignTo, serviceAdmin, objectUrl, objectID, createdTime, hasSubRequest, isEnabledPassback, requestResourceType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, serviceId, serviceName, serviceType, category, approvalStageName, participants, ticketNumber, summary, requester, detailStatus, progressStatus, modified, modifiedBy, modifiedDate, assignTo, serviceAdmin, objectUrl, objectID, createdTime, hasSubRequest, isEnabledPassback, requestResourceType",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for ticketNumber",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/AllRequestDetailsPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/report/tasks": {
            "get": {
                "tags": [
                    "Report/Admin"
                ],
                "summary": "get all tasks report",
                "operationId": "GeTaskReport",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 3000, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TaskReportPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/report/workspaces": {
            "get": {
                "tags": [
                    "Report/Admin"
                ],
                "summary": "get workspaces report",
                "operationId": "GetWorkspaceReport",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, name, description, status, type, url, email, privacy, policyName, policyId, enableDynamicMembership, primaryAdministrators, additionalAdministrators, primaryContact, secondaryContact, hubType, associateHubTitle, geoLocation, storageLimit, storageUsed, siteSharing, groupSharing, classification, claimStatus, createdTime, leaseExpirationTime, inactivityThresholdTime, lastRenewalTime, lastAccessedTime, applyPolicyStatus, hasOngoingTasks, lastRenewalBy, sensitivity, insightsStatus, siteStatus, lockedBy, lastSyncTime, createdSource, siteTemplate, siteTemplateTitle, quotaProfileName, quotaProfileId, externalSharingProfileName, externalSharingProfileId, electionProfileName, electionProfileId, phaseAssignees, phaseProfileName, phaseProfileId, phaseStartTime, renewalDueDate, nextRenewalDate, phase",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 3000, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WorkspaceReportPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/services": {
            "get": {
                "tags": [
                    "Services/Admin"
                ],
                "summary": "get all services",
                "operationId": "GetServices",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Use **eq**(equal) or **ne**(not equal) to filter the results (e.g. field1 eq 'value1' and field2 ne 'value2'), supported fields :<br/> id, description, name, serviceType, status, language, categoryId, modifiedTime, modifiedBy, modifiedByDisplayName, createdByDisplayName, createdBy",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "orderby",
                        "description": "Order by one field, supported fields:<br/> id, description, name, serviceType, status, language, categoryId, modifiedTime, modifiedBy, modifiedByDisplayName, createdByDisplayName, createdBy",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "description": "Search for name",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "top",
                        "description": " Define the number of records you want to return, max value is 200, default value is 200",
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "skip",
                        "description": " Define the number of records you want to skip, default value is 0",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "nexttoken",
                        "description": " Use the next token to get the next paging result",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ServiceGridModelPageResult"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/settings/office365/updatedenyaddandcustomizepagesstatus": {
            "put": {
                "tags": [
                    "Office365/Settings/Admin"
                ],
                "summary": "update denyaddandcustomizepages status by custom action",
                "operationId": "UpdateDenyAddAndCustomizePagesStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "url",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "enable",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/admin/settings/system/hooks/messages/sample": {
            "get": {
                "tags": [
                    "System/Settings/Admin"
                ],
                "operationId": "GetHookMessageSamples",
                "produces": [
                    "text/plain",
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/HookMessageList"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ActivityModelbase": {
            "description": "This is activity model base class under dynamic request model.",
            "type": "object",
            "properties": {
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "AddGroupMemberType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Manually",
                "Dynamically"
            ]
        },
        "AdministrativeUnit": {
            "type": "object",
            "properties": {
                "unitId": {
                    "format": "uuid",
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "AnnoymouslinkPermissions": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "View",
                "Edit"
            ]
        },
        "AnonymousLinkSettings": {
            "type": "object",
            "properties": {
                "permisssion": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AnnoymouslinkPermissions"
                        }
                    ],
                    "x-enum-varnames": [
                        "View",
                        "Edit"
                    ]
                },
                "expirationDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ApiCategoryType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Contact",
                "License",
                "Organization"
            ]
        },
        "ApiCredential": {
            "type": "object",
            "properties": {
                "clientSecret": {
                    "type": "string"
                },
                "userPrincipalName": {
                    "type": "string"
                }
            }
        },
        "ApiDurationType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Day",
                "Week",
                "Month",
                "Year"
            ]
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "requestId": {
                    "type": "string"
                },
                "date": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ApiMyGroup": {
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "applyPolicyStatus": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "enableTeamCollaboration": {
                    "default": false,
                    "type": "boolean"
                },
                "dynamicGroupRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleModel"
                    }
                },
                "groupType": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "preferredDataLocation": {
                    "type": "string"
                },
                "preferredDataLocationName": {
                    "type": "string"
                },
                "enableDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "groupTeamSiteUrl": {
                    "type": "string"
                },
                "quotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "storageUsed": {
                    "type": "string"
                },
                "teamLink": {
                    "type": "string"
                },
                "noteBookLink": {
                    "type": "string"
                },
                "plannerLink": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "groupObjectId": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "sensitivity": {
                    "type": "string"
                },
                "groupStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted",
                        "Archived",
                        "SiteLocked",
                        "RestrictAccess",
                        "ModernRenewalEscalationRestrictAccess"
                    ]
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "phaseDescription": {
                    "type": "string"
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "autoImportProfileName": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfileName": {
                    "type": "string"
                },
                "renewalProfileDescription": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDescription": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileDescription": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileDescription": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "phaseAssignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "phaseDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "hasSubmitted": {
                    "default": false,
                    "type": "boolean"
                },
                "hasPendingApprovalTask": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ApiRequest": {
            "description": "Base model of request.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ApiRequestProgressStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "RequestSubmitted",
                "WaitingForApproval",
                "WaitingForSubmission",
                "Cancelled",
                "Rejected",
                "Completed",
                "CompletedWithException",
                "EncounterError",
                "InProgress",
                "FailedWithSubRequestException",
                "SubRequestWaitingForApproval"
            ]
        },
        "ApiSiteStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NotExists",
                "Active",
                "Recycled",
                "NoAccess",
                "ReadOnly"
            ]
        },
        "ApiTask": {
            "type": "object",
            "properties": {
                "dynamicProperties": {
                    "type": "object",
                    "properties": {
                        "None": {},
                        "PrimaryContact": {},
                        "SecondaryContact": {},
                        "SiteId": {},
                        "SiteUrl": {},
                        "GroupName": {},
                        "ExpirationDate": {},
                        "GroupOwners": {},
                        "AutoTaskActionHistories": {},
                        "InactivityThresholdDate": {},
                        "GroupEmail": {},
                        "GroupId": {},
                        "PolicyName": {},
                        "PrimaryAdministrator": {},
                        "SiteTemplate": {},
                        "SiteTitle": {},
                        "SiteDescription": {},
                        "Requester": {},
                        "IsTeam": {},
                        "IsYammer": {},
                        "GroupOwnersStr": {},
                        "TenantId": {},
                        "Approver": {},
                        "ApprovalHistory": {},
                        "CurrentTaskAction": {},
                        "GuestUserId": {},
                        "GuestUserMail": {},
                        "GuestUserName": {},
                        "Manager": {},
                        "ElectionProfile": {},
                        "RenewalDetails": {},
                        "IsFinalStep": {},
                        "ObjectId": {},
                        "isTriggerTaskWhenSecondaryEmpty": {},
                        "PeoplePickerProfileId": {},
                        "EnvironmentDisplayName": {}
                    },
                    "additionalProperties": false
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "requestGuid": {
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskResult"
                        }
                    ],
                    "x-enum-varnames": [
                        "Running",
                        "Approved",
                        "Rejected",
                        "Canceled",
                        "TimeOut",
                        "Completed",
                        "AutoActionApproved",
                        "Retried",
                        "Skipped",
                        "Submited",
                        "WaitingForSubmission",
                        "AllStagesTimeOut",
                        "Declined",
                        "WaitingForClaim",
                        "ElectionTaskTimeOut",
                        "Claimed",
                        "AutoComplete",
                        "WaitingForSpecify",
                        "PendingConfirm",
                        "ConfirmOverdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "ConfirmException",
                        "RenewalException",
                        "WaitingForSpecifyBothContacts",
                        "WaitingForConfirmation",
                        "InProgress",
                        "ConfirmTaskOverdue",
                        "ConfirmTaskEscalation",
                        "WaitingForAssistant",
                        "GoBackRejected",
                        "ElectionTaskContinueWithDeclined",
                        "ElectionTaskContinueWithOverdue",
                        "GoBackWithNoChangesRejected",
                        "WaitingForSpecifyBothContactsOverdue",
                        "WaitingForSpecifyBothContactsEscalated",
                        "UnknownChannelTaskStatus",
                        "WaittingForResubmission",
                        "Deleted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "comments": {
                    "type": "string"
                },
                "allComments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskComment"
                    }
                },
                "errorMessage": {
                    "type": "string"
                },
                "lastModifiedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ApprovalTask",
                        "ErrorHandlingTask",
                        "SCExpired",
                        "SCNoAccess",
                        "ToDoTask",
                        "UserExpired",
                        "GroupExpired",
                        "GroupInactivityThreshold",
                        "AutoImportGroup",
                        "AutoImportSite",
                        "RenewGroup",
                        "RenewSite",
                        "RenewGuestUser",
                        "RenewPrivateChannel",
                        "RenewGeneric",
                        "RenewSharedMailbox",
                        "AutoImportGeneric",
                        "AutoImportSharedMailbox",
                        "PassbackTask",
                        "DynamicMembershipSubTask",
                        "AutoImportPowerApps",
                        "RenewPowerApps",
                        "RenewSharedChannel",
                        "RenewEnvironments",
                        "RenewPowerBIs",
                        "AutoImportPowerBI",
                        "AutoImportPowerAutomate",
                        "RenewPowerAutomates",
                        "ModernAutoImportTeam",
                        "ModernAutoImportGroup",
                        "ModernAutoImportSite"
                    ]
                },
                "allowReassign": {
                    "default": false,
                    "type": "boolean"
                },
                "assignee": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "allowEdit": {
                    "default": false,
                    "type": "boolean"
                },
                "requestTicketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskFullPath": {
                    "type": "string"
                },
                "appId": {
                    "type": "string"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "dynamicActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskDynamicActions"
                    }
                }
            }
        },
        "ApiUser": {
            "description": "ApiUser model",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Object ID",
                    "type": "string"
                },
                "loginName": {
                    "description": "Login name",
                    "type": "string"
                },
                "isExternalUser": {
                    "format": "int32",
                    "description": "Whether the user is an external user.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "azureUserType": {
                    "description": "User type in Azure AD",
                    "type": "string"
                },
                "displayName": {
                    "description": "User display name",
                    "type": "string"
                },
                "isGroup": {
                    "description": "Whether an object is a domain group.",
                    "default": false,
                    "type": "boolean"
                },
                "isLocalUser": {
                    "description": "Whether the user is a local system user.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "email": {
                    "description": "User e-mail address",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "User job title",
                    "type": "string",
                    "readOnly": true
                },
                "physicalDeliveryOfficeName": {
                    "description": "Physical delivery office name of the user",
                    "type": "string",
                    "readOnly": true
                },
                "isValid": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "isAccountEnabled": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "tenantId": {
                    "description": "Office 365 tenant ID of the user",
                    "type": "string",
                    "readOnly": true
                },
                "additionalData": {
                    "description": "User additional data",
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                },
                "apiUserType": {
                    "format": "int32",
                    "description": "ApiUser type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserType"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "User",
                        "DistributionList",
                        "Office365Group",
                        "SharePointGroup",
                        "Guest",
                        "SecurityGroupOnly",
                        "MailEnabledSecurityGroup",
                        "UserAndMailEnableSecurityGroup",
                        "Group",
                        "UserAndGroup",
                        "AzureADGroup",
                        "Team",
                        "All",
                        "SharedMailbox",
                        "Yammer",
                        "OnlyOffice365Group",
                        "RoomList",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "Office365GroupSecurityEnable",
                        "Office365GroupSecurityDisable",
                        "MailContact"
                    ]
                }
            }
        },
        "ApiUserChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalValue": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                }
            }
        },
        "ApiUserIListChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "originalValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                }
            }
        },
        "ApiUserPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "ApiUserType": {
            "format": "int32",
            "enum": [
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                67,
                100,
                101,
                102,
                128,
                239,
                256,
                512,
                1024,
                2048,
                4096,
                8192,
                16384,
                32768,
                65536
            ],
            "type": "integer",
            "x-enum-varnames": [
                "User",
                "DistributionList",
                "Office365Group",
                "SharePointGroup",
                "Guest",
                "SecurityGroupOnly",
                "MailEnabledSecurityGroup",
                "UserAndMailEnableSecurityGroup",
                "Group",
                "UserAndGroup",
                "AzureADGroup",
                "Team",
                "All",
                "SharedMailbox",
                "Yammer",
                "OnlyOffice365Group",
                "RoomList",
                "RoomMailbox",
                "EquipmentMailbox",
                "Office365GroupSecurityEnable",
                "Office365GroupSecurityDisable",
                "MailContact"
            ]
        },
        "AppInfo": {
            "type": "object",
            "properties": {
                "licenseId": {
                    "format": "uuid",
                    "type": "string"
                },
                "planId": {
                    "format": "uuid",
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                }
            }
        },
        "ApproveProcessModel": {
            "type": "object",
            "properties": {
                "approveProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "AppSettings": {
            "type": "object",
            "properties": {
                "enableInstallApp": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddSiteInfoCard": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddTimeLine": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddPanel": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ArchiveGroupRequest": {
            "description": "Archive group request model",
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ArchiveSiteRequest": {
            "description": "Archive site collection request model",
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ArchiveWebLifecycleRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebLifecycleActionType"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "None",
                        "Delete",
                        "Archive"
                    ]
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webRelativeUrl": {
                    "type": "string"
                },
                "webTitle": {
                    "description": "Web Title",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "actionDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AssignBy": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "BusinessUser",
                "BusinessUserWithRequired",
                "ITAdminWithReadOnly",
                "ITAdminWithHide"
            ]
        },
        "AssociateToHubSite": {
            "type": "object",
            "properties": {
                "hubSiteUrl": {
                    "type": "string"
                },
                "hubSiteTitle": {
                    "type": "string"
                },
                "hubSiteId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "AuthenticationType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "type": "integer",
            "x-enum-varnames": [
                "LocalSystem",
                "WindowsIntegration",
                "ADIntegration",
                "ADFSIntegration",
                "Federation",
                "SharePointOnline",
                "SalesForce",
                "Yammer",
                "AzureAD",
                "Sandbox",
                "SharePoint",
                "Exchange"
            ]
        },
        "AutoGenerateUrlSetting": {
            "type": "object",
            "properties": {
                "generateUrlType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoGenerateUrlType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SequentialNumber",
                        "RandomString"
                    ]
                },
                "sequentialNumberingSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UrlSequentialNumberingSettings"
                        }
                    ]
                },
                "randomStringSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UrlRandomStringSettings"
                        }
                    ]
                }
            }
        },
        "AutoGenerateUrlType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SequentialNumber",
                "RandomString"
            ]
        },
        "AutoImportPhase": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Confirmed",
                "Processing",
                "PendingInition",
                "ApplyInformationException",
                "Overdue",
                "PendingRenewal",
                "RenewalExpired",
                "RenewalProcessing",
                "RenewalException",
                "Locked",
                "RenewalCanceled",
                "RenewalPreparing",
                "Invalid",
                "Archived",
                "Escalation",
                "ITRenewalCanceled"
            ]
        },
        "AutoTaskExtendRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "Policy",
                        "Unlock",
                        "Continue",
                        "Lock",
                        "Quota"
                    ]
                },
                "extendDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "extendDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "taskId": {
                    "format": "uuid",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "comments": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommentsParam"
                        }
                    ]
                }
            }
        },
        "AzureAdMetadataSettings": {
            "type": "object",
            "properties": {
                "office365Tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "useBuiltInProperty": {
                    "default": false,
                    "type": "boolean"
                },
                "value": {
                    "description": "Value of Lookup to SharePoint library/list metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LookupValue"
                        }
                    ]
                },
                "property": {
                    "type": "string"
                },
                "extensionAttribute": {
                    "type": "string"
                },
                "allowReferenceAsRoleInApprovalProcess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "BackupEnvironmentSetting": {
            "type": "object",
            "properties": {
                "isBackupSource": {
                    "default": false,
                    "type": "boolean"
                },
                "isBackupDestination": {
                    "default": false,
                    "type": "boolean"
                },
                "storagePolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                }
            }
        },
        "BookingRequestType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Auto",
                "Specify"
            ]
        },
        "BooleanChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "default": false,
                    "type": "boolean"
                },
                "originalValue": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "BooleanMetadataSettings": {
            "type": "object",
            "properties": {
                "enableTerms": {
                    "default": false,
                    "type": "boolean"
                },
                "value": {
                    "default": false,
                    "type": "boolean"
                },
                "termsAndConditions": {
                    "type": "string"
                },
                "trueDisplayValue": {
                    "type": "string"
                },
                "falseDisplayValue": {
                    "type": "string"
                },
                "termsAndConditionsContent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocalizedMetadataTermsAndConditionsModel"
                    }
                },
                "defaultTermLanguageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "BriefGroupPolicy": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enableLeaseExpiration": {
                    "default": false,
                    "type": "boolean"
                },
                "leaseExpiredInterval": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "leaseExpiredIntervalType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "enableManageGroupSharing": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInviteAuthorizedGuestUser": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInviteGuestUser": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "CategoryType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Contact",
                "License",
                "Organization"
            ]
        },
        "ChangeContactByUrlSetting": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "originalPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "newPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "newSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalPrimaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "newPrimaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalAdditionalAdministrators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "newAdditionalAdministrators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                }
            }
        },
        "ChangeContactByUserSetting": {
            "type": "object",
            "properties": {
                "currentUser": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "newUser": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "alternativeUser": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                }
            }
        },
        "ChangeContactMethod": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ChangeByUrl",
                "ChangeByUser"
            ]
        },
        "ChangeContactObjectModel": {
            "type": "object",
            "properties": {
                "objectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "powerPlatformName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "powerPlatformShowTargetObject": {
                    "type": "string"
                },
                "objectIdentity": {
                    "type": "string"
                },
                "environmentName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangedLicense": {
            "type": "object",
            "properties": {
                "licenseId": {
                    "format": "uuid",
                    "type": "string"
                },
                "licenseName": {
                    "type": "string"
                },
                "selectedAllForShow": {
                    "default": false,
                    "type": "boolean"
                },
                "selectedApps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServicePlanModel"
                    }
                }
            }
        },
        "ChangedMembership": {
            "type": "object",
            "properties": {
                "isChangeMemberShipType": {
                    "default": false,
                    "type": "boolean"
                },
                "membershipType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddGroupMemberType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Manually",
                        "Dynamically"
                    ]
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserMembershipInfo"
                    }
                },
                "originalDynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRule"
                    }
                },
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRule"
                    }
                },
                "subRequestIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangedSiteDesignModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "isOutOfBoxTemplate": {
                    "default": false,
                    "type": "boolean"
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "supportedWebTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTemplateTypeSetting"
                    }
                }
            }
        },
        "ChangedSiteDesignModelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedSiteDesignModel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedSiteDesignModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeExchangeResourceMembershipGalleryRequestModel": {
            "type": "object",
            "properties": {
                "changedGroupInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeExchangeResourceSettingsGroupModel"
                        }
                    ]
                },
                "changedGroupOwnership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedMembership"
                        }
                    ]
                },
                "changedGroupMembership": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedMembership"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeExchangeResourceSettingsGroupModel": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "workspaceType": {
                    "format": "int32",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeGroupPolicyRequest": {
            "description": "Change group policy request model",
            "type": "object",
            "properties": {
                "policy": {
                    "description": "The new policy information settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "originalPolicy": {
                    "description": "The original policy information settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ],
                    "readOnly": true
                },
                "isLeaseEnabled": {
                    "description": "Whether to enable the group/team lease extension.",
                    "default": false,
                    "type": "boolean"
                },
                "changePolicyConfig": {
                    "format": "int32",
                    "description": "Set how to assign the group policy.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "startDateType": {
                    "format": "int32",
                    "description": "Group lease start date configuration after a policy change",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StartDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "CurrentDate",
                        "SpecifiedDate"
                    ]
                },
                "specifyStartDate": {
                    "format": "date-time",
                    "description": "New lease start date",
                    "type": "string"
                },
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeGroupPolicyResult": {
            "type": "object",
            "properties": {
                "currentPolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "allPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "changePolicyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "startDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StartDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "CurrentDate",
                        "SpecifiedDate"
                    ]
                },
                "serviceSpecifyDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "isEnableLeaseExpired": {
                    "default": false,
                    "type": "boolean"
                },
                "leaseDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "leaseDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "currentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "isAllowAutoCancel": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangeGroupQuotaRequest": {
            "description": "Change group team site quota request model",
            "type": "object",
            "properties": {
                "groupQuotaSize": {
                    "format": "int64",
                    "description": "The new group team site quota size",
                    "default": 0,
                    "type": "integer"
                },
                "originalQuotaSize": {
                    "format": "int64",
                    "description": "The original group team site quota size",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "sharePointSiteSize": {
                    "format": "double",
                    "description": "sharepoint site size",
                    "type": "number"
                },
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeGroupQuotaResult": {
            "type": "object",
            "properties": {
                "allowedAnySize": {
                    "default": false,
                    "type": "boolean"
                },
                "minQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "maxQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "currentQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "sharePointSiteSize": {
                    "format": "double",
                    "description": "current uesd quota",
                    "type": "number"
                }
            }
        },
        "ChangeGroupRequestDescription": {
            "type": "object",
            "properties": {
                "groupDescription": {
                    "type": "string"
                },
                "originalGroupDescription": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeGroupRequestName": {
            "type": "object",
            "properties": {
                "groupDisplayName": {
                    "type": "string"
                },
                "originalGroupDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeGroupRequestVisibility": {
            "type": "object",
            "properties": {
                "isPublic": {
                    "default": false,
                    "type": "boolean"
                },
                "originalIsPublic": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeGroupSettingCheckResult": {
            "type": "object",
            "properties": {
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "groupId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "groupEmail": {
                    "type": "string"
                },
                "groupDescription": {
                    "type": "string"
                },
                "isEnableSubscribeMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableOutsideSender": {
                    "default": false,
                    "type": "boolean"
                },
                "classification": {
                    "type": "string"
                },
                "sensitivity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "isTeamsEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "enableManageGroupSharing": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInviteAuthorizedGuestUser": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInviteGuestUser": {
                    "default": false,
                    "type": "boolean"
                },
                "enableDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "enableTeamCollaboration": {
                    "default": false,
                    "type": "boolean"
                },
                "isHubSite": {
                    "default": false,
                    "type": "boolean"
                },
                "associatedHubSiteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleInfo"
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "enableChangeMembershipType": {
                    "default": false,
                    "type": "boolean"
                },
                "yammerGroupInfo": {
                    "type": "string"
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "networkId": {
                    "type": "string"
                },
                "groupObjectId": {
                    "type": "string"
                },
                "timeZoneSettings": {
                    "description": "timezone settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TimeZoneSettings"
                        }
                    ]
                },
                "localeSettings": {
                    "description": "Locale settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LocaleSettings"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangeGroupSettingRequest": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupEmail": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "originalGroupName": {
                    "type": "string"
                },
                "groupDescription": {
                    "type": "string"
                },
                "originalGroupDescription": {
                    "type": "string"
                },
                "originalYammerGroupInfo": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "groupOwners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupMembershipItem"
                    }
                },
                "groupMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupMembershipItem"
                    }
                },
                "isDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleInfo"
                    }
                },
                "enabledSubscribe": {
                    "default": false,
                    "type": "boolean"
                },
                "originalEnabledSubscribe": {
                    "default": false,
                    "type": "boolean"
                },
                "enabledOutsideSender": {
                    "default": false,
                    "type": "boolean"
                },
                "originalEnabledOutsideSender": {
                    "default": false,
                    "type": "boolean"
                },
                "hubSiteActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubsiteActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RegisterAsHubSite",
                        "AssociateToHubSite",
                        "UnRegisterAsHubSite",
                        "UnRegisterAndAssociateToHubSite"
                    ]
                },
                "associateHubSiteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "associateHubSiteTitle": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "originalClassification": {
                    "type": "string"
                },
                "sensitivity": {
                    "type": "string"
                },
                "originalSensitivity": {
                    "type": "string"
                },
                "enableTeams": {
                    "default": false,
                    "type": "boolean"
                },
                "originalEnableTeams": {
                    "default": false,
                    "type": "boolean"
                },
                "groupMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "originalGroupMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "changedDynamicGroupType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddGroupMemberType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Manually",
                        "Dynamically"
                    ]
                },
                "yammerGroupInfo": {
                    "type": "string"
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "networkId": {
                    "type": "string"
                },
                "groupObjectId": {
                    "type": "string"
                },
                "enableTeamCollaboration": {
                    "default": false,
                    "type": "boolean"
                },
                "timeZoneSettings": {
                    "description": "TimeZoneSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TimeZoneSettings"
                        }
                    ]
                },
                "originalTimeZoneSettings": {
                    "description": "OriginalTimeZoneSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TimeZoneSettings"
                        }
                    ]
                },
                "localeSettings": {
                    "description": "LocaleSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LocaleSettings"
                        }
                    ]
                },
                "originalLocaleSettings": {
                    "description": "OriginalLocaleSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LocaleSettings"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeGroupSettingService": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "groupRestriction": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyGroup",
                        "PartOf"
                    ]
                },
                "enableChangeName": {
                    "default": false,
                    "type": "boolean"
                },
                "preventDuplicateName": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeDescription": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeMemberSubscription": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeOutsideSenders": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangePrimaryContact": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeSecondaryContact": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddOwners": {
                    "default": false,
                    "type": "boolean"
                },
                "addOwnerRestriction": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "enableRemoveOwners": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "addMemberRestriction": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "enableRemoveMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeDynamicMembershipRules": {
                    "default": false,
                    "type": "boolean"
                },
                "enableRestrictDynamicMembershipRules": {
                    "default": false,
                    "type": "boolean"
                },
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleInfo"
                    }
                },
                "enableChangeDynamicMembershipRulesValue": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeTeamCollaboration": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeHubSite": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeClassification": {
                    "default": false,
                    "type": "boolean"
                },
                "classificationList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableChangeSensitivity": {
                    "default": false,
                    "type": "boolean"
                },
                "sensitivityList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "enableChangeMetadata": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddOrDeleteMetadata": {
                    "default": false,
                    "type": "boolean"
                },
                "metadataList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "enableChangeMembershipType": {
                    "default": false,
                    "type": "boolean"
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "enableChangeYammerGroupInfo": {
                    "default": false,
                    "type": "boolean"
                },
                "scopePeoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupSettingRequest"
                        }
                    ]
                },
                "isChangeTimeZoneEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "isChangeLocaleEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeGroupSettingsModel": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeGroupSettingValidationParameter": {
            "type": "object",
            "properties": {
                "groupEmail": {
                    "type": "string"
                },
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangeHubsiteActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "RegisterAsHubSite",
                "AssociateToHubSite",
                "UnRegisterAsHubSite",
                "UnRegisterAndAssociateToHubSite"
            ]
        },
        "ChangeHubSiteContentModel": {
            "type": "object",
            "properties": {
                "enabledUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "hubSiteTitle": {
                    "type": "string"
                },
                "hubSiteId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "ChangeHubSiteContentModelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubSiteContentModel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubSiteContentModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeHubSiteMethod": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "RegisterAsHubSite",
                "UnRegisterAsHubSite",
                "ChangeHubSetting",
                "ChangeHubAssociation"
            ]
        },
        "ChangeLicenseGallery": {
            "type": "object",
            "properties": {
                "usersInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeLicenseUserModel"
                        }
                    ]
                },
                "licenseDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeLicenseModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeLicenseModel": {
            "type": "object",
            "properties": {
                "licensesInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangedLicense"
                    }
                },
                "licenseUpdateInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LicenseUpdateInfo"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeLicenseUserModel": {
            "type": "object",
            "properties": {
                "usersInfo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeListSettingObjectInfo": {
            "type": "object",
            "properties": {
                "siteUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "objectTitle": {
                    "type": "string"
                }
            }
        },
        "ChangeListSettingRequest": {
            "type": "object",
            "properties": {
                "objectInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeListSettingObjectInfo"
                        }
                    ]
                },
                "listTitle": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "listDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "navigationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/BooleanChangedProperty"
                        }
                    ]
                },
                "versionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListVersionSettingsChangedProperty"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeListSettingService": {
            "type": "object",
            "properties": {
                "isEnableChangeTitle": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableChangeDescription": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableChangeQuickLaunch": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableChangeVersion": {
                    "default": false,
                    "type": "boolean"
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeListSettingRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeListSettingValidateResult": {
            "type": "object",
            "properties": {
                "siteUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SPList"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangeMetadataActionSetting": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddOrDelete": {
                    "default": false,
                    "type": "boolean"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                }
            }
        },
        "ChangePermissionRequest": {
            "type": "object",
            "properties": {
                "objectProperty": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionObjectProperty"
                        }
                    ]
                },
                "permissionChangedType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionChangedType"
                        }
                    ],
                    "x-enum-varnames": [
                        "RemovePermission",
                        "ChangePermission"
                    ]
                },
                "isManagedAllUsers": {
                    "default": false,
                    "type": "boolean"
                },
                "selectedUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangePermissionService": {
            "type": "object",
            "properties": {
                "selectedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "uncheckedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "userRestrictionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "permissionChangedType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionChangedType"
                        }
                    ],
                    "x-enum-varnames": [
                        "RemovePermission",
                        "ChangePermission"
                    ]
                },
                "permissionChangedTypeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enabledExcludePermissions": {
                    "default": false,
                    "type": "boolean"
                },
                "excludedPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                },
                "reviewTaskEmailTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "stageCount": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangePermissionRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangePermissionValidateResult": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webServerRelativeUrl": {
                    "type": "string"
                },
                "listTitle": {
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "isInherit": {
                    "default": false,
                    "type": "boolean"
                },
                "inheritNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "topInheritUrl": {
                    "type": "string"
                },
                "checkType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "userMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/UserInfo"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangePolicyActionSetting": {
            "type": "object",
            "properties": {
                "startDateType": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "specifyDateTicks": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "changePolicyConfig": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "isAllowAutoCancel": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangePrivateChannelCheckResult": {
            "description": "Change PrivateChannel Check Result",
            "type": "object",
            "properties": {
                "team": {
                    "description": "Team",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "channels": {
                    "description": "Channels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangePrivateChannelFieldModel": {
            "description": "Change PrivateChannel field",
            "type": "object",
            "properties": {
                "changePrivateChannelFieldName": {
                    "format": "int32",
                    "description": "Change PrivateChannel field name",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangePrivateChannelFieldName"
                        }
                    ],
                    "x-enum-varnames": [
                        "Name",
                        "Description",
                        "Members",
                        "Owners"
                    ]
                },
                "isEnabled": {
                    "description": "Is enabled",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangePrivateChannelFieldName": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Name",
                "Description",
                "Members",
                "Owners"
            ]
        },
        "ChangePrivateChannelQuotaModel": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "changePrivateChannelQuotaType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangePrivateChannelQuotaType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AllowAllValue",
                        "WithinSpecifyValue"
                    ]
                },
                "withinSpecifyValue": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "ChangePrivateChannelQuotaType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AllowAllValue",
                "WithinSpecifyValue"
            ]
        },
        "ChangePrivateChannelRequest": {
            "description": "Change PrivateChannel Request",
            "type": "object",
            "properties": {
                "team": {
                    "description": "Channel parent team",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "channel": {
                    "description": "Channel",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "name": {
                    "description": "Channnel name",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "channelDescription": {
                    "description": "Channnel description",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "owners": {
                    "description": "Channnel owners",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserIListChangedProperty"
                        }
                    ]
                },
                "members": {
                    "description": "Channnel members",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserIListChangedProperty"
                        }
                    ]
                },
                "enableChangePrivateChannelQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "quotaStorage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Int64ChangedProperty"
                        }
                    ]
                },
                "quotaStorageUsed": {
                    "format": "double",
                    "type": "number"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangePrivateChannelService": {
            "description": "Change PrivateChannel Service",
            "type": "object",
            "properties": {
                "changePrivateChannelFields": {
                    "description": "Change PrivateChannel fields",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangePrivateChannelFieldModel"
                    }
                },
                "changePrivateChannelQuotaSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangePrivateChannelQuotaModel"
                        }
                    ]
                },
                "tenantId": {
                    "format": "uuid",
                    "description": "Tenant id",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Base model of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    ]
                }
            }
        },
        "ChangePrivateChannelValidationParameter": {
            "description": "Change PrivateChannel Validation Parameter",
            "type": "object",
            "properties": {
                "teamObjectId": {
                    "format": "uuid",
                    "description": "team object id",
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "description": "tenant id",
                    "type": "string"
                },
                "taskId": {
                    "format": "uuid",
                    "description": "Task id",
                    "type": "string"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangeSecurityGroupSettingsGalleryRequestModel": {
            "type": "object",
            "properties": {
                "changeGroupVisibility": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupRequestVisibility"
                        }
                    ]
                },
                "groupSettingInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupSettingsModel"
                        }
                    ]
                },
                "changeGroupName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupRequestName"
                        }
                    ]
                },
                "changeGroupDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupRequestDescription"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeSharedChannelGallery": {
            "type": "object",
            "properties": {
                "sharedChannelInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSharedChannelModel"
                        }
                    ]
                },
                "sharedChannelName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharedChannelName"
                        }
                    ]
                },
                "sharedChannelDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharedChannelDescription"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharedChannelChangedMembership"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharedChannelChangedMembership"
                        }
                    ]
                },
                "siteStorage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteStorageSettingModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeSharedChannelModel": {
            "type": "object",
            "properties": {
                "channelId": {
                    "type": "string"
                },
                "channelName": {
                    "type": "string"
                },
                "channelSiteUrl": {
                    "type": "string"
                },
                "teamId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "teamEmail": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSharedMailboxModel": {
            "type": "object",
            "properties": {
                "mailboxId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSharedMailboxPermissionGallery": {
            "type": "object",
            "properties": {
                "changedSharedMailboxInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSharedMailboxModel"
                        }
                    ]
                },
                "changedMembers": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedMembership"
                        }
                    ]
                },
                "changedSendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedMembership"
                        }
                    ]
                },
                "changedSendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedMembership"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeSiteContactElectionProfileModel": {
            "type": "object",
            "properties": {
                "changeSiteProfileOngoingAction": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteProfileOngoingActionModel"
                        }
                    ]
                },
                "originalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "destinationProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteContactRequest": {
            "type": "object",
            "properties": {
                "changeContactMethod": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "ChangeByUrl",
                        "ChangeByUser"
                    ]
                },
                "changeByUrlSetting": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeContactByUrlSetting"
                    }
                },
                "changeByUserSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactByUserSetting"
                        }
                    ]
                },
                "subRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeSiteContactSubRequest"
                    },
                    "readOnly": true
                },
                "isServiceEnableChangeContact": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "isServiceEnableChangeAdmin": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeSiteContactService": {
            "type": "object",
            "properties": {
                "enableChangeContact": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeAdmin": {
                    "default": false,
                    "type": "boolean"
                },
                "changedMethod": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "ChangeByUrl",
                        "ChangeByUser"
                    ]
                },
                "changeModeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteContactRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeSiteContactSubRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "assignTo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "reason": {
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "statusDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "adminContactSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactByUrlSetting"
                        }
                    ]
                },
                "progressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                }
            }
        },
        "ChangeSiteContactValidateResult": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "primaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "additionalAdministrators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangeSiteExternalSharingProfileModel": {
            "type": "object",
            "properties": {
                "originalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "destinationProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteHubSiteRequestModel": {
            "type": "object",
            "properties": {
                "method": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubSiteMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RegisterAsHubSite",
                        "UnRegisterAsHubSite",
                        "ChangeHubSetting",
                        "ChangeHubAssociation"
                    ]
                },
                "changeHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubSiteContentModelChangedValueRequestModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteObjectModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "isManagedByGAO": {
                    "default": false,
                    "type": "boolean"
                },
                "isGroupSite": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSitePolicyRequest": {
            "description": "Change site collection policy request model",
            "type": "object",
            "properties": {
                "policy": {
                    "description": "The new site collection policy information settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "originalPolicy": {
                    "description": "The original site collection policy information settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ],
                    "readOnly": true
                },
                "isLeaseEnabled": {
                    "description": "Whether to enable the site collection lease extension.",
                    "default": false,
                    "type": "boolean"
                },
                "changePolicyConfig": {
                    "format": "int32",
                    "description": "Set how to assign the site collection policy.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "startDateType": {
                    "format": "int32",
                    "description": "Site collection lease start date configuration after a policy change",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StartDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "CurrentDate",
                        "SpecifiedDate"
                    ]
                },
                "specifyStartDate": {
                    "format": "date-time",
                    "description": "New lease start date",
                    "type": "string"
                },
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeSitePolicySetting": {
            "type": "object",
            "properties": {
                "currentPolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "allPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "changePolicyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "startDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StartDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "CurrentDate",
                        "SpecifiedDate"
                    ]
                },
                "serviceSpecifyDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "isEnableLeaseExpired": {
                    "default": false,
                    "type": "boolean"
                },
                "leaseDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "leaseDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "currentStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "isAllowAutoCancel": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ChangeSiteProfileOngoingActionModel": {
            "type": "object",
            "properties": {
                "handleOngoingType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleOngoingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Skip",
                        "CancelOngoing"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                }
            }
        },
        "ChangeSiteProfilesGallery": {
            "type": "object",
            "properties": {
                "siteProfileInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteProfilesModel"
                        }
                    ]
                },
                "siteExternalSharingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteExternalSharingProfileModel"
                        }
                    ]
                },
                "siteStorageManagementProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteStorageManagementProfileModel"
                        }
                    ]
                },
                "siteContactElectionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteContactElectionProfileModel"
                        }
                    ]
                },
                "siteRenewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteRenewProfileModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeSiteProfilesModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "isManagedByGAO": {
                    "default": false,
                    "type": "boolean"
                },
                "objectName": {
                    "type": "string"
                },
                "objectIdentity": {
                    "type": "string"
                },
                "originalPolicyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteQuotaRequest": {
            "description": "Change site collection quota request model",
            "type": "object",
            "properties": {
                "quotaSize": {
                    "format": "int32",
                    "description": "The new site collection quota size",
                    "default": 0,
                    "type": "integer"
                },
                "sharePointSiteSize": {
                    "format": "double",
                    "description": "sharepoint site size",
                    "type": "number"
                },
                "currentQuota": {
                    "format": "double",
                    "description": "CurrentQuota",
                    "type": "number"
                },
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeSiteQuotaSettings": {
            "type": "object",
            "properties": {
                "allowedAnySize": {
                    "default": false,
                    "type": "boolean"
                },
                "minQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "maxQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "currentQuotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "sharePointSiteSize": {
                    "format": "double",
                    "description": "sharepoint site size",
                    "type": "number"
                }
            }
        },
        "ChangeSiteRenewProfileModel": {
            "type": "object",
            "properties": {
                "changeSiteProfileOngoingAction": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteProfileOngoingActionModel"
                        }
                    ]
                },
                "originalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "destinationProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteSettingGalleryRequestModel": {
            "type": "object",
            "properties": {
                "siteInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteObjectModel"
                        }
                    ]
                },
                "changedSiteTitle": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabelChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteClassification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModelChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteStorage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteStorageSettingModel"
                        }
                    ]
                },
                "changedSiteTimeZone": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Int32ChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteLocale": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Int32ChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangedSiteDesignModelChangedValueRequestModel"
                        }
                    ]
                },
                "changedSiteHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteHubSiteRequestModel"
                        }
                    ]
                },
                "changedSiteSharing": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteSharingRequestModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeSiteSettingRequest": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site title",
                    "type": "string"
                },
                "siteTitleSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "siteDescriptionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "enableChangedMetadata": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "changedMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "originalSiteMetadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    },
                    "readOnly": true
                },
                "deploymentPlanName": {
                    "type": "string"
                },
                "hubSiteSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteChangedSettings"
                        }
                    ]
                },
                "siteSensitivitySetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeSiteSettingService": {
            "type": "object",
            "properties": {
                "enableChangeTitle": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeDescription": {
                    "default": false,
                    "type": "boolean"
                },
                "changeMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeMetadataActionSetting"
                        }
                    ]
                },
                "deploymentManagerPlanSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DpmServiceSetting"
                        }
                    ]
                },
                "enableChangeHubSite": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeSensitivity": {
                    "default": false,
                    "type": "boolean"
                },
                "sensitivityList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SensitivityLabelModel"
                    }
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteSettingRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeSiteSettingValidateResult": {
            "type": "object",
            "properties": {
                "siteUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteTitle": {
                    "type": "string"
                },
                "siteDescription": {
                    "type": "string"
                },
                "isEnableChangeHubSite": {
                    "default": false,
                    "type": "boolean"
                },
                "isModernSite": {
                    "default": false,
                    "type": "boolean"
                },
                "isHubSite": {
                    "default": false,
                    "type": "boolean"
                },
                "associatedHubSiteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "primaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "sensitivity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangeSiteSharingRequestModel": {
            "type": "object",
            "properties": {
                "externalSharing": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingCapabilitiesChangedValueRequestModel"
                        }
                    ]
                },
                "guestAccessExpireSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingExpireSettingModelChangedValueRequestModel"
                        }
                    ]
                },
                "sharingAdvanceSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingAdvanceSettingModelChangedValueRequestModel"
                        }
                    ]
                },
                "sharingLinkType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingLinkTypeChangedValueRequestModel"
                        }
                    ]
                },
                "anyoneLinksExpireSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingExpireSettingModelChangedValueRequestModel"
                        }
                    ]
                },
                "linkPermissionType": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkPermissionTypeChangedValueRequestModel"
                        }
                    ]
                },
                "tenantLevelSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPTenantSharingSettingModel"
                        }
                    ]
                },
                "isEnableSensitivityLabel": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteStorageManagementProfileModel": {
            "type": "object",
            "properties": {
                "originalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "destinationProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeSiteStorageSettingModel": {
            "type": "object",
            "properties": {
                "changedSiteStorage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Int64ChangedValueRequestModel"
                        }
                    ]
                },
                "originalStorageUsage": {
                    "format": "double",
                    "type": "number"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamClassificationAndSensitivityLabel": {
            "type": "object",
            "properties": {
                "sensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "originalSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "classification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassification"
                        }
                    ]
                },
                "originalClassification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassification"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamDisplayName": {
            "type": "object",
            "properties": {
                "teamDisplayName": {
                    "type": "string"
                },
                "originalTeamDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamFunStuff": {
            "type": "object",
            "properties": {
                "allowGiphy": {
                    "default": false,
                    "type": "boolean"
                },
                "giphyContentRating": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTemplateGiphyRatingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Moderate",
                        "Strict",
                        "UnknownFutureValue"
                    ]
                },
                "allowStickersAndMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCustomMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowGiphy": {
                    "default": false,
                    "type": "boolean"
                },
                "originalGiphyContentRating": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTemplateGiphyRatingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Moderate",
                        "Strict",
                        "UnknownFutureValue"
                    ]
                },
                "originalAllowStickersAndMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowCustomMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamMemberPermission": {
            "type": "object",
            "properties": {
                "allowCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreatePrivateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowAddRemoveApps": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreateUpdateRemoveTabs": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreateUpdateRemoveConnectors": {
                    "default": false,
                    "type": "boolean"
                },
                "allowEditMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "allowDeleteMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowCreatePrivateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowAddRemoveApps": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowCreateUpdateRemoveTabs": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowCreateUpdateRemoveConnectors": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowEditMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowDeleteMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamMentions": {
            "type": "object",
            "properties": {
                "allowTeamMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "allowChannelMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowTeamMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowChannelMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamPrivacySetting": {
            "type": "object",
            "properties": {
                "originalEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamRequestDescription": {
            "type": "object",
            "properties": {
                "teamDescription": {
                    "type": "string"
                },
                "originalTeamDescription": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTeamSettingGalleryRequestModel": {
            "type": "object",
            "properties": {
                "teamSettingInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamSettingModel"
                        }
                    ]
                },
                "changeTeamDisplayName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamDisplayName"
                        }
                    ]
                },
                "changeTeamDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamRequestDescription"
                        }
                    ]
                },
                "changeTeamPrivacySetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamPrivacySetting"
                        }
                    ]
                },
                "changeTeamClassificationAndSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamClassificationAndSensitivityLabel"
                        }
                    ]
                },
                "changeTeamOutlookExperience": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OutlookExperience"
                        }
                    ]
                },
                "changeGlobalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "funStuffSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamFunStuff"
                        }
                    ]
                },
                "mentions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamMentions"
                        }
                    ]
                },
                "changeTeamMemberPermission": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeTeamMemberPermission"
                        }
                    ]
                },
                "guestPermissions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestPermissions"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ChangeTeamSettingModel": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sharedPointSiteUrl": {
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ChangeTemplateGiphyRatingType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Moderate",
                "Strict",
                "UnknownFutureValue"
            ]
        },
        "ChangeWebContactByUrlSetting": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webTitle": {
                    "description": "Web title",
                    "type": "string"
                },
                "primaryContact": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserChangedProperty"
                        }
                    ]
                },
                "secondaryContact": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserChangedProperty"
                        }
                    ]
                }
            }
        },
        "ChangeWebContactRequest": {
            "type": "object",
            "properties": {
                "changedMethod": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "ChangeByUrl",
                        "ChangeByUser"
                    ]
                },
                "changedByUserSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactByUserSetting"
                        }
                    ]
                },
                "changedByUrlItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeWebContactByUrlSetting"
                    }
                },
                "subRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeWebContactSubRequest"
                    },
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeWebContactService": {
            "type": "object",
            "properties": {
                "selectedNodes": {
                    "type": "string"
                },
                "unCheckedNodesInfo": {
                    "type": "string"
                },
                "changeMethod": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "ChangeByUrl",
                        "ChangeByUser"
                    ]
                },
                "changeMethodAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enableNotifyNewContact": {
                    "default": false,
                    "type": "boolean"
                },
                "newContactNotifiedEmail": {
                    "format": "uuid",
                    "type": "string"
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeWebContactRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeWebContactSubRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "assignTo": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "statusDescription": {
                    "type": "string"
                },
                "progressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "contactChangeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeWebContactByUrlSetting"
                        }
                    ]
                }
            }
        },
        "ChangeWebContactValidateResult": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChangeWebSettingRequest": {
            "type": "object",
            "properties": {
                "url": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeWebSPObject"
                        }
                    ]
                },
                "changedTitle": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "changedDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "changedMetadata": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestMetadataListChangedProperty"
                        }
                    ]
                },
                "deploymentPlanName": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ChangeWebSettingService": {
            "type": "object",
            "properties": {
                "enableChangeTitle": {
                    "default": false,
                    "type": "boolean"
                },
                "enableChangeDescription": {
                    "default": false,
                    "type": "boolean"
                },
                "changeMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeMetadataActionSetting"
                        }
                    ]
                },
                "deploymentManagerPlanSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DpmServiceSetting"
                        }
                    ]
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeWebSettingRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ChangeWebSPObject": {
            "type": "object",
            "properties": {
                "siteUrl": {
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webTitle": {
                    "description": "Web Title",
                    "type": "string"
                }
            }
        },
        "ChangeWebUrlValidateResult": {
            "type": "object",
            "properties": {
                "url": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeWebSPObject"
                        }
                    ]
                },
                "webTitle": {
                    "type": "string"
                },
                "webDescription": {
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ChoiceMetadataSettings": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "choiceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChoiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "DropDown",
                        "RadioButton",
                        "CheckBoxes"
                    ]
                }
            }
        },
        "ChoiceType": {
            "format": "int32",
            "enum": [
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "DropDown",
                "RadioButton",
                "CheckBoxes"
            ]
        },
        "ClonePermissionAdditionalOption": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AddUserToTheSameGroup",
                "GranPermissionDirectly"
            ]
        },
        "ClonePermissionOption": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Append",
                "Replace"
            ]
        },
        "ClonePermissionRequest": {
            "type": "object",
            "properties": {
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourceUser": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "targetUser": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "cloneOption": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClonePermissionOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "Append",
                        "Replace"
                    ]
                },
                "additionalCloneOption": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClonePermissionAdditionalOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "AddUserToTheSameGroup",
                        "GranPermissionDirectly"
                    ]
                },
                "enabledRemoveExplicitPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "enabledRemoveUserFromSPGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "enabledDeleteUserPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ClonePermissionService": {
            "type": "object",
            "properties": {
                "selectedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "uncheckedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "sourceUserRestrictionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "targetUserRestrictionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "cloneOption": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClonePermissionOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "Append",
                        "Replace"
                    ]
                },
                "clonePermissionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "additionalCloneOption": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClonePermissionAdditionalOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "AddUserToTheSameGroup",
                        "GranPermissionDirectly"
                    ]
                },
                "cloneAdditionalOptionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enabledRemoveExplicitPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "enabledRemoveUserFromSPGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "enabledDeleteUserPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "transferOptionValueAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "isHideTree": {
                    "default": false,
                    "type": "boolean"
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClonePermissionRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ClonePermissionValidateResult": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "CloneTeam": {
            "description": "Request activity model for clone team settings",
            "type": "object",
            "properties": {
                "cloneTeamId": {
                    "type": "string"
                },
                "cloneTeamTitle": {
                    "type": "string"
                },
                "enableCloneChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneApps": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTabs": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamSetting": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CommentsParam": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "string"
                }
            }
        },
        "CommonSharingExpirationType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SameAsOrganization",
                "NeverExpire",
                "AllowExpire"
            ]
        },
        "CommonStatus": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Inactive",
                "Active"
            ]
        },
        "Communication": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ConflictResolutionSetting": {
            "type": "object",
            "properties": {
                "containerConflictSolution": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConflictSolutionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Skip",
                        "NotOverWrite",
                        "Append",
                        "OverWrite",
                        "Replace",
                        "Merge",
                        "OverWritebyLastModifiedTime",
                        "None"
                    ]
                },
                "isCheckLowerObject": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableContentConflictResolution": {
                    "default": false,
                    "type": "boolean"
                },
                "contentConflictSolution": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConflictSolutionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Skip",
                        "NotOverWrite",
                        "Append",
                        "OverWrite",
                        "Replace",
                        "Merge",
                        "OverWritebyLastModifiedTime",
                        "None"
                    ]
                },
                "appConflictSolution": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConflictSolutionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Skip",
                        "NotOverWrite",
                        "Append",
                        "OverWrite",
                        "Replace",
                        "Merge",
                        "OverWritebyLastModifiedTime",
                        "None"
                    ]
                }
            }
        },
        "ConflictSolutionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Skip",
                "NotOverWrite",
                "Append",
                "OverWrite",
                "Replace",
                "Merge",
                "OverWritebyLastModifiedTime",
                "None"
            ]
        },
        "ConstructedUrl": {
            "type": "object",
            "properties": {
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ConstructGroupId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ConstructureType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Text",
                "Metadata",
                "Attribute"
            ]
        },
        "Contact": {
            "description": "Activity model for primary contact,secondary contact",
            "type": "object",
            "properties": {
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ContactInformation": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ContainerInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remoteNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RemoteNodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SiteCollection",
                        "Mailbox",
                        "OneDrive",
                        "Office365GroupSites",
                        "Office365GroupMailboxes",
                        "Office365Group",
                        "ProjectOnline",
                        "PublicFolder"
                    ]
                }
            }
        },
        "ContainerScopeSetting": {
            "type": "object",
            "properties": {
                "container": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContainerInfo"
                        }
                    ]
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContainerScopeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Include",
                        "Exclude"
                    ]
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RemoteNodeInfo"
                    }
                }
            }
        },
        "ContainerScopeType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Include",
                "Exclude"
            ]
        },
        "ContentMoveAction": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Merge",
                "Attach"
            ]
        },
        "ContentMoveCommonSetting": {
            "type": "object",
            "properties": {
                "isIncludeVersions": {
                    "default": false,
                    "type": "boolean"
                },
                "isIncludeWorkflowDefinition": {
                    "default": false,
                    "type": "boolean"
                },
                "isDisableInformationRightsManagement": {
                    "default": false,
                    "type": "boolean"
                },
                "isPreserveNullColumnValues": {
                    "default": false,
                    "type": "boolean"
                },
                "isKeepModifiedByAndModifiedTime": {
                    "default": false,
                    "type": "boolean"
                },
                "profileMappings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveProfileMappings"
                        }
                    ]
                },
                "backupSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/BackupEnvironmentSetting"
                        }
                    ]
                },
                "conflictResolutionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConflictResolutionSetting"
                        }
                    ]
                },
                "filterPolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "deleteType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DeleteType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Manually",
                        "Auto"
                    ]
                },
                "isDeleteCheckedFiles": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ContentMoveMethod": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Copy",
                "Move"
            ]
        },
        "ContentMoveProfileMappings": {
            "type": "object",
            "properties": {
                "columnMapping": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "contentTypeMapping": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "userMapping": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "languageMapping": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                }
            }
        },
        "ContentMoveProfiles": {
            "type": "object",
            "properties": {
                "backupEnvironmentStoragePolices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "columnMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "contentTypeMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "userMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "languageMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "filterPolices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                }
            }
        },
        "ContentMoveRequest": {
            "type": "object",
            "properties": {
                "method": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "Copy",
                        "Move"
                    ]
                },
                "copySettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSetting"
                        }
                    ]
                },
                "moveSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSetting"
                        }
                    ]
                },
                "commonSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveCommonSetting"
                        }
                    ]
                },
                "objectMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContentMoveSPObjectMapping"
                    }
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ContentMoveService": {
            "type": "object",
            "properties": {
                "method": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveMethod"
                        }
                    ],
                    "x-enum-varnames": [
                        "Copy",
                        "Move"
                    ]
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "Merge",
                        "Attach"
                    ]
                },
                "copySettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSetting"
                        }
                    ]
                },
                "moveSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSetting"
                        }
                    ]
                },
                "commonSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveCommonSetting"
                        }
                    ]
                },
                "conflictResolutionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "deleteTypeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "deleteCheckedFilesAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "filterPolicyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "methodAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "actionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "copySettingAssignBy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSettingAssignBy"
                        }
                    ]
                },
                "moveSettingAssignBy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CopyMoveSettingAssignBy"
                        }
                    ]
                },
                "versionsAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "workflowAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "informationRightsManagementAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "nullColumnValueAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "modifiedByAndModifiedTimeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "mappingSettingAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "backupEnvironmentAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ContentMoveSPObject": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "fullUrl": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                }
            }
        },
        "ContentMoveSPObjectMapping": {
            "type": "object",
            "properties": {
                "source": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveSPObject"
                        }
                    ]
                },
                "destination": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveSPObject"
                        }
                    ]
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "Merge",
                        "Attach"
                    ]
                }
            }
        },
        "ContentMoveUrlValidationParameter": {
            "type": "object",
            "properties": {
                "isCheckSourceUrl": {
                    "default": false,
                    "type": "boolean"
                },
                "uri": {
                    "format": "uri",
                    "type": "string"
                },
                "ignoreLock": {
                    "default": false,
                    "type": "boolean"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ContentMoveUrlValidationResult": {
            "type": "object",
            "properties": {
                "object": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentMoveSPObject"
                        }
                    ]
                },
                "listBaseType": {
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ContentTypes": {
            "type": "object",
            "properties": {
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ContructUrlSetting": {
            "type": "object",
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "suffix": {
                    "type": "string"
                },
                "connection": {
                    "type": "string"
                },
                "contructUrlAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "ConvertAutomaticReply": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ReplyOnlyInternalSender",
                "ReplyAllExternalSender"
            ]
        },
        "ConvertEmail": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ForwardInternalEmail",
                "ForwardExternalEmail"
            ]
        },
        "ConvertHubSite": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "RegisterAsHubSite",
                "AssociateWithHubSite"
            ]
        },
        "ConvertHubSiteActionType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ConvertToHubSite",
                "AssociateOneHubSite"
            ]
        },
        "CopyMoveSetting": {
            "type": "object",
            "properties": {
                "isMigrateConfiguration": {
                    "default": false,
                    "type": "boolean"
                },
                "isKeepLookAndFeel": {
                    "default": false,
                    "type": "boolean"
                },
                "columnsAndContentConflictResolution": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ItemConflictResolutionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "DoNotMigrateTheItems",
                        "OverwriteIdenticalItemsInDestination",
                        "Append",
                        "IgnoreDifferenceAndMoveItems"
                    ]
                },
                "isMigrateSecurity": {
                    "default": false,
                    "type": "boolean"
                },
                "isMigrateColumnsAndContentTypes": {
                    "default": false,
                    "type": "boolean"
                },
                "isMigrateContent": {
                    "default": false,
                    "type": "boolean"
                },
                "isMigrateContentIncludeListAttachment": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "CopyMoveSettingAssignBy": {
            "type": "object",
            "properties": {
                "configurationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "securityAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "contentAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "CreateDistributionListGallery": {
            "type": "object",
            "properties": {
                "communication": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Communication"
                        }
                    ]
                },
                "membershipApproval": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MembershipApproval"
                        }
                    ]
                },
                "messageApproval": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageApproval"
                        }
                    ]
                },
                "deliveryManagement": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DeliveryManagement"
                        }
                    ]
                },
                "groupEmailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailAddress"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "groupEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "sendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "sendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "groupContact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateEquipmentMailboxGallery": {
            "type": "object",
            "properties": {
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "contacts": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "fullAccessUsers": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "emailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailAddress"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxExchangeGlobalAddressListRequestModel"
                        }
                    ]
                },
                "mailboxEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "mailboxName": {
                    "type": "string",
                    "readOnly": true
                },
                "sendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "sendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "multiGeoLocationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoLocationSetting"
                        }
                    ]
                },
                "addressBookPolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxAddressBookPolicyRequestModel"
                        }
                    ]
                },
                "alias": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxAliasRequestModel"
                        }
                    ]
                },
                "bookingDelegateSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxBookingDelegateSettingRequestModel"
                        }
                    ]
                },
                "bookingOption": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxBookingOptionRequestModel"
                        }
                    ]
                },
                "capacity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxCapacityRequestModel"
                        }
                    ]
                },
                "contactInformation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxContactInformationRequestModel"
                        }
                    ]
                },
                "company": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxCompanyRequestModel"
                        }
                    ]
                },
                "department": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxDepartmentRequestModel"
                        }
                    ]
                },
                "disableAccountSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxDisableAccountRequestModel"
                        }
                    ]
                },
                "mailTip": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxMailTipRequestModel"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateGroupGallery": {
            "type": "object",
            "properties": {
                "administrativeUnit": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AdministrativeUnit"
                        }
                    ]
                },
                "objectId": {
                    "type": "string"
                },
                "contentTypes": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentTypes"
                        }
                    ]
                },
                "nameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "contact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "groupId": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConstructGroupId"
                        }
                    ]
                },
                "hubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSetting"
                        }
                    ]
                },
                "multiGeoLocationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoLocationSetting"
                        }
                    ]
                },
                "subscribeMembers": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SubscribeMembers"
                        }
                    ]
                },
                "outsideSenders": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OutsideSenders"
                        }
                    ]
                },
                "groupSendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "groupSendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "privacy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Privacy"
                        }
                    ]
                },
                "outlookExperience": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OutlookExperience"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "classificationAndSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassificationAndSensitivityLabel"
                        }
                    ]
                },
                "governancePanel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GovernancePanel"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "externalSharingSettingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingProfile"
                        }
                    ]
                },
                "quotaSettingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QuotaProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "locale": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamLocale"
                        }
                    ]
                },
                "timeZone": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamTimeZone"
                        }
                    ]
                },
                "showLinksInRequestDetailsPage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShowLinksInRequestDetailsPage"
                        }
                    ]
                },
                "siteDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteDesign"
                        }
                    ]
                },
                "welcomeEmail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WelcomeEmail"
                        }
                    ]
                },
                "dynamicMembershipRules": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicMembership"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "teamEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateGroupRequest": {
            "description": "Create group request model",
            "type": "object",
            "properties": {
                "groupType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "groupId": {
                    "description": "An entire group ID",
                    "type": "string"
                },
                "groupIdWithoutPrefixSuffix": {
                    "description": "Group ID (without prefix and suffix)",
                    "type": "string"
                },
                "groupName": {
                    "description": "An entire group name",
                    "type": "string"
                },
                "groupNameWithoutPrefixSuffix": {
                    "description": "Group name (without prefix and suffix)",
                    "type": "string"
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "policy": {
                    "format": "uuid",
                    "description": "The ID of a group policy. You can get IDs and names of all available policies by invoking the GetCreateGroupServiceApi.",
                    "type": "string"
                },
                "groupDescription": {
                    "description": "Group description",
                    "type": "string"
                },
                "owners": {
                    "description": "Group owners",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "members": {
                    "description": "Group members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "privacy": {
                    "description": "The privacy settings of a group. Whether to allow anyone can see group content or only allow members to see group content.",
                    "default": false,
                    "type": "boolean"
                },
                "subscribe": {
                    "description": "Whether to allow group members to receive copies of group conversations and events.",
                    "default": false,
                    "type": "boolean"
                },
                "outsideSender": {
                    "description": "Whether to allow users outside the organization to send e-mails to groups.",
                    "default": false,
                    "type": "boolean"
                },
                "enableTeamCollaboration": {
                    "description": "Enable a team for the group.",
                    "default": false,
                    "type": "boolean"
                },
                "language": {
                    "description": "The language of a group. You can get IDs and names of all available languages by invoking the GetCreateGroupServiceApi.",
                    "type": "string"
                },
                "classification": {
                    "description": "Group classification",
                    "type": "string"
                },
                "sensitivity": {
                    "description": "Group sensitive lable id",
                    "type": "string"
                },
                "sensitivityName": {
                    "description": "Group sensitive lable name",
                    "type": "string"
                },
                "links": {
                    "description": "Links of the group related objects. You can get IDs and names of all group related objects by invoking the GetCreateGroupServiceApi.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupLinks"
                        }
                    ],
                    "readOnly": true
                },
                "leasePeriodSettings": {
                    "description": "Group lease period settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupLeasePeriodSettings"
                        }
                    ]
                },
                "teamsSettings": {
                    "description": "Team members permission settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestTeamsSettings"
                        }
                    ]
                },
                "appliedSiteDesignId": {
                    "format": "uuid",
                    "description": "The ID of the group team site design. You can get IDs and names of all group team sites by invoking the GetCreateGroupServiceApi.",
                    "type": "string"
                },
                "primaryContact": {
                    "description": "Primary group contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "Secondary group contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "enableGroupMembershipHidden": {
                    "description": "Whether to hide the group members from users who are not members of the group.",
                    "default": false,
                    "type": "boolean"
                },
                "enableAssignedMembership": {
                    "description": "Whether to allow to copy team members from existing teams.",
                    "default": false,
                    "type": "boolean"
                },
                "enableDynamicMembership": {
                    "description": "Whether to use dynamic membership rules to get group members.",
                    "default": false,
                    "type": "boolean"
                },
                "templateSettings": {
                    "description": "Teams template settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamsTemplateSettings"
                        }
                    ]
                },
                "dynamicMembershipRules": {
                    "description": "Dynamic group membership rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleInfo"
                    }
                },
                "multiGeoLocation": {
                    "description": "Multi-geo locations settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GeoLocationBase"
                        }
                    ]
                },
                "hubSiteSettings": {
                    "description": "Hub site settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSettings"
                        }
                    ]
                },
                "timeZoneSettings": {
                    "description": "TimeZone Settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TimeZoneSettings"
                        }
                    ]
                },
                "localeSettings": {
                    "description": "Locale Settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LocaleSettings"
                        }
                    ]
                },
                "yammerGroupInfo": {
                    "description": "Yammer community info",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreateGroupService": {
            "type": "object",
            "properties": {
                "groupType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "enableTeams": {
                    "default": false,
                    "type": "boolean"
                },
                "isPrivate": {
                    "default": false,
                    "type": "boolean"
                },
                "enableSubscribe": {
                    "default": false,
                    "type": "boolean"
                },
                "enableApplySiteDesign": {
                    "default": false,
                    "type": "boolean"
                },
                "enableOutsideSender": {
                    "default": false,
                    "type": "boolean"
                },
                "enableHideGroupMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "enableClassification": {
                    "default": false,
                    "type": "boolean"
                },
                "preventDuplicateName": {
                    "default": false,
                    "type": "boolean"
                },
                "enableSensitivity": {
                    "default": false,
                    "type": "boolean"
                },
                "allSensitivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "allowConfigureLeasePeriod": {
                    "default": false,
                    "type": "boolean"
                },
                "showNotebookLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showConversationsLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showFilesLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showTeamSiteLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showPlannerLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showYammerGroupLink": {
                    "default": false,
                    "type": "boolean"
                },
                "showTeamLink": {
                    "default": false,
                    "type": "boolean"
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sensitivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "siteDesigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "addGroupMemberType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AddGroupMemberType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Manually",
                        "Dynamically"
                    ]
                },
                "selectedPolicies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BriefGroupPolicy"
                    }
                },
                "selectedLanguages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "teamsSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceTeamsSettings"
                        }
                    ]
                },
                "groupNameConstructureSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupNameConstructureSettings"
                        }
                    ]
                },
                "groupIdConstructureSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupIdConstructureSettings"
                        }
                    ]
                },
                "enableInstallApp": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInstallPanel": {
                    "default": false,
                    "type": "boolean"
                },
                "templateSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamsTemplateServiceSettings"
                        }
                    ]
                },
                "defaultPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultOwners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "defaultMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "disableAddRemoveDynamicMembershipRules": {
                    "default": false,
                    "type": "boolean"
                },
                "enableRestrictDynamicMembershipRules": {
                    "default": false,
                    "type": "boolean"
                },
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRuleInfo"
                    }
                },
                "defaultPolicy": {
                    "format": "uuid",
                    "type": "string"
                },
                "defaultClassification": {
                    "type": "string"
                },
                "defaultSensitivity": {
                    "type": "string"
                },
                "defaultLanguage": {
                    "type": "string"
                },
                "defaultSiteDesign": {
                    "format": "uuid",
                    "type": "string"
                },
                "defaultOwnersReal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "defaultMembersReal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "defaultPrimaryContactReal": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultSecondaryContactReal": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "memberAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "ownerAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "privacyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "subscribeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "outsideSenderAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "classificationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "sensitivityAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "languageAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "secondaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "primaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enableDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "hideGroupMembershipAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "policyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "siteDesignAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "hubSiteAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "timeZoneAssignBy": {
                    "format": "int32",
                    "description": "TimeZoneAssignBy",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "localeAssignBy": {
                    "format": "int32",
                    "description": "LocaleAssignBy",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "multiGeoSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoSetting"
                        }
                    ]
                },
                "isShowHubSiteSection": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "hubSiteSettings": {
                    "description": "Hub site settings model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSettings"
                        }
                    ]
                },
                "timeZoneSettings": {
                    "description": "TimeZoneSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TimeZoneSettings"
                        }
                    ]
                },
                "localeSettings": {
                    "description": "LocaleSettings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LocaleSettings"
                        }
                    ]
                },
                "hasImpernastionUsers": {
                    "default": false,
                    "type": "boolean"
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Create group request model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateGroupRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "CreateGroupType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Group",
                "Team",
                "Yammer"
            ]
        },
        "CreateGuestUserRequest": {
            "type": "object",
            "properties": {
                "userProperties": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestUserPropertyModel"
                        }
                    ]
                },
                "welcomeEmailMessage": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "inviteGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "oneTimeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestUserRequestOneTimeRenewalSettingModel"
                        }
                    ]
                },
                "subRequestInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreateGuestUserSubRequest"
                    }
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreateGuestUserService": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "enableInviteOwnersGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "enableInviteContactGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "enableAddToGroups": {
                    "default": false,
                    "type": "boolean"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "primaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "manager": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "managerAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enableOnTimeRenewal": {
                    "default": false,
                    "type": "boolean"
                },
                "oneTimeDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "oneTimeDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "enableDomainList": {
                    "default": false,
                    "type": "boolean"
                },
                "domainListType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalDomainListType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AllowSpecificDomainList",
                        "BlockSpecificDomainList"
                    ]
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usageLocationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "jobTitleAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "jobDepartmentAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "welcomeEmailMessageAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "usageLocation": {
                    "type": "string"
                },
                "jobTitle": {
                    "type": "string"
                },
                "jobDepartment": {
                    "type": "string"
                },
                "welcomeEmailMessage": {
                    "type": "string"
                },
                "displayNameAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "firstNameAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "lastNameAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateGuestUserRequest"
                        }
                    ]
                },
                "enableInviteMultiple": {
                    "default": false,
                    "type": "boolean"
                },
                "companyName": {
                    "type": "string"
                },
                "companyNameAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "CreateGuestUserSubRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "readOnly": true
                },
                "userProperties": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestUserPropertyModel"
                        }
                    ]
                },
                "welcomeEmailMessage": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "inviteGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "oneTimeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestUserRequestOneTimeRenewalSettingModel"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "processStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "assignTo": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CreateGuestUserValidationResult": {
            "type": "object",
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "CreateLibraryGallery": {
            "description": "This is create library gallery model class inside DynamicRequest.ActivityGalleries",
            "type": "object",
            "properties": {
                "nameDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/NameDescription"
                        }
                    ]
                },
                "versionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LibraryVersionSetting"
                        }
                    ]
                },
                "navigationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/NavigationSetting"
                        }
                    ]
                },
                "libraryUrl": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LibraryScope"
                        }
                    ]
                },
                "constructedUrl": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConstructedUrl"
                        }
                    ]
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListPermissionSetting"
                        }
                    ]
                },
                "libraryDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LibraryDesign"
                        }
                    ]
                },
                "contentTypes": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentTypes"
                        }
                    ]
                },
                "pnpTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PnpTemplate"
                        }
                    ]
                },
                "folderDefaultValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FolderDefaultValueSetting"
                    }
                },
                "listFullUrl": {
                    "type": "string",
                    "readOnly": true
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateListRequest": {
            "type": "object",
            "properties": {
                "listTitle": {
                    "type": "string"
                },
                "listName": {
                    "type": "string"
                },
                "listDescription": {
                    "type": "string"
                },
                "parentObject": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateListSPObject"
                        }
                    ]
                },
                "listTemplate": {
                    "type": "string"
                },
                "enableNavigation": {
                    "default": false,
                    "type": "boolean"
                },
                "listType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Library",
                        "List"
                    ]
                },
                "versionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListVersionSettings"
                        }
                    ]
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListPermissionSettings"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreateListService": {
            "type": "object",
            "properties": {
                "enableNavigation": {
                    "default": false,
                    "type": "boolean"
                },
                "defaultListType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Library",
                        "List"
                    ]
                },
                "versionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListVersionSettings"
                        }
                    ]
                },
                "listTemplateSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListTemplateSettings"
                        }
                    ]
                },
                "urlSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateListUrlSettings"
                        }
                    ]
                },
                "allowBreakPermissionInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionSettings"
                        }
                    ]
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "listVersionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "listTemplateAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "navigationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "listTypeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateListRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "CreateListSPObject": {
            "type": "object",
            "properties": {
                "parentUrl": {
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "CreateListUrlSettings": {
            "type": "object",
            "properties": {
                "enableContructUrl": {
                    "default": false,
                    "type": "boolean"
                },
                "contructUrlSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContructUrlSetting"
                        }
                    ]
                },
                "enableUrlValidation": {
                    "default": false,
                    "type": "boolean"
                },
                "textValidationRule": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TextValidationRuleRef"
                        }
                    ]
                }
            }
        },
        "CreateListUrlValidationResult": {
            "type": "object",
            "properties": {
                "parentObject": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateListSPObject"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "CreateMailEnabledGroupGallery": {
            "type": "object",
            "properties": {
                "communication": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Communication"
                        }
                    ]
                },
                "membershipApproval": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/JoinGroupApproval"
                        }
                    ]
                },
                "messageApproval": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageApproval"
                        }
                    ]
                },
                "deliveryStatusNotifications": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DeliveryStatusNotificationsRequestModel"
                        }
                    ]
                },
                "groupEmailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailAddress"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "groupEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "sendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "sendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "groupContact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreatePrivateChannelCheckResult": {
            "type": "object",
            "properties": {
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "team": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "CreatePrivateChannelRequest": {
            "description": "Create private channel request model",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Channnel name",
                    "type": "string"
                },
                "channelDescription": {
                    "description": "Channnel description",
                    "type": "string"
                },
                "owners": {
                    "description": "Channnel owners",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "members": {
                    "description": "Channnel members",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "team": {
                    "description": "Channel parent team",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "channelWebUrl": {
                    "description": "Channnel web url",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreatePrivateChannelService": {
            "type": "object",
            "properties": {
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "ownersAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "tenantId": {
                    "format": "uuid",
                    "description": "Tenant id",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Base model of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    ]
                }
            }
        },
        "CreatePrivateChannelValidationParameter": {
            "type": "object",
            "properties": {
                "teamObjectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "CreateResourceMailboxAddressBookPolicyRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxAliasRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxBookingDelegateSettingRequestModel": {
            "type": "object",
            "properties": {
                "requestType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/BookingRequestType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Auto",
                        "Specify"
                    ]
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxBookingOptionRequestModel": {
            "type": "object",
            "properties": {
                "isAllowRepeatedMeetings": {
                    "default": false,
                    "type": "boolean"
                },
                "isAllowScheduOnlyDuringWorkerHours": {
                    "default": false,
                    "type": "boolean"
                },
                "autoReplyMessage": {
                    "type": "string"
                },
                "isAutoDecline": {
                    "default": false,
                    "type": "boolean"
                },
                "bookingWindowDays": {
                    "type": "string"
                },
                "maxDurationHours": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxCapacityRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxCompanyRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxContactInformationRequestModel": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "notes": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxDepartmentRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxDisableAccountRequestModel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxExchangeGlobalAddressListRequestModel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateResourceMailboxMailTipRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateRoomMailboxAdditionalInformationRequestModel": {
            "type": "object",
            "properties": {
                "isEnableWheel": {
                    "default": false,
                    "type": "boolean"
                },
                "tags": {
                    "type": "string"
                },
                "audioDeviceName": {
                    "type": "string"
                },
                "displayDeviceName": {
                    "type": "string"
                },
                "videoDeviceName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateRoomMailboxGallery": {
            "type": "object",
            "properties": {
                "additionalInformation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateRoomMailboxAdditionalInformationRequestModel"
                        }
                    ]
                },
                "roomList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateRoomMailboxRoomListRequestModel"
                        }
                    ]
                },
                "roomPlace": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateRoomMailboxRoomPlaceRequestModel"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "contacts": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "fullAccessUsers": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "emailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailAddress"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxExchangeGlobalAddressListRequestModel"
                        }
                    ]
                },
                "mailboxEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "mailboxName": {
                    "type": "string",
                    "readOnly": true
                },
                "sendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "sendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "multiGeoLocationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoLocationSetting"
                        }
                    ]
                },
                "addressBookPolicy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxAddressBookPolicyRequestModel"
                        }
                    ]
                },
                "alias": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxAliasRequestModel"
                        }
                    ]
                },
                "bookingDelegateSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxBookingDelegateSettingRequestModel"
                        }
                    ]
                },
                "bookingOption": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxBookingOptionRequestModel"
                        }
                    ]
                },
                "capacity": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxCapacityRequestModel"
                        }
                    ]
                },
                "contactInformation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxContactInformationRequestModel"
                        }
                    ]
                },
                "company": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxCompanyRequestModel"
                        }
                    ]
                },
                "department": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxDepartmentRequestModel"
                        }
                    ]
                },
                "disableAccountSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxDisableAccountRequestModel"
                        }
                    ]
                },
                "mailTip": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateResourceMailboxMailTipRequestModel"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateRoomMailboxRoomListRequestModel": {
            "type": "object",
            "properties": {
                "roomList": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateRoomMailboxRoomPlaceRequestModel": {
            "type": "object",
            "properties": {
                "building": {
                    "type": "string"
                },
                "floor": {
                    "type": "string"
                },
                "floorLabel": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateSecurityGroupGallery": {
            "type": "object",
            "properties": {
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "groupContact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateSharedChannelGallery": {
            "type": "object",
            "properties": {
                "sharedChannelInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateSharedChannelModel"
                        }
                    ]
                },
                "sharedChannelNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "creator": {
                    "type": "string"
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateSharedChannelModel": {
            "type": "object",
            "properties": {
                "teamId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "teamName": {
                    "type": "string"
                },
                "teamEmail": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "CreateSharedMailboxGallery": {
            "type": "object",
            "properties": {
                "contactInformation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContactInformation"
                        }
                    ]
                },
                "multiGeoLocationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoLocationSetting"
                        }
                    ]
                },
                "languageDataTime": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MailboxLanguageDataTime"
                        }
                    ]
                },
                "timeZone": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTimeZone"
                        }
                    ]
                },
                "emailForwarding": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailForward"
                        }
                    ]
                },
                "autoMappingSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MailboxAutoMapping"
                        }
                    ]
                },
                "sentItems": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MailboxSentItems"
                        }
                    ]
                },
                "automaticReplies": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MailboxAutomaticReply"
                        }
                    ]
                },
                "policies": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MailboxSharedMailboxPolicy"
                        }
                    ]
                },
                "groupEmailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/EmailAddress"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "groupEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "sendAs": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "sendOnBehalf": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "groupContact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateSiteGallery": {
            "description": "This is create site gallery model class inside DynamicRequest.ActivityGalleries",
            "type": "object",
            "properties": {
                "contentTypes": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentTypes"
                        }
                    ]
                },
                "siteTitleAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTitleDescription"
                        }
                    ]
                },
                "siteUrlSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DRSiteUrlSetting"
                        }
                    ]
                },
                "siteTimeZone": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTimeZone"
                        }
                    ]
                },
                "siteTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTemplateSetting"
                        }
                    ]
                },
                "siteOfficeTenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "siteLanguage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLanguage"
                        }
                    ]
                },
                "siteContacts": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "externalSharingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingProfile"
                        }
                    ]
                },
                "quotaProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QuotaProfile"
                        }
                    ]
                },
                "siteDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteDesign"
                        }
                    ]
                },
                "siteAdmins": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteAdmins"
                        }
                    ]
                },
                "siteInformationIcon": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InformationIconSetting"
                        }
                    ]
                },
                "siteDepthLimit": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DepthLimitSetting"
                        }
                    ]
                },
                "dpmPlanSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DpmPlanSetting"
                        }
                    ]
                },
                "permissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DRPermissionSetting"
                        }
                    ]
                },
                "siteCloudGovernancePanel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteCloudGovernancePanel"
                        }
                    ]
                },
                "siteClassificationAndSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteClassificationAndSensitivityLabel"
                        }
                    ]
                },
                "siteHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSetting"
                        }
                    ]
                },
                "multiGeoLocationSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoLocationSetting"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteElectionProfile"
                        }
                    ]
                },
                "fullUrl": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateSiteRequest": {
            "description": "Create collection requesst model",
            "type": "object",
            "properties": {
                "siteTitle": {
                    "description": "Site collection title",
                    "type": "string"
                },
                "siteDescription": {
                    "description": "Site collection description",
                    "maxLength": 1024,
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection url information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteUrl"
                        }
                    ]
                },
                "policyId": {
                    "format": "uuid",
                    "description": "Site collection policy id, you can use GetCreateSiteService api to get all the available policy ids and names.",
                    "type": "string"
                },
                "timeZone": {
                    "format": "int32",
                    "description": "Site collection time zone id, you can use GetCreateSiteService api to get all the available time zone ids and names.",
                    "default": 0,
                    "type": "integer"
                },
                "language": {
                    "format": "int32",
                    "description": "Site collection language id, you can use GetCreateSiteService api to get all the available language ids and names.",
                    "default": 0,
                    "type": "integer"
                },
                "template": {
                    "description": "Site collection template id, you can use GetCreateSiteService api to get all the available template ids and names.",
                    "type": "string"
                },
                "deploymentManagerPlanName": {
                    "description": "Deployment manager plan name, you can use GetCreateSiteService api to get all the available deployment manager plan names.",
                    "type": "string"
                },
                "primaryAdmin": {
                    "description": "Primary site collection administrator",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "additionalAdmins": {
                    "description": "Additional site collection administrator",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "primaryContact": {
                    "description": "Primary site collection contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "Secondary site collection contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "siteDesign": {
                    "description": "Communication site design",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "teamSiteDesign": {
                    "description": "Team site design",
                    "type": "string"
                },
                "classification": {
                    "description": "Communication site Classification",
                    "type": "string"
                },
                "sensitivity": {
                    "description": "Sensitive lable",
                    "type": "string"
                },
                "hubSiteSettings": {
                    "description": "Hub site setting",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSettings"
                        }
                    ]
                },
                "userPermissions": {
                    "description": "Granted user/group permission setting",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "description": "Site collection SharePoint group setting",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestGroupWithPermissions"
                    }
                },
                "yammerGroupSettings": {
                    "description": "Yammer group setting",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupRequestSettings"
                        }
                    ]
                },
                "leasePeriodSettings": {
                    "description": "Lease period setting",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLeasePeriodRequestSettings"
                        }
                    ]
                },
                "multiGeoLocation": {
                    "description": "Multi-geo location",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GeoLocationBase"
                        }
                    ]
                },
                "inputTitle": {
                    "description": "Site collection title without prefix and sufix when service enables constructing title",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreateSiteService": {
            "type": "object",
            "properties": {
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "adminCenterUrl": {
                    "type": "string"
                },
                "siteLanguages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntModel"
                    }
                },
                "rootSiteAndManagedPaths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RootSiteWithManagedPaths"
                    }
                },
                "siteUrlSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteUrlSetting"
                        }
                    ]
                },
                "multiGeoSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoSerivceSetting"
                        }
                    ]
                },
                "siteTitleSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTitleSetting"
                        }
                    ]
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SitePolicyRef"
                    }
                },
                "deploymentManagerPlanSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DeploymentManagerPlanSettings"
                        }
                    ]
                },
                "policyIdsAndTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyWithTemplates"
                    }
                },
                "templateIdsAndPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemplateWithPermissions"
                    }
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionSettings"
                        }
                    ]
                },
                "leasePeriodSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLeasePeriodServiceSettings"
                        }
                    ]
                },
                "timeZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntModel"
                    }
                },
                "siteDesigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "siteDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "defaultTeamSiteDesignId": {
                    "type": "string"
                },
                "siteDesignAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "yammerGroupSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupServiceSettings"
                        }
                    ]
                },
                "classifications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sensitivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "allSensitivities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                },
                "hubSiteSettings": {
                    "description": "Hub site settings model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSettings"
                        }
                    ]
                },
                "enabledCustomTemplate": {
                    "default": false,
                    "type": "boolean"
                },
                "customSiteTemplateListURL": {
                    "type": "string"
                },
                "defaultPrimaryAdmin": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultAdditionalAdmins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "defaultPrimaryAdminReal": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultAdditionalAdminsReal": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "defaultPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultSiteLanguage": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "defaultRootSite": {
                    "type": "string"
                },
                "defaultManagedPath": {
                    "type": "string"
                },
                "defaultPolicy": {
                    "format": "uuid",
                    "type": "string"
                },
                "defaultTemplate": {
                    "type": "string"
                },
                "defaultTimeZone": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "defaultClassification": {
                    "type": "string"
                },
                "defaultSensitivity": {
                    "type": "string"
                },
                "defaultDesignType": {
                    "type": "string"
                },
                "siteLanguageAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "templateAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "policyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "permissionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "rootSiteAndManagedPathAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "timeZoneAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "primaryAdminAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "additionalAdminAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "primaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "secondaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "designTypeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "classificationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "sensitivityAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "hubSiteAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "description": "Create collection requesst model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateSiteRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "CreateTeamGallery": {
            "description": "This is create team gallery model class inside DynamicRequest.ActivityGalleries",
            "type": "object",
            "properties": {
                "objectId": {
                    "type": "string"
                },
                "contentTypes": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ContentTypes"
                        }
                    ]
                },
                "teamNameAndDescription": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "teamId": {
                    "description": "Activity model for team id",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamId"
                        }
                    ]
                },
                "teamContact": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "teamTemplate": {
                    "description": "Activity model for team template",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamTemplate"
                        }
                    ]
                },
                "cloneTeam": {
                    "description": "Request activity model for clone team settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CloneTeam"
                        }
                    ]
                },
                "memberPermissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMemberPermissionSetting"
                        }
                    ]
                },
                "guestPermissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamGuestPermissionSetting"
                        }
                    ]
                },
                "funSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamFunSetting"
                        }
                    ]
                },
                "mentionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMentionSetting"
                        }
                    ]
                },
                "teamMessagingSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMessagingSettings"
                        }
                    ]
                },
                "teamHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteSetting"
                        }
                    ]
                },
                "teamSiteUrl": {
                    "description": "Activity model for team site url",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSiteUrl"
                        }
                    ]
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "owners": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamOwners"
                        }
                    ]
                },
                "members": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamMembers"
                        }
                    ]
                },
                "privacy": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/Privacy"
                        }
                    ]
                },
                "outlookExperience": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OutlookExperience"
                        }
                    ]
                },
                "globalAddressList": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GlobalAddressList"
                        }
                    ]
                },
                "classificationAndSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassificationAndSensitivityLabel"
                        }
                    ]
                },
                "governancePanel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GovernancePanel"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "externalSharingSettingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingProfile"
                        }
                    ]
                },
                "quotaSettingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/QuotaProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalProfile"
                        }
                    ]
                },
                "locale": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamLocale"
                        }
                    ]
                },
                "timeZone": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamTimeZone"
                        }
                    ]
                },
                "showLinksInRequestDetailsPage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ShowLinksInRequestDetailsPage"
                        }
                    ]
                },
                "siteDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteDesign"
                        }
                    ]
                },
                "welcomeEmail": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WelcomeEmail"
                        }
                    ]
                },
                "dynamicMembershipRules": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicMembership"
                        }
                    ]
                },
                "tenant": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/OfficeTenant"
                        }
                    ]
                },
                "teamEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "CreateWebRequest": {
            "type": "object",
            "properties": {
                "webName": {
                    "type": "string"
                },
                "webTitle": {
                    "type": "string"
                },
                "webDescription": {
                    "type": "string"
                },
                "webLanguage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/IntModel"
                        }
                    ]
                },
                "webTemplate": {
                    "type": "string"
                },
                "parentSiteUrl": {
                    "type": "string"
                },
                "parentWebUrl": {
                    "type": "string"
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestGroupWithPermissions"
                    }
                },
                "yammerGroupSettings": {
                    "description": "Yammer community request settings model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupRequestSettings"
                        }
                    ]
                },
                "isOnQuickLaunch": {
                    "default": false,
                    "type": "boolean"
                },
                "isOnTopLinkBar": {
                    "default": false,
                    "type": "boolean"
                },
                "isInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "deploymentManagerPlanName": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CreateWebScopeSettings": {
            "type": "object",
            "properties": {
                "restrictParentUrl": {
                    "type": "string"
                },
                "scopeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ScopeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ManuallyInput",
                        "SelectFromTree"
                    ]
                },
                "useTitleInUrl": {
                    "default": false,
                    "type": "boolean"
                },
                "enableUrlValidation": {
                    "default": false,
                    "type": "boolean"
                },
                "textValidationRule": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TextValidationRuleRef"
                        }
                    ]
                },
                "selectedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SPNode"
                    }
                },
                "autoPopulateUrlWithSPContext": {
                    "default": false,
                    "type": "boolean"
                },
                "autoPopulateUrlWithSPContextAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "CreateWebService": {
            "type": "object",
            "properties": {
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateWebScopeSettings"
                        }
                    ]
                },
                "webLanguages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntModel"
                    }
                },
                "languageIdsAndTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LanguageWithTemplates"
                    }
                },
                "templateIdsAndPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemplateWithPermissions"
                    }
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionSettings"
                        }
                    ]
                },
                "useUniquePermissions": {
                    "default": false,
                    "type": "boolean"
                },
                "deploymentManagerPlanSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DeploymentManagerPlanSettings"
                        }
                    ]
                },
                "yammerGroupSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupServiceSettings"
                        }
                    ]
                },
                "templateStoreUrl": {
                    "type": "string"
                },
                "appSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AppSettings"
                        }
                    ]
                },
                "notifyPrimaryContactSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidBooleanModel"
                        }
                    ]
                },
                "notifySecondaryContactSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidBooleanModel"
                        }
                    ]
                },
                "defaultPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "defaultSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "isOnQuickLaunch": {
                    "default": false,
                    "type": "boolean"
                },
                "isOnTopLinkBar": {
                    "default": false,
                    "type": "boolean"
                },
                "isNavigationInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "defaultWebLanguage": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "scopeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "webLanguageAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "templateAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "navigationInheritanceAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "navigationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "primaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "secondaryContactAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "permissionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CreateWebRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "CreateWebUrlValidationResult": {
            "type": "object",
            "properties": {
                "parentWebUrl": {
                    "type": "string"
                },
                "parentSiteUrl": {
                    "type": "string"
                },
                "sitePrimaryAdmin": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "sitePrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "siteSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "CreateWebValidationParameter": {
            "type": "object",
            "properties": {
                "parentUrl": {
                    "format": "uri",
                    "type": "string"
                },
                "uri": {
                    "format": "uri",
                    "type": "string"
                },
                "ignoreLock": {
                    "default": false,
                    "type": "boolean"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "CustomActionSettings": {
            "type": "object",
            "properties": {
                "beforeApprovalProcessExecution": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExecutionModel"
                        }
                    ]
                },
                "afterApprovalProcessExecution": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExecutionModel"
                        }
                    ]
                },
                "postExecution": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExecutionModel"
                        }
                    ]
                },
                "beforeSubmission": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExecutionModel"
                        }
                    ]
                },
                "whenErrorTaskGenerated": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExecutionModel"
                        }
                    ]
                }
            }
        },
        "CustomMetadata": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SingleLineText",
                        "MultiLineText",
                        "YesOrNo",
                        "Choices",
                        "PeoplePickerValue",
                        "Terms",
                        "Hyperlink",
                        "UserProfileService",
                        "AzureADProperty",
                        "SharePointList"
                    ]
                },
                "displayType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DisplayInReportType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Hide",
                        "DisplayInAllPlaces",
                        "OnlyDisplayInAdminReport",
                        "OnlyDisplayInEndUserReport"
                    ]
                },
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enableTextValidation": {
                    "default": false,
                    "type": "boolean"
                },
                "textValidationRule": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TextValidationRuleRef"
                        }
                    ]
                },
                "booleanMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/BooleanMetadataSettings"
                        }
                    ]
                },
                "termsMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TermsMetadataSettings"
                        }
                    ]
                },
                "userMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserMetadataSettings"
                        }
                    ]
                },
                "userProfileMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserProfileMetadataSettings"
                        }
                    ]
                },
                "azureAdMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AzureAdMetadataSettings"
                        }
                    ]
                },
                "choiceMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChoiceMetadataSettings"
                        }
                    ]
                },
                "linkMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkMetadataSettings"
                        }
                    ]
                },
                "singleLineOrMultipleLineMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SingleLineOrMultipleLineMetadataSettings"
                        }
                    ]
                },
                "sharePointListMetadataSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharePointListMetadataSettings"
                        }
                    ]
                }
            }
        },
        "CustomSiteTemplate": {
            "type": "object",
            "properties": {
                "templateStoreUrl": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                }
            }
        },
        "DelegatedAccessToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "duration": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "DelegatedAccessTokenApiResult": {
            "type": "object",
            "properties": {
                "value": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DelegatedAccessToken"
                        }
                    ]
                },
                "isSuccess": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMsg": {
                    "type": "string"
                }
            }
        },
        "DeleteGroupRequest": {
            "description": "Delete group request model",
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DeleteSiteRequest": {
            "description": "Delete site collection request model",
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DeleteType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Manually",
                "Auto"
            ]
        },
        "DeleteWebLifecycleRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebLifecycleActionType"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "None",
                        "Delete",
                        "Archive"
                    ]
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webRelativeUrl": {
                    "type": "string"
                },
                "webTitle": {
                    "description": "Web Title",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "actionDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DeliveryManagement": {
            "type": "object",
            "properties": {
                "specifiedSenders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedSpecifiedSenders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "senderOptions": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SenderOptions"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inside",
                        "InsideAndOutside"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DeliveryStatusNotificationsRequestModel": {
            "type": "object",
            "properties": {
                "isReportToSender": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DeploymentManagerPlanSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "default": {
                    "type": "string"
                }
            }
        },
        "DepthLimitSetting": {
            "type": "object",
            "properties": {
                "depthLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DisplayInReportType": {
            "format": "int32",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Hide",
                "DisplayInAllPlaces",
                "OnlyDisplayInAdminReport",
                "OnlyDisplayInEndUserReport"
            ]
        },
        "DpmPlanSetting": {
            "type": "object",
            "properties": {
                "dpmPlanName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DpmServiceSetting": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "defaultValue": {
                    "type": "string"
                },
                "selectedItems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "DRPermissionSetting": {
            "type": "object",
            "properties": {
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestGroupWithPermissions"
                    }
                },
                "enableSendWelcomeEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DRSiteTemplate": {
            "type": "object",
            "properties": {
                "templateName": {
                    "type": "string"
                },
                "templateTitle": {
                    "type": "string"
                }
            }
        },
        "DRSiteUrlSetting": {
            "type": "object",
            "properties": {
                "rootSite": {
                    "type": "string"
                },
                "managedPath": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DueDateType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Expired",
                "DueToday",
                "DueThisWeek",
                "DueThisMonth"
            ]
        },
        "DurationDateType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Day",
                "Month",
                "Year"
            ]
        },
        "DynamicChangeContactGalleryRequestModel": {
            "type": "object",
            "properties": {
                "objectInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeContactObjectModel"
                        }
                    ]
                },
                "changeContactInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicChangeContactModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "DynamicChangeContactModel": {
            "type": "object",
            "properties": {
                "newPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "newSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalPrimaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "originalSecondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DynamicExchangeResource": {
            "description": "Activity model for Azure Object Info",
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string"
                },
                "officeTenantId": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "exchangeResourceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExchangeResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "RoomMailbox",
                        "EquipmentMailbox"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DynamicGroupRule": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "order": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "relation": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LogicalOperatorType"
                        }
                    ],
                    "x-enum-varnames": [
                        "And",
                        "Or"
                    ]
                },
                "category": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiCategoryType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Contact",
                        "License",
                        "Organization"
                    ]
                },
                "metadataId": {
                    "type": "string"
                },
                "metadataName": {
                    "type": "string"
                },
                "metadataValue": {
                    "type": "string"
                },
                "disableEditRule": {
                    "default": false,
                    "type": "boolean"
                },
                "disableEditRuleValue": {
                    "default": false,
                    "type": "boolean"
                },
                "metadataDisplayValue": {
                    "type": "string"
                },
                "condition": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicRuleConditionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Equals",
                        "Contains",
                        "Is",
                        "In",
                        "DoesNotBelongTo"
                    ]
                },
                "metadataValueAzureUserType": {
                    "type": "string"
                },
                "metadataUserList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                }
            }
        },
        "DynamicGroupRuleInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "order": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "relation": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LogicalOperator"
                        }
                    ],
                    "x-enum-varnames": [
                        "And",
                        "Or"
                    ]
                },
                "category": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CategoryType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Contact",
                        "License",
                        "Organization"
                    ]
                },
                "metadataId": {
                    "format": "uuid",
                    "type": "string"
                },
                "metadataName": {
                    "type": "string"
                },
                "metadataValue": {
                    "type": "string"
                },
                "metadataDisplayValue": {
                    "type": "string"
                },
                "metadataValueAzureUserType": {
                    "type": "string"
                },
                "condition": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicRuleCondition"
                        }
                    ],
                    "x-enum-varnames": [
                        "Equals",
                        "Contains",
                        "Is",
                        "In",
                        "DoesNotBelongTo"
                    ]
                },
                "disableEditRule": {
                    "default": false,
                    "type": "boolean"
                },
                "disableEditRuleValue": {
                    "default": false,
                    "type": "boolean"
                },
                "metadataUserList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserInfo"
                    }
                }
            }
        },
        "DynamicGroupRuleModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "order": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "relation": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LogicalOperator"
                        }
                    ],
                    "x-enum-varnames": [
                        "And",
                        "Or"
                    ]
                },
                "relationDescription": {
                    "type": "string"
                },
                "category": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CategoryType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Contact",
                        "License",
                        "Organization"
                    ]
                },
                "categoryDescription": {
                    "type": "string"
                },
                "metadataName": {
                    "type": "string"
                },
                "metadataDisplayValue": {
                    "type": "string"
                },
                "condition": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicRuleCondition"
                        }
                    ],
                    "x-enum-varnames": [
                        "Equals",
                        "Contains",
                        "Is",
                        "In",
                        "DoesNotBelongTo"
                    ]
                },
                "conditionDescription": {
                    "type": "string"
                }
            }
        },
        "DynamicMembership": {
            "type": "object",
            "properties": {
                "dynamicMembershipRules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DynamicGroupRule"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "DynamicRequest": {
            "description": "Dynamic request model that api should receive from client",
            "type": "object",
            "properties": {
                "activityGalleries": {
                    "description": "list of all galleries in the request",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Gallerybase"
                    }
                },
                "approveProcess": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApproveProcessModel"
                        }
                    ]
                },
                "orderInfo": {
                    "type": "string"
                },
                "parentId": {
                    "format": "uuid",
                    "type": "string"
                },
                "parentTicketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "startRequestTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DynamicRuleCondition": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Equals",
                "Contains",
                "Is",
                "In",
                "DoesNotBelongTo"
            ]
        },
        "DynamicRuleConditionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Equals",
                "Contains",
                "Is",
                "In",
                "DoesNotBelongTo"
            ]
        },
        "DynamicRuleElement": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SingleLineText",
                        "MultiLineText",
                        "YesOrNo",
                        "Choices",
                        "PeoplePickerValue",
                        "Terms",
                        "Hyperlink",
                        "UserProfileService",
                        "AzureADProperty",
                        "SharePointList"
                    ]
                },
                "choiceItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StringModel"
                    }
                }
            }
        },
        "DynamicServiceForRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "languageId": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/IntModel"
                        }
                    ]
                },
                "category": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "activityGalleryFlow": {
                    "type": "string"
                },
                "approveProcessFlow": {
                    "type": "string"
                }
            }
        },
        "EmailAddress": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "groupEmailAddress": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "EmailForward": {
            "type": "object",
            "properties": {
                "enableEmailForwarding": {
                    "default": false,
                    "type": "boolean"
                },
                "convertEmailForward": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConvertEmail"
                        }
                    ],
                    "x-enum-varnames": [
                        "ForwardInternalEmail",
                        "ForwardExternalEmail"
                    ]
                },
                "forwardInternalEmailAddress": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "forwardExternalEmailAddress": {
                    "type": "string"
                },
                "enableDeliverMessage": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "EndUserReportMetadata": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "displayValue": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SingleLineText",
                        "MultiLineText",
                        "YesOrNo",
                        "Choices",
                        "PeoplePickerValue",
                        "Terms",
                        "Hyperlink",
                        "UserProfileService",
                        "AzureADProperty",
                        "SharePointList"
                    ]
                }
            }
        },
        "EntraGroupLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Delete",
                "None"
            ]
        },
        "ExchangeResourceLifecycleGallery": {
            "type": "object",
            "properties": {
                "office365TenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupInfo": {
                    "description": "Activity model for Azure Object Info",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DynamicExchangeResource"
                        }
                    ]
                },
                "lifecycleScopeSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleScopeSetting"
                        }
                    ]
                },
                "lifecycleActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleActions"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "ExchangeResourceStatus": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Active",
                "Deleted"
            ]
        },
        "ExchangeResourceType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SecurityGroup",
                "MailEnabledSecurityGroup",
                "DistributionList",
                "SharedMailbox",
                "RoomMailbox",
                "EquipmentMailbox"
            ]
        },
        "ExecutionModel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "webServiceAddress": {
                    "type": "string"
                },
                "webServiceAuthenticationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebServiceAuthenticationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Anonymous",
                        "AzureAD"
                    ]
                },
                "webServiceAppClientId": {
                    "type": "string"
                },
                "methodName": {
                    "type": "string"
                },
                "arguments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExecutionParameter"
                    }
                }
            }
        },
        "ExecutionParameter": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ExpirationType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Duration",
                "Date"
            ]
        },
        "ExtendGroupRequest": {
            "description": "Extend group lease request model",
            "type": "object",
            "properties": {
                "extendDuration": {
                    "format": "int32",
                    "description": "Group lease extension duration",
                    "default": 0,
                    "type": "integer"
                },
                "extendDurationType": {
                    "format": "int32",
                    "description": "Duration type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ExtendGroupResult": {
            "type": "object",
            "properties": {
                "extendType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExtendType"
                        }
                    ],
                    "x-enum-varnames": [
                        "WithConstantValue",
                        "WithinSpecifyLimit"
                    ]
                },
                "duration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                }
            }
        },
        "ExtendSiteRequest": {
            "description": "Extend site collection request model",
            "type": "object",
            "properties": {
                "extendDuration": {
                    "format": "int32",
                    "description": "Extend site collection lease duration",
                    "default": 0,
                    "type": "integer"
                },
                "extendDurationType": {
                    "format": "int32",
                    "description": "Extend site collection lease duration type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ExtendSiteSetting": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "extendType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExtendType"
                        }
                    ],
                    "x-enum-varnames": [
                        "WithConstantValue",
                        "WithinSpecifyLimit"
                    ]
                },
                "duration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "constantDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "constantDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "extendBasedTime": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ExtendType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "WithConstantValue",
                "WithinSpecifyLimit"
            ]
        },
        "ExternalDomainListType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AllowSpecificDomainList",
                "BlockSpecificDomainList"
            ]
        },
        "ExternalSharingOptions": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Disabled",
                "VerifiedGuestUser",
                "Anyone",
                "ExistingGuestUser",
                "CrossTenantUser"
            ]
        },
        "ExternalSharingProfile": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ExternalUserSharingSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "sharingType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserSharingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "RequireSignIn",
                        "AnonymousLink"
                    ]
                },
                "anonymousLinkSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AnonymousLinkSettings"
                        }
                    ]
                }
            }
        },
        "ExternalUserSharingType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "RequireSignIn",
                "AnonymousLink"
            ]
        },
        "ExternalUserType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Authentication",
                "NoAuthentication"
            ]
        },
        "FolderDefaultValueSetting": {
            "type": "object",
            "properties": {
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "Gallerybase": {
            "description": "This is abstract gallery model class inside DynamicRequest.ActivityGalleries",
            "type": "object",
            "properties": {
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "GallerySetting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                }
            }
        },
        "GeoLocationBase": {
            "description": "Geo location base model",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Geo location name",
                    "type": "string"
                },
                "displayName": {
                    "description": "Geo location display name",
                    "type": "string"
                }
            }
        },
        "GeoLocationModel": {
            "type": "object",
            "properties": {
                "rootSiteUrl": {
                    "type": "string"
                },
                "tenantAdminUrl": {
                    "type": "string"
                },
                "name": {
                    "description": "Geo location name",
                    "type": "string"
                },
                "displayName": {
                    "description": "Geo location display name",
                    "type": "string"
                }
            }
        },
        "GiphyRatingType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Moderate",
                "Strict"
            ]
        },
        "GlobalAddressList": {
            "type": "object",
            "properties": {
                "originalEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "exchangeAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "GovernancePanel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "GrantPermissionGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "permissionIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "GrantPermissionModel": {
            "type": "object",
            "properties": {
                "permissionDurationSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TemporaryPermissionRequestSetting"
                        }
                    ]
                },
                "welcomeEmailSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WelcomeEmailSettings"
                        }
                    ]
                }
            }
        },
        "GrantPermissionRequest": {
            "type": "object",
            "properties": {
                "url": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionSPObject"
                        }
                    ]
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionRequestPermissionSettings"
                        }
                    ]
                },
                "permissionDurationSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionRequestDurationSettings"
                        }
                    ]
                },
                "selectedUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharingEnabledUser"
                    }
                },
                "externalUserSharingSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserSharingSettings"
                        }
                    ]
                },
                "welcomeEmailSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WelcomeEmailSettings"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "GrantPermissionRequestDurationSettings": {
            "type": "object",
            "properties": {
                "isGrantTemporaryPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isGrantPermissionLevel": {
                    "default": false,
                    "type": "boolean"
                },
                "expirationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpirationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Duration",
                        "Date"
                    ]
                },
                "durationInterval": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationDateType": {
                    "format": "int32",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DurationDateType"
                        }
                    ]
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "GrantPermissionRequestPermissionSettings": {
            "type": "object",
            "properties": {
                "isBreakInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "isGrantPermissionDirectly": {
                    "default": false,
                    "type": "boolean"
                },
                "selectedSPGroup": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionGroup"
                        }
                    ]
                },
                "selectedPermissionLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntModel"
                    }
                }
            }
        },
        "GrantPermissionService": {
            "type": "object",
            "properties": {
                "allowBreakPermissionInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "userLevelControlSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelControlSettings"
                        }
                    ]
                },
                "permissionDurationSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionServiceDurationSettings"
                        }
                    ]
                },
                "permissionSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionServicePermissionSettings"
                        }
                    ]
                },
                "defaultWelcomeEmailSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WelcomeEmailSettings"
                        }
                    ]
                },
                "welcomeEmailAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "GrantPermissionServiceDurationSettings": {
            "type": "object",
            "properties": {
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "isGrantTemporaryPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "defaultDurationInterval": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "defaultDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DurationDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Month",
                        "Year"
                    ]
                },
                "isEnableMaxDuration": {
                    "default": false,
                    "type": "boolean"
                },
                "maxDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "maxDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DurationDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Month",
                        "Year"
                    ]
                },
                "isEnableExpirationNotify": {
                    "default": false,
                    "type": "boolean"
                },
                "expirationNotifyDurationInterval": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "expirationNotifyDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DurationDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Month",
                        "Year"
                    ]
                },
                "isOnlyUseDefaultDuration": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "GrantPermissionServicePermissionSettings": {
            "type": "object",
            "properties": {
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "isGrantPermissionDirectly": {
                    "default": false,
                    "type": "boolean"
                },
                "enableExcludePermissionLevles": {
                    "default": false,
                    "type": "boolean"
                },
                "excludedPermissionLevles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                }
            }
        },
        "GrantPermissionSPObject": {
            "type": "object",
            "properties": {
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webServerRelativeUrl": {
                    "type": "string"
                },
                "listTitle": {
                    "type": "string"
                },
                "topInheritUrl": {
                    "type": "string"
                },
                "inheritNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "isInheritedPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "fullUrl": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                }
            }
        },
        "GrantPermissionUrlValidationResult": {
            "type": "object",
            "properties": {
                "externalSharingOptions": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingOptions"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "VerifiedGuestUser",
                        "Anyone",
                        "ExistingGuestUser",
                        "CrossTenantUser"
                    ]
                },
                "enableShareAnnoymousLink": {
                    "default": false,
                    "type": "boolean"
                },
                "object": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionSPObject"
                        }
                    ]
                },
                "spPermissionLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/IntModel"
                    }
                },
                "spGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GrantPermissionGroup"
                    }
                },
                "allowBreakPermissionInheritance": {
                    "default": false,
                    "type": "boolean"
                },
                "userMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/UserInfo"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "GroupClassificationModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "GroupConstructureRule": {
            "type": "object",
            "properties": {
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConstructureType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Text",
                        "Metadata",
                        "Attribute"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "GroupIdConstructureSettings": {
            "type": "object",
            "properties": {
                "ruleType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupIdRuleType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ConstructGroupId",
                        "PopulateGroupIdWithGroupName"
                    ]
                },
                "enableAutoSequenceNumber": {
                    "default": false,
                    "type": "boolean"
                },
                "autoSequenceNumber": {
                    "type": "string"
                },
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "prefixs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupConstructureRule"
                    }
                },
                "suffixs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupConstructureRule"
                    }
                }
            }
        },
        "GroupIdRuleType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ConstructGroupId",
                "PopulateGroupIdWithGroupName"
            ]
        },
        "GroupInOutRuleType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Open",
                "Closed",
                "ApprovalRequired"
            ]
        },
        "GroupLeasePeriodSettings": {
            "description": "Group lease period settings model",
            "type": "object",
            "properties": {
                "isEnabled": {
                    "description": "Whether group extend lease is enabled after expiration",
                    "default": false,
                    "type": "boolean"
                },
                "leaseType": {
                    "format": "int32",
                    "description": "Group lease period extension type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupLeasePeriodType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Duration",
                        "Date"
                    ]
                },
                "durationType": {
                    "format": "int32",
                    "description": "Duration type of the group lease period",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "durationInterval": {
                    "format": "int32",
                    "description": "Group lease period",
                    "default": 0,
                    "type": "integer"
                },
                "leaseExpirationDate": {
                    "format": "date-time",
                    "description": "Group lease expiration date and time",
                    "type": "string"
                }
            }
        },
        "GroupLeasePeriodType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Duration",
                "Date"
            ]
        },
        "GroupLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Delete",
                "Extend",
                "ChangePolicy",
                "ChangeQuota",
                "Archive",
                "Restor"
            ]
        },
        "GroupLifecycleRequest": {
            "description": "Group lifecycle request model",
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "GroupLifecycleService": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Delete",
                        "Extend",
                        "ChangePolicy",
                        "ChangeQuota",
                        "Archive",
                        "Restor"
                    ]
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "networkId": {
                    "type": "string"
                },
                "scopePeoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Group lifecycle request model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupLifecycleRequest"
                        }
                    ]
                },
                "changePolicyAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "GroupLifecycleValidateResult": {
            "type": "object",
            "properties": {
                "approvalProcessHasManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "extendSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExtendGroupResult"
                        }
                    ]
                },
                "changePolicySetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupPolicyResult"
                        }
                    ]
                },
                "changeQuotaSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeGroupQuotaResult"
                        }
                    ]
                },
                "enableTeamCollaboration": {
                    "default": false,
                    "type": "boolean"
                },
                "groupObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "GroupLinks": {
            "description": "Group links model",
            "type": "object",
            "properties": {
                "groupSiteLink": {
                    "description": "Group team site link",
                    "type": "string"
                },
                "groupPlannerLink": {
                    "description": "Planner link",
                    "type": "string"
                },
                "groupFilesLink": {
                    "description": "Files link",
                    "type": "string"
                },
                "groupConversationsLink": {
                    "description": "Conversations link",
                    "type": "string"
                },
                "groupNotebookLink": {
                    "description": "Notebook link",
                    "type": "string"
                },
                "yammerGroupLink": {
                    "description": "Yammer community link",
                    "type": "string"
                },
                "teamLink": {
                    "description": "Team link",
                    "type": "string"
                }
            }
        },
        "GroupMembershipAction": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Added",
                "Deleted"
            ]
        },
        "GroupMembershipItem": {
            "type": "object",
            "properties": {
                "loginName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "azureUserType": {
                    "type": "string"
                },
                "isGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupMembershipAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Added",
                        "Deleted"
                    ]
                }
            }
        },
        "GroupNameConstructureSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "assignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "prefixs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupConstructureRule"
                    }
                },
                "suffixs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupConstructureRule"
                    }
                }
            }
        },
        "GroupObjectType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Group",
                "Team",
                "Yammer"
            ]
        },
        "GroupOwnerType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SpoGroup",
                "User"
            ]
        },
        "GroupRestrictionType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AnyGroup",
                "PartOf"
            ]
        },
        "GroupScopeType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SelectTenant",
                "SelectContainer",
                "InheritFromGallery",
                "PredefinedObject"
            ]
        },
        "GroupSettingModel": {
            "type": "object",
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "groupDescription": {
                    "type": "string"
                },
                "groupEmailAddress": {
                    "type": "string"
                },
                "owners": {
                    "type": "string"
                },
                "members": {
                    "type": "string"
                },
                "groupDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "emailSubject": {
                    "type": "string"
                },
                "emailBody": {
                    "type": "string"
                }
            }
        },
        "GroupStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Active",
                "Deleted",
                "Archived",
                "SiteLocked",
                "RestrictAccess",
                "ModernRenewalEscalationRestrictAccess"
            ]
        },
        "GroupUser": {
            "description": "Group user model",
            "type": "object",
            "properties": {
                "isEnforce": {
                    "description": "Whether to enforce permissions for the user.",
                    "default": false,
                    "type": "boolean"
                },
                "isHide": {
                    "description": "Whether to hide the enforced user from the request page.",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "description": "Object ID",
                    "type": "string"
                },
                "loginName": {
                    "description": "Login name",
                    "type": "string"
                },
                "isExternalUser": {
                    "format": "int32",
                    "description": "Whether the user is an external user.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "azureUserType": {
                    "description": "User type in Azure AD",
                    "type": "string"
                },
                "displayName": {
                    "description": "User display name",
                    "type": "string"
                },
                "isGroup": {
                    "description": "Whether an object is a domain group.",
                    "default": false,
                    "type": "boolean"
                },
                "isLocalUser": {
                    "description": "Whether the user is a local system user.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "email": {
                    "description": "User e-mail address",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "User job title",
                    "type": "string",
                    "readOnly": true
                },
                "physicalDeliveryOfficeName": {
                    "description": "Physical delivery office name of the user",
                    "type": "string",
                    "readOnly": true
                },
                "isValid": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "isAccountEnabled": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "tenantId": {
                    "description": "Office 365 tenant ID of the user",
                    "type": "string",
                    "readOnly": true
                },
                "additionalData": {
                    "description": "User additional data",
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                },
                "apiUserType": {
                    "format": "int32",
                    "description": "ApiUser type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserType"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "User",
                        "DistributionList",
                        "Office365Group",
                        "SharePointGroup",
                        "Guest",
                        "SecurityGroupOnly",
                        "MailEnabledSecurityGroup",
                        "UserAndMailEnableSecurityGroup",
                        "Group",
                        "UserAndGroup",
                        "AzureADGroup",
                        "Team",
                        "All",
                        "SharedMailbox",
                        "Yammer",
                        "OnlyOffice365Group",
                        "RoomList",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "Office365GroupSecurityEnable",
                        "Office365GroupSecurityDisable",
                        "MailContact"
                    ]
                }
            }
        },
        "GroupValidationParameter": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "GuestPermissions": {
            "type": "object",
            "properties": {
                "allowGuestsCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowGuestsCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "originalAllowGuestsDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "GuestUserPropertyModel": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                },
                "usageLocation": {
                    "type": "string"
                },
                "usageLocationDisplayName": {
                    "type": "string"
                },
                "jobTitle": {
                    "type": "string"
                },
                "jobDepartment": {
                    "type": "string"
                },
                "manager": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "companyName": {
                    "type": "string"
                }
            }
        },
        "GuestUserRequestOneTimeRenewalSettingModel": {
            "type": "object",
            "properties": {
                "option": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/OneTimeRenewalOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoMore",
                        "Specific"
                    ]
                },
                "duration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "GuidBooleanModel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "seletedItem": {
                    "format": "uuid",
                    "type": "string"
                },
                "allItems": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                }
            }
        },
        "GuidModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "HandleOngoingType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Skip",
                "CancelOngoing"
            ]
        },
        "HubSiteChangedSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "isModernSite": {
                    "default": false,
                    "type": "boolean"
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeHubsiteActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RegisterAsHubSite",
                        "AssociateToHubSite",
                        "UnRegisterAsHubSite",
                        "UnRegisterAndAssociateToHubSite"
                    ]
                },
                "associatedHubSiteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "associatedHubSiteTitle": {
                    "type": "string"
                }
            }
        },
        "HubSiteSetting": {
            "type": "object",
            "properties": {
                "convertHubSite": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConvertHubSite"
                        }
                    ],
                    "x-enum-varnames": [
                        "RegisterAsHubSite",
                        "AssociateWithHubSite"
                    ]
                },
                "associateToHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssociateToHubSite"
                        }
                    ]
                },
                "registerAsHubSite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RegisterAsHubSite"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "HubSiteSettings": {
            "description": "Hub site settings model",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Whether the hub site functionality is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "action": {
                    "format": "int32",
                    "description": "Set how to enable the hub site functionality. You can register the site collection as a hub site or associate the site collection with a hub site.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConvertHubSiteActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ConvertToHubSite",
                        "AssociateOneHubSite"
                    ]
                },
                "associatedHubSiteId": {
                    "format": "uuid",
                    "description": "ID of the associated hub site",
                    "type": "string"
                },
                "associatedHubSiteTitle": {
                    "description": "Title of the associated hub site",
                    "type": "string"
                }
            }
        },
        "HubSiteUrl": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "permissionGroupCount": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "InformationIconSetting": {
            "type": "object",
            "properties": {
                "informationIconImageUrl": {
                    "type": "string"
                },
                "informationDetailReferenceUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "Int32ChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "originalValue": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "Int64ChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "originalValue": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "Int64ChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "originalValue": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "IntModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "InviteGuestAddToGroupsRequestModel": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestContactInformationRequestModel": {
            "type": "object",
            "properties": {
                "businessPhone": {
                    "type": "string"
                },
                "faxNumber": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestGallery": {
            "type": "object",
            "properties": {
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "displayName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamNameDescription"
                        }
                    ]
                },
                "guestDisplayName": {
                    "type": "string",
                    "readOnly": true
                },
                "contacts": {
                    "description": "Activity model for primary contact,secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Contact"
                        }
                    ]
                },
                "emailAddress": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "firstName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "lastName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "welcomeMessage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "jobTitle": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "department": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "companyName": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserPropertyRequestModel"
                        }
                    ]
                },
                "usageLocation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUsageLocationRequestModel"
                        }
                    ]
                },
                "contactInformation": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestContactInformationRequestModel"
                        }
                    ]
                },
                "manager": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserTypePropertyRequestModel"
                        }
                    ]
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamElectionProfile"
                        }
                    ]
                },
                "renewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestRenewalProfileRequestModel"
                        }
                    ]
                },
                "primaryContact": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserTypePropertyRequestModel"
                        }
                    ]
                },
                "secondaryContact": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestUserTypePropertyRequestModel"
                        }
                    ]
                },
                "addToGroups": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestAddToGroupsRequestModel"
                        }
                    ]
                },
                "multipleInvite": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteMultipleGuestRequestModel"
                        }
                    ]
                },
                "inviteGuestUserScope": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestScopeRequestModel"
                        }
                    ]
                },
                "limitDomains": {
                    "description": "This is activity model base class under dynamic request model.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ActivityModelbase"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "InviteGuestMode": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Single",
                "Multiple"
            ]
        },
        "InviteGuestOneTimeRenewalSettingModel": {
            "type": "object",
            "properties": {
                "option": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/OneTimeRenewalOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoMore",
                        "Specific"
                    ]
                },
                "duration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "InviteGuestRenewalProfileRequestModel": {
            "type": "object",
            "properties": {
                "oneTimeRenewalSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestOneTimeRenewalSettingModel"
                        }
                    ]
                },
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestScopeRequestModel": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "mode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteGuestMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "Single",
                        "Multiple"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestUsageLocationRequestModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestUserPropertyRequestModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteGuestUserTypePropertyRequestModel": {
            "type": "object",
            "properties": {
                "user": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteMultipleGuestRequestModel": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "downloadFileName": {
                    "type": "string"
                },
                "monitorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "InviteType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "User",
                "Group",
                "UserInGroup",
                "PortalSupport",
                "ProductSupport"
            ]
        },
        "ItemConflictResolutionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "DoNotMigrateTheItems",
                "OverwriteIdenticalItemsInDestination",
                "Append",
                "IgnoreDifferenceAndMoveItems"
            ]
        },
        "JoinGroupApproval": {
            "type": "object",
            "properties": {
                "joinGroupRule": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupInOutRuleType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Open",
                        "Closed",
                        "ApprovalRequired"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LanguageWithTemplates": {
            "type": "object",
            "properties": {
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "defaultTemplate": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTemplate"
                    }
                }
            }
        },
        "LibraryDesign": {
            "type": "object",
            "properties": {
                "libraryDesign": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LibraryScope": {
            "type": "object",
            "properties": {
                "parentWebUrl": {
                    "type": "string"
                },
                "libraryUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LibraryVersionSetting": {
            "type": "object",
            "properties": {
                "enableModeration": {
                    "default": false,
                    "type": "boolean"
                },
                "enableVersioning": {
                    "default": false,
                    "type": "boolean"
                },
                "enableMinorVersions": {
                    "default": false,
                    "type": "boolean"
                },
                "enableMajorVersionLimit": {
                    "default": false,
                    "type": "boolean"
                },
                "majorVersionLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "enableMajorWithMinorVersionsLimit": {
                    "default": false,
                    "type": "boolean"
                },
                "majorWithMinorVersionsLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LicenseInfo": {
            "type": "object",
            "properties": {
                "licenseId": {
                    "format": "uuid",
                    "type": "string"
                },
                "licenseName": {
                    "type": "string"
                }
            }
        },
        "LicenseUpdateInfo": {
            "type": "object",
            "properties": {
                "removedLicenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LicenseInfo"
                    }
                },
                "removedApps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInfo"
                    }
                },
                "newlyAddLicenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LicenseInfo"
                    }
                },
                "newlyAddApps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppInfo"
                    }
                }
            }
        },
        "LifecycleAction": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Extend",
                "Delete",
                "Archive",
                "Policy",
                "Unlock",
                "Continue",
                "Lock",
                "Quota"
            ]
        },
        "LifecycleActions": {
            "type": "object",
            "properties": {
                "isSendCancellation": {
                    "default": false,
                    "type": "boolean"
                },
                "sendCancellationEmailTemplateId": {
                    "type": "string"
                },
                "isNotifyEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "notifyUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "notifyEmailTemplateId": {
                    "type": "string"
                },
                "entraGroupLifecycleActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/EntraGroupLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Delete",
                        "None"
                    ]
                },
                "activityId": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                }
            }
        },
        "LifecycleSCModel": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LifecycleScopeSetting": {
            "type": "object",
            "properties": {
                "isLimitGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "scopeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupScopeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SelectTenant",
                        "SelectContainer",
                        "InheritFromGallery",
                        "PredefinedObject"
                    ]
                },
                "office365Tenant": {
                    "description": "This class is used to deserialize the activity tree node in service ActivityGalleryFlow",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Office365Tenant"
                        }
                    ]
                },
                "tenantId": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContainerScopeSetting"
                    }
                },
                "gallery": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GallerySetting"
                        }
                    ]
                },
                "activityType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                }
            }
        },
        "LifecycleTeamModel": {
            "type": "object",
            "properties": {
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "sharedPointSiteUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LinkMetadataSettings": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "LinkPermissionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SameAsOrganization",
                "View",
                "Edit"
            ]
        },
        "LinkPermissionTypeChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkPermissionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "View",
                        "Edit"
                    ]
                },
                "originalValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkPermissionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "View",
                        "Edit"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "LinkValue": {
            "description": "Value of Hyperlink metadata",
            "type": "object",
            "properties": {
                "title": {
                    "description": "Title of link metadata",
                    "type": "string"
                },
                "address": {
                    "description": "Address of link metadata",
                    "type": "string"
                }
            }
        },
        "ListPermissionSetting": {
            "type": "object",
            "properties": {
                "stopInheritingPermissions": {
                    "default": false,
                    "type": "boolean"
                },
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestGroupWithPermissions"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ListPermissionSettings": {
            "type": "object",
            "properties": {
                "stopInheritingPermissions": {
                    "default": false,
                    "type": "boolean"
                },
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestGroupWithPermissions"
                    }
                }
            }
        },
        "ListTemplate": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPListTemplateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoListTemplate",
                        "GenericList",
                        "DocumentLibrary",
                        "Survey",
                        "Links",
                        "Announcements",
                        "Contacts",
                        "Events",
                        "Tasks",
                        "DiscussionBoard",
                        "PictureLibrary",
                        "DataSources",
                        "WebTemplateCatalog",
                        "UserInformation",
                        "WebPartCatalog",
                        "ListTemplateCatalog",
                        "XMLForm",
                        "MasterPageCatalog",
                        "NoCodeWorkflows",
                        "WorkflowProcess",
                        "WebPageLibrary",
                        "CustomGrid",
                        "SolutionCatalog",
                        "NoCodePublic",
                        "ThemeCatalog",
                        "DesignCatalog",
                        "AppDataCatalog",
                        "DataConnectionLibrary",
                        "WorkflowHistory",
                        "GanttTasks",
                        "HelpLibrary",
                        "AccessRequest",
                        "TasksWithTimelineAndHierarchy",
                        "MaintenanceLogs",
                        "Meetings",
                        "Agenda",
                        "MeetingUser",
                        "Decision",
                        "MeetingObjective",
                        "TextBox",
                        "ThingsToBring",
                        "HomePageLibrary",
                        "Posts",
                        "Comments",
                        "Categories",
                        "Facility",
                        "Whereabouts",
                        "CallTrack",
                        "Circulation",
                        "Timecard",
                        "Holidays",
                        "IMEDic",
                        "ExternalList",
                        "MySiteDocumentLibrary",
                        "PagesLibrary",
                        "IssueTracking",
                        "AdminTasks",
                        "HealthRules",
                        "HealthReports",
                        "DeveloperSiteDraftApps",
                        "InvalidType"
                    ]
                },
                "baseType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPBaseType"
                        }
                    ],
                    "x-enum-varnames": [
                        "GenericList",
                        "DocumentLibrary",
                        "Unused",
                        "DiscussionBoard",
                        "Survey",
                        "Issue",
                        "UnspecifiedBaseType"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "isCustomTemplate": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ListTemplateSettings": {
            "type": "object",
            "properties": {
                "availabeTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListTemplate"
                    }
                },
                "defaultTemplate": {
                    "type": "string"
                },
                "templateStoreUrl": {
                    "type": "string"
                }
            }
        },
        "ListType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Library",
                "List"
            ]
        },
        "ListValidationParameter": {
            "type": "object",
            "properties": {
                "listUrl": {
                    "type": "string"
                },
                "parentUrl": {
                    "type": "string"
                },
                "listTitle": {
                    "type": "string"
                },
                "isDocumentLibrary": {
                    "default": false,
                    "type": "boolean"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ListVersionSettings": {
            "type": "object",
            "properties": {
                "listType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Library",
                        "List"
                    ]
                },
                "enableMajorVersions": {
                    "default": false,
                    "type": "boolean"
                },
                "enableMajorAndMinorVersions": {
                    "default": false,
                    "type": "boolean"
                },
                "enableMajorVersionLimit": {
                    "default": false,
                    "type": "boolean"
                },
                "majorVersionLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "enableMinorVersionLimit": {
                    "default": false,
                    "type": "boolean"
                },
                "minorVersionsLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "requireContentApproval": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ListVersionSettingsChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListVersionSettings"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ListVersionSettings"
                        }
                    ]
                }
            }
        },
        "LocaleSettings": {
            "description": "Locale Settings",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "default": false,
                    "type": "boolean"
                },
                "locale": {
                    "format": "int32",
                    "description": "locale",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "LocalizedMetadataTermsAndConditionsModel": {
            "type": "object",
            "properties": {
                "term": {
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableCustomValue": {
                    "default": false,
                    "type": "boolean"
                },
                "trueValue": {
                    "type": "string"
                },
                "falseValue": {
                    "type": "string"
                }
            }
        },
        "LockSiteRequest": {
            "description": "Lock site collection request model",
            "type": "object",
            "properties": {
                "lockType": {
                    "format": "int32",
                    "description": "Site collection locking status",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLockType"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoAccess",
                        "ReadOnly",
                        "NoAccessAndReadOnly",
                        "Unlock"
                    ]
                },
                "lockTypeDescription": {
                    "description": "Description of site collection locking status. You can get all available description of site collection locking statuses by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "LockSiteSetting": {
            "type": "object",
            "properties": {
                "enableLockAsNoAccess": {
                    "default": false,
                    "type": "boolean"
                },
                "enableLockAsReadonly": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "LogicalOperator": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "And",
                "Or"
            ]
        },
        "LogicalOperatorType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "And",
                "Or"
            ]
        },
        "LookupListValue": {
            "description": "Value of Lookup User Profile or Azure Ad metadata.",
            "type": "object",
            "properties": {
                "columnType": {
                    "description": "type of lookup list column",
                    "type": "string"
                },
                "columnName": {
                    "description": "name of lookup list column",
                    "type": "string"
                },
                "value": {
                    "description": "Value of lookup list",
                    "type": "string"
                },
                "displayValue": {
                    "description": "Display value of lookup list",
                    "type": "string"
                }
            }
        },
        "LookupValue": {
            "description": "Value of Lookup to SharePoint library/list metadata.",
            "type": "object",
            "properties": {
                "tenant": {
                    "description": "Id of Office365 tenant.",
                    "type": "string",
                    "readOnly": true
                },
                "property": {
                    "description": "Name of user property.",
                    "type": "string",
                    "readOnly": true
                },
                "extensionAttribute": {
                    "description": "Extension attribute of user property.",
                    "type": "string",
                    "readOnly": true
                },
                "targetUser": {
                    "description": "Lookup user",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "userPropertyValue": {
                    "description": "Property value of lookup user",
                    "type": "string"
                },
                "userPropertyDisplayValue": {
                    "description": "Property display value of lookup user",
                    "type": "string"
                }
            }
        },
        "M365GroupLifecycleActions": {
            "type": "object",
            "properties": {
                "m365GroupLifecycleActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/M365GroupLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Delete"
                    ]
                },
                "isSendCancellation": {
                    "default": false,
                    "type": "boolean"
                },
                "sendCancellationEmailTemplateId": {
                    "type": "string"
                },
                "isNotifyEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "notifyUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "notifyEmailTemplateId": {
                    "type": "string"
                },
                "entraGroupLifecycleActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/EntraGroupLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Delete",
                        "None"
                    ]
                },
                "activityId": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                }
            }
        },
        "M365GroupLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Delete"
            ]
        },
        "M365GroupLifecycleGallery": {
            "type": "object",
            "properties": {
                "office365TenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "m365GroupInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/M365GroupLifecycleModel"
                        }
                    ]
                },
                "m365GroupLifecycleScopeSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/M365GroupLifecycleScopeSetting"
                        }
                    ]
                },
                "m365GroupLifecycleActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/M365GroupLifecycleActions"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "M365GroupLifecycleModel": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "officeTenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "sharedPointSiteUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "M365GroupLifecycleScopeSetting": {
            "type": "object",
            "properties": {
                "isLimitGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "scopeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupScopeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SelectTenant",
                        "SelectContainer",
                        "InheritFromGallery",
                        "PredefinedObject"
                    ]
                },
                "office365Tenant": {
                    "description": "This class is used to deserialize the activity tree node in service ActivityGalleryFlow",
                    "allOf": [
                        {
                            "$ref": "#/definitions/Office365Tenant"
                        }
                    ]
                },
                "tenantId": {
                    "type": "string"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ContainerScopeSetting"
                    }
                },
                "gallery": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GallerySetting"
                        }
                    ]
                },
                "activityType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                }
            }
        },
        "MailboxAutoMapping": {
            "type": "object",
            "properties": {
                "enableAutoMapping": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MailboxAutomaticReply": {
            "type": "object",
            "properties": {
                "enableAutomaticReply": {
                    "default": false,
                    "type": "boolean"
                },
                "enableConfigureTime": {
                    "default": false,
                    "type": "boolean"
                },
                "startDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "replySenderInsider": {
                    "type": "string"
                },
                "enableReplySenderOutsider": {
                    "default": false,
                    "type": "boolean"
                },
                "convertSendReply": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ConvertAutomaticReply"
                        }
                    ],
                    "x-enum-varnames": [
                        "ReplyOnlyInternalSender",
                        "ReplyAllExternalSender"
                    ]
                },
                "replySenderOutsider": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MailboxLanguageDataTime": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "dateFormat": {
                    "type": "string"
                },
                "timeFormat": {
                    "type": "string"
                },
                "enableLocalizeDefaultFolderName": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MailboxSentItems": {
            "type": "object",
            "properties": {
                "copySendAs": {
                    "default": false,
                    "type": "boolean"
                },
                "copySendOnBehalf": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MailboxSharedMailboxPolicy": {
            "type": "object",
            "properties": {
                "sharingPolicy": {
                    "type": "string"
                },
                "roleAssignmentPolicy": {
                    "type": "string"
                },
                "retentionPolicy": {
                    "type": "string"
                },
                "addressBookPolicy": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ManagePermissionAction": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Added",
                "Changed",
                "Deleted",
                "Copied",
                "Remove"
            ]
        },
        "ManagePermissionGrantSetting": {
            "type": "object",
            "properties": {
                "isEnableGrantPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isGrantTemporaryPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "grantPermissionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "temporaryPermissionDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "temporaryDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "isMaxTemporaryDurationSetted": {
                    "default": false,
                    "type": "boolean"
                },
                "temporaryPermissionMaxDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "temporaryPermissionMaxDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "isEnableExpireNotify": {
                    "default": false,
                    "type": "boolean"
                },
                "isAllowSelectAdmin": {
                    "default": false,
                    "type": "boolean"
                },
                "expireNotifyDuration": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "expireNotifyDurationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "expireNotifyEmailTemplate": {
                    "format": "uuid",
                    "type": "string"
                },
                "isEnableWelcomeNotify": {
                    "default": false,
                    "type": "boolean"
                },
                "welcomeEmailSubject": {
                    "type": "string"
                },
                "welcomeEmailBody": {
                    "type": "string"
                },
                "welcomeEmailAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "allowSpecifyTemporayPermissionDuration": {
                    "default": false,
                    "type": "boolean"
                },
                "welcomeEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isWelcomeEmailTemplate": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ManagePermissionOption": {
            "type": "object",
            "properties": {
                "grantPermissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionGrantSetting"
                        }
                    ]
                },
                "isEnableEditPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableRemovePermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableStopInheritPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableDeleteUniquePermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableExcludePermissionLevel": {
                    "default": false,
                    "type": "boolean"
                },
                "isHideExcludePermissionItem": {
                    "default": false,
                    "type": "boolean"
                },
                "excludedPermissionLevles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                }
            }
        },
        "ManagePermissionRequest": {
            "description": "Manage permission request model",
            "type": "object",
            "properties": {
                "objectUrl": {
                    "description": "Object URL",
                    "type": "string"
                },
                "objectType": {
                    "format": "int32",
                    "description": "Object type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "objectTitle": {
                    "description": "Object name",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "webUrl": {
                    "description": "Site URL",
                    "type": "string"
                },
                "spGroupManagement": {
                    "description": "SharePoint group management settings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SPGroupManagementModel"
                    }
                },
                "permissionManagement": {
                    "description": "Permission management settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/PermissionManagementModel"
                        }
                    ]
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ManagePermissionService": {
            "type": "object",
            "properties": {
                "userScopeSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionUserSetting"
                        }
                    ]
                },
                "sharePointGroupOptions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionSharePointGroupOption"
                        }
                    ]
                },
                "permissionOptions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionOption"
                        }
                    ]
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "peoplePickerFilterProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Manage permission request model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "ManagePermissionSharePointGroupOption": {
            "type": "object",
            "properties": {
                "isEnableCreateSPGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableDeleteSPGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableManageGroupSettings": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableManageGroupMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "groupOwner": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "groupOwnerAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "spGroupViewType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupViewOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupMembers",
                        "EveryOne"
                    ]
                },
                "spGroupEditType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupEditOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupOwner",
                        "GroupMembers"
                    ]
                },
                "spGroupOptionAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "isAllowJoinOrLeaveRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "isAutoAcceptRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "sendMembershipRequestEmailAddress": {
                    "type": "string"
                },
                "groupRequestAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "isEnabelSPMemberWelcomeEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "spMemberWelcomeEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "ManagePermissionSPObject": {
            "type": "object",
            "properties": {
                "parentUrl": {
                    "type": "string"
                },
                "parentNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "siteUrl": {
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "primaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "temporaryGroupTitle": {
                    "type": "string"
                },
                "language": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "groupId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webServerRelativeUrl": {
                    "type": "string"
                },
                "listTitle": {
                    "type": "string"
                },
                "topInheritUrl": {
                    "type": "string"
                },
                "inheritNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "isInheritedPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "fullUrl": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                }
            }
        },
        "ManagePermissionUserSetting": {
            "type": "object",
            "properties": {
                "userLevelRestrictionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelRestrictionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUser",
                        "PeersAndDirectOrIndirectReport",
                        "DirectOrIndirectReports"
                    ]
                },
                "userManagementSourceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserManagementSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "User",
                        "Group",
                        "All"
                    ]
                },
                "isEnableShowAADGroupMembers": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ManagePermissionValidateResult": {
            "type": "object",
            "properties": {
                "permissionLevels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                },
                "externalSharingOptions": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingOptions"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "VerifiedGuestUser",
                        "Anyone",
                        "ExistingGuestUser",
                        "CrossTenantUser"
                    ]
                },
                "enableShareAnonymousLink": {
                    "default": false,
                    "type": "boolean"
                },
                "object": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionSPObject"
                        }
                    ]
                },
                "userMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/UserInfo"
                    }
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "ManuallyInputUrlSetting": {
            "type": "object",
            "properties": {
                "enableConstructUrl": {
                    "default": false,
                    "type": "boolean"
                },
                "enableUrlValidation": {
                    "default": false,
                    "type": "boolean"
                },
                "constructUrlAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "validationRule": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TextValidationRuleRef"
                        }
                    ]
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "suffix": {
                    "type": "string"
                },
                "connection": {
                    "type": "string"
                },
                "contructUrlAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "MembershipApproval": {
            "type": "object",
            "properties": {
                "departGroupRule": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupInOutRuleType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Open",
                        "Closed",
                        "ApprovalRequired"
                    ]
                },
                "joinGroupRule": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupInOutRuleType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Open",
                        "Closed",
                        "ApprovalRequired"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MembershipUserType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "type": "integer",
            "x-enum-varnames": [
                "User",
                "SecurityGroup",
                "MailEnabledSecurityGroup",
                "DistributionList",
                "Office365Group",
                "Guest",
                "Team",
                "MailContact"
            ]
        },
        "MessageApproval": {
            "type": "object",
            "properties": {
                "moderators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedModerators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "bypassModerationFromSendersOrMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedBypassModerationFromSendersOrMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MessageCode": {
            "format": "int32",
            "enum": [
                0,
                1,
                300,
                301,
                302,
                303,
                304,
                305,
                306,
                307,
                308,
                309,
                310,
                311,
                312,
                313,
                314,
                400,
                401,
                402,
                403,
                404,
                405,
                406,
                407,
                408,
                409,
                410,
                411,
                412,
                413,
                414,
                415,
                416,
                417,
                418,
                419,
                420,
                421,
                422,
                423,
                424,
                425,
                426,
                427,
                428,
                500,
                501,
                502,
                551,
                600,
                601,
                602,
                700,
                800,
                900,
                901,
                902,
                903,
                904,
                905,
                906,
                907,
                908,
                909,
                950,
                951,
                952,
                953,
                954,
                955,
                956,
                960,
                961,
                962,
                963,
                964,
                965,
                966,
                967,
                968,
                969,
                970,
                971,
                972,
                973,
                974,
                975,
                976,
                977,
                978,
                979,
                980,
                981,
                982,
                983,
                984,
                985,
                986,
                987,
                988,
                989,
                990,
                991,
                992,
                993,
                994,
                995,
                996,
                997,
                998,
                999,
                1000,
                1001,
                1002
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "NoServicePermission",
                "SiteNotInScope",
                "SiteUnlock",
                "SiteNotInGADB",
                "SiteInvalid",
                "SiteLifecycleLock",
                "SiteAutoLifecycleLock",
                "SiteHasPendingRenewal",
                "SiteHasRecertification",
                "SitePolicyInvalid",
                "SiteExtendTimeError",
                "SiteLocked",
                "NotInAos",
                "InvalidSiteUrl",
                "InvalidActivityId",
                "SiteIsConnectToChannel",
                "GroupArchived",
                "GroupNotInGADB",
                "TeamArchiveAvaliable",
                "TeamRestoreAvaliable",
                "TeamArchivedNotRestore",
                "GroupNotInScope",
                "TeamNotInScope",
                "GroupDisableDelete",
                "GroupDisableExtend",
                "GroupDisableChangePolicy",
                "GroupDisableChangeQuota",
                "GroupDisableArchive",
                "GroupDisableUnArchive",
                "GroupNotInServiceScope",
                "GroupNotAllowAddGuestUser",
                "YammerNotInScope",
                "YammerNotSupportedArchive",
                "GroupRestrictAccess",
                "NotSupportDynamicServiceCreated",
                "NotSupportDynamicServiceCreatedSite",
                "ExchangeResourceNotInAos",
                "ExchangeResourceNotInScope",
                "TeamLifecycleNoAvaliableAction",
                "GroupNotExistInAzureAD",
                "TeamArchived",
                "NotSupportYammer",
                "GroupEnabledTeam",
                "GroupEnabledYammer",
                "TeamAPINotSupportForGCCH",
                "CreateGuestUserEmailExist",
                "CreateGuestUserEmailVerified",
                "NotSupportDynamicServiceCreatedGroup",
                "GuestLifecycleNoAvaliableAction",
                "ListTitleExist",
                "ListUrlExist",
                "ParentSiteUrlNotExist",
                "GroupDisableLease",
                "SharedMailboxNotInScope",
                "ObjectNotInScope",
                "ObjectNotInGADB",
                "SharedMailboxNotExistInAzureAD",
                "GuestUserNotExistInAzureAD",
                "PowerAppNotExistInAzureAD",
                "PowerAppNotInGADB",
                "GuestUserNotInGADB",
                "PowerAppNotInScope",
                "GuestUserNotHasScope",
                "ObjectHasRunningAutoImportTask",
                "TeamMarkedAsDeleted",
                "TeamNotExistInMSEnvironment",
                "TeamIsApplyingPolicy",
                "TeamHasNotBeenConfirmed",
                "NotManagedASTeamWithinGAO",
                "IsAlreadyTeam",
                "TeamSiteLocked",
                "SCLifecycleNoAvailableAction",
                "SCNotInScope",
                "PowerBINotExistInAzureAD",
                "PowerAutomateNotExistInAzureAD",
                "EnvironmentNotExistInAzureAD",
                "EnvironmentNotInScope",
                "PowerAutomateNotInScope",
                "PowerBINotInScope",
                "NotSupportGroupSite",
                "PowerBINotInGADB",
                "PowerAutomateNotInGADB",
                "PowerEnvironmentNotInGADB",
                "GroupSiteIsLocked",
                "YammerSiteIsLocked",
                "TeamSiteIsLocked",
                "Office365GroupNotInGADB",
                "TeamNotInGADB",
                "YammerNotInGADB",
                "SecurityGroupNotInGADB",
                "DistributionGroupNotInGADB",
                "MailEnabledNotInGADB",
                "SharedMailboxNotInGADB",
                "PowerAppIsQuarantined",
                "PowerEnvironmentIsDisabled",
                "PowerAutomateIsDisabled",
                "PowerAutomateIsSuspended",
                "SecurityGroupNotInScope",
                "DistributionGroupNotInScope",
                "MailEnabledNotInScope",
                "SiteArchived",
                "SiteIsApplyingPolicy",
                "SiteHasNotBeenConfirmed",
                "UserNotInScope",
                "UserNotExists",
                "GroupMarkedAsDeleted",
                "GroupNotExistInMSEnvironment",
                "GroupIsApplyingPolicy",
                "GroupHasNotBeenConfirmed",
                "UserEnabledOnPremiseSync",
                "GroupEnabledOnPremiseSync",
                "ManagePermissionUrlNotInScope",
                "UserTypeNotSupport",
                "NoAADAppProfile"
            ]
        },
        "MetadataActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                -1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NoChange",
                "Add",
                "Edit",
                "Delete"
            ]
        },
        "MetadataFieldType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "SingleLineText",
                "MultiLineText",
                "YesOrNo",
                "Choices",
                "PeoplePickerValue",
                "Terms",
                "Hyperlink",
                "UserProfileService",
                "AzureADProperty",
                "SharePointList"
            ]
        },
        "MultiGeoControlMode": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "SpecifiedDirectly",
                "SpecifiedByRole"
            ]
        },
        "MultiGeoLocationSetting": {
            "type": "object",
            "properties": {
                "geoLocation": {
                    "type": "string"
                },
                "geoLocationDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "MultiGeoSerivceSetting": {
            "type": "object",
            "properties": {
                "isMultiGeoTenant": {
                    "default": false,
                    "type": "boolean"
                },
                "allLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoLocationModel"
                    }
                },
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "controlMode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoControlMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SpecifiedDirectly",
                        "SpecifiedByRole"
                    ]
                },
                "defaultLocation": {
                    "description": "Geo location base model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GeoLocationBase"
                        }
                    ]
                },
                "selectedLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoLocationBase"
                    }
                },
                "locationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "userRoleForLocation": {
                    "type": "string"
                }
            }
        },
        "MultiGeoSetting": {
            "type": "object",
            "properties": {
                "isEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "controlMode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MultiGeoControlMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SpecifiedDirectly",
                        "SpecifiedByRole"
                    ]
                },
                "defaultLocation": {
                    "description": "Geo location base model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GeoLocationBase"
                        }
                    ]
                },
                "selectedLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoLocationBase"
                    }
                },
                "locationAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "userRoleForLocation": {
                    "type": "string"
                },
                "allLocations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GeoLocationBase"
                    }
                }
            }
        },
        "MyExchangeResource": {
            "type": "object",
            "properties": {
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExchangeResourceStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted"
                    ]
                },
                "workspaceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "workspaceTypeDes": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "phaseDescription": {
                    "type": "string"
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "autoImportProfileName": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfileName": {
                    "type": "string"
                },
                "renewalProfileDescription": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDescription": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileDescription": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileDescription": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "phaseAssignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "phaseDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "hasSubmitted": {
                    "default": false,
                    "type": "boolean"
                },
                "hasPendingApprovalTask": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "MyResourceMailbox": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExchangeResourceStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted"
                    ]
                },
                "workspaceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "workspaceTypeDes": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "phaseDescription": {
                    "type": "string"
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "autoImportProfileName": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfileName": {
                    "type": "string"
                },
                "renewalProfileDescription": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDescription": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileDescription": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileDescription": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "phaseAssignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "phaseDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "hasSubmitted": {
                    "default": false,
                    "type": "boolean"
                },
                "hasPendingApprovalTask": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "MySharedMailbox": {
            "type": "object",
            "properties": {
                "preferredDataLocation": {
                    "type": "string"
                },
                "preferredDataLocationName": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExchangeResourceStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted"
                    ]
                },
                "workspaceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "workspaceTypeDes": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "phaseDescription": {
                    "type": "string"
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "autoImportProfileName": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfileName": {
                    "type": "string"
                },
                "renewalProfileDescription": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDescription": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileDescription": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileDescription": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "phaseAssignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "phaseDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "hasSubmitted": {
                    "default": false,
                    "type": "boolean"
                },
                "hasPendingApprovalTask": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "MySite": {
            "type": "object",
            "properties": {
                "fullUrl": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "quotaSize": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MySiteType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web"
                    ]
                },
                "mySiteType": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "sensitivity": {
                    "type": "string"
                },
                "isCommunicationSite": {
                    "default": false,
                    "type": "boolean"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "storageUsed": {
                    "type": "string"
                },
                "primaryAdministrator": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "additionalAdministrator": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "preferredDataLocation": {
                    "type": "string"
                },
                "preferredDataLocationName": {
                    "type": "string"
                },
                "siteStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted",
                        "Archived",
                        "Locked",
                        "TemporaryLocked"
                    ]
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "phaseDescription": {
                    "type": "string"
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "autoImportProfileName": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfileName": {
                    "type": "string"
                },
                "renewalProfileDescription": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDescription": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileDescription": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileDescription": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "phaseAssignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "phaseDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "errorMessage": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "hasSubmitted": {
                    "default": false,
                    "type": "boolean"
                },
                "hasPendingApprovalTask": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "MySiteType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Site",
                "Web"
            ]
        },
        "NameDescription": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "NavigationSetting": {
            "type": "object",
            "properties": {
                "isDisplayOnQuickLaunch": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "NodeType": {
            "format": "int32",
            "enum": [
                2,
                100,
                200,
                300,
                310,
                400,
                500,
                501,
                -2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Container",
                "Site",
                "Web",
                "List",
                "DocumentLibrary",
                "Folder",
                "Item",
                "File",
                "None"
            ]
        },
        "ObjectPermissionManagementModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPPrincipalType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "User",
                        "DistributionList",
                        "SecurityGroup",
                        "SharePointGroup",
                        "All"
                    ]
                },
                "objectInfo": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Added",
                        "Changed",
                        "Deleted",
                        "Copied",
                        "Remove"
                    ]
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "originalPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "externalUserType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharingEnabledUser"
                    }
                },
                "grantPermissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GrantPermissionModel"
                        }
                    ]
                },
                "originalName": {
                    "type": "string"
                }
            }
        },
        "ObjectValidateResult": {
            "type": "object",
            "properties": {
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "Office365SiteSettingModel": {
            "type": "object",
            "properties": {
                "sensitivityLabelEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "classificationList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupClassificationModel"
                    }
                },
                "sensitivityLabelList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SensitivityLabelModel"
                    }
                }
            }
        },
        "Office365Tenant": {
            "description": "This class is used to deserialize the activity tree node in service ActivityGalleryFlow",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "galleryType": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "runAfter": {
                    "type": "string"
                }
            }
        },
        "OfficeTenant": {
            "type": "object",
            "properties": {
                "officeTenantId": {
                    "type": "string"
                },
                "adminCenterUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "OneTimeRenewalOption": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NoMore",
                "Specific"
            ]
        },
        "OutlookExperience": {
            "type": "object",
            "properties": {
                "originalEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "OutsideSenders": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "PermissionChangedType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "RemovePermission",
                "ChangePermission"
            ]
        },
        "PermissionLevel": {
            "description": "Permission level model",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Permission level ID",
                    "type": "string"
                },
                "idInSharePoint": {
                    "format": "int32",
                    "description": "Permission ID in SharePoint",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "description": "Permission name",
                    "type": "string"
                },
                "description": {
                    "description": "Permission description",
                    "type": "string",
                    "readOnly": true
                },
                "isExcluded": {
                    "description": "Whether the permission is excluded.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "isCloudGovernanceCustomized": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "PermissionManagementModel": {
            "type": "object",
            "properties": {
                "isUniquePermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isPermissionInheritanceChanged": {
                    "default": false,
                    "type": "boolean"
                },
                "isCopyPermissionsFromParent": {
                    "default": false,
                    "type": "boolean"
                },
                "inheritedSiteUrl": {
                    "type": "string"
                },
                "permissionItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectPermissionManagementModel"
                    }
                }
            }
        },
        "PermissionObjectProperty": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webServerRelativeUrl": {
                    "type": "string"
                },
                "listTitle": {
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "isInherit": {
                    "default": false,
                    "type": "boolean"
                },
                "inheritNodeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TreeNodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Root",
                        "WebApplication",
                        "Tenant",
                        "Container",
                        "ManagedPath",
                        "SiteCollection",
                        "Site",
                        "Sites",
                        "Lists",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Folders",
                        "Items",
                        "Item",
                        "File",
                        "Team",
                        "Yammer",
                        "Group",
                        "GuestUser",
                        "PrivateChannel",
                        "PowerApps",
                        "SecurityGroup",
                        "DistributionList",
                        "MailEnableGroup",
                        "SharedMailbox",
                        "SharedChannel",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User",
                        "All",
                        "WebApplication_D",
                        "BPOSDCA",
                        "SelectAll",
                        "None",
                        "Farm"
                    ]
                },
                "topInheritUrl": {
                    "type": "string"
                },
                "checkType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TreeNodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Root",
                        "WebApplication",
                        "Tenant",
                        "Container",
                        "ManagedPath",
                        "SiteCollection",
                        "Site",
                        "Sites",
                        "Lists",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Folders",
                        "Items",
                        "Item",
                        "File",
                        "Team",
                        "Yammer",
                        "Group",
                        "GuestUser",
                        "PrivateChannel",
                        "PowerApps",
                        "SecurityGroup",
                        "DistributionList",
                        "MailEnableGroup",
                        "SharedMailbox",
                        "SharedChannel",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User",
                        "All",
                        "WebApplication_D",
                        "BPOSDCA",
                        "SelectAll",
                        "None",
                        "Farm"
                    ]
                }
            }
        },
        "PermissionSettings": {
            "type": "object",
            "properties": {
                "allowGrantUserPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "preventGrantSpecificPermissionLevels": {
                    "default": false,
                    "type": "boolean"
                },
                "preventPermissionLevles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                }
            }
        },
        "PersonalSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "userID": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "languageID": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "timeZoneID": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "isAdjustDaylight": {
                    "default": false,
                    "type": "boolean"
                },
                "isDelegateAdmin": {
                    "default": false,
                    "type": "boolean"
                },
                "properties": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/PersonalSettingsPropertyInfo"
                        }
                    ]
                }
            }
        },
        "PersonalSettingsPropertyInfo": {
            "type": "object",
            "properties": {
                "selectedLanguages": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "default": 0,
                        "type": "integer"
                    }
                },
                "isUsingBrowserLanguage": {
                    "default": false,
                    "type": "boolean"
                },
                "themeCode": {
                    "type": "string"
                },
                "themeType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ThemeSettingType"
                        }
                    ],
                    "readOnly": true,
                    "x-enum-varnames": [
                        "BusinessUserConfig",
                        "ITConfig"
                    ]
                },
                "isEnabledInTeamsApp": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "PnpTemplate": {
            "type": "object",
            "properties": {
                "templateListTitle": {
                    "type": "string"
                },
                "templateLibraryUrl": {
                    "type": "string"
                },
                "templateWebUrl": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "PolicyWithTemplates": {
            "type": "object",
            "properties": {
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "defaultTemplate": {
                    "type": "string"
                },
                "templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTemplate"
                    }
                }
            }
        },
        "PrincipalType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                100,
                102,
                111,
                128,
                256,
                512,
                1024,
                2048,
                4096,
                8192,
                16384,
                32768,
                65536
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "User",
                "DistributionList",
                "Office365Group",
                "SharePointGroup",
                "Guest",
                "SecurityGroupOnly",
                "MailEnabledSecurityGroup",
                "SecurityGroup",
                "AzureADGroup",
                "All",
                "Team",
                "SharedMailbox",
                "Yammer",
                "OnlyOffice365Group",
                "RoomList",
                "RoomMailbox",
                "EquipmentMailbox",
                "Office365GroupSecurityEnable",
                "Office365GroupSecurityDisable",
                "MailContact"
            ]
        },
        "Privacy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "QuestionAnswerResponse": {
            "type": "object",
            "properties": {
                "question": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "QuotaProfile": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "RegisterAsHubSite": {
            "type": "object",
            "properties": {
                "enabledUsers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "hubSiteName": {
                    "type": "string"
                }
            }
        },
        "RemoteNodeInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "parentId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                }
            }
        },
        "RemoteNodeType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SiteCollection",
                "Mailbox",
                "OneDrive",
                "Office365GroupSites",
                "Office365GroupMailboxes",
                "Office365Group",
                "ProjectOnline",
                "PublicFolder"
            ]
        },
        "RenewalProfile": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ReportMetadata": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "displayValue": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SingleLineText",
                        "MultiLineText",
                        "YesOrNo",
                        "Choices",
                        "PeoplePickerValue",
                        "Terms",
                        "Hyperlink",
                        "UserProfileService",
                        "AzureADProperty",
                        "SharePointList"
                    ]
                }
            }
        },
        "RequestGroupWithPermissions": {
            "description": "Group permissions model in request",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Group name",
                    "type": "string"
                },
                "description": {
                    "description": "Group description",
                    "type": "string"
                },
                "users": {
                    "description": "The list of the group users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                },
                "permissionLevels": {
                    "description": "The list of the group permission levels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                },
                "groupOwner": {
                    "description": "Group owner information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "groupOwnerType": {
                    "format": "int32",
                    "description": "Group owner type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupOwnerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SpoGroup",
                        "User"
                    ]
                },
                "buildInGroupType": {
                    "format": "int32",
                    "description": "Built-in group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharePointBuildInGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Owners",
                        "Members",
                        "Visitors"
                    ]
                }
            }
        },
        "RequestList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "category": {
                    "format": "uuid",
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "approvalStageName": {
                    "type": "string"
                },
                "participants": {
                    "type": "string"
                },
                "participantDisplayName": {
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "objectID": {
                    "type": "string"
                },
                "hasSubRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "ticketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ErrorStart",
                        "Error",
                        "RequestSubmitted",
                        "TaskCreated",
                        "AdminContactIssueReview",
                        "Cancelled",
                        "Rejected",
                        "FirstStageApproval",
                        "SecondStageApproval",
                        "ThirdStageApproval",
                        "Completed",
                        "AssignContentDatabase",
                        "CreateSiteCollection",
                        "ApplySecuritySettings",
                        "ApplySharePointConfigurations",
                        "ApplyCustomMetadata",
                        "AddToSiteCollectionDirectory",
                        "ApplyDocAveGranularBackupPlan",
                        "ApplyDocAveAuditorPlan",
                        "ApplyDocAveDeadAccountCleaningPlan",
                        "ApplyDocAveScheduledStorageManagerProfile",
                        "ApplyDocAveArchiverProfile",
                        "ApplyDocAveVaultProfile",
                        "ApplyAndRunDPMPlan",
                        "ArchiveSiteCollection",
                        "UpdateSiteCollectionArchived",
                        "ExtendSiteCollection",
                        "UpdateCustomMetadata",
                        "UpdateSiteDirectory",
                        "DeleteSiteCollection",
                        "UpdateSiteCollectionDeleted",
                        "CreateSubSite",
                        "AddToSubSiteDirectory",
                        "RetractDocAveGranularBackupPlan",
                        "RetractDocAveAuditorPlan",
                        "RetractDocAveDeadAccountCleaningPlan",
                        "RetractDocAveScheduledStorageManagerProfile",
                        "RetrieveDocAveArchiveProfile",
                        "RetrieveDocAveVaultProfile",
                        "UpdateChangeSCPolicyMetadata",
                        "UpdateSiteCollectionPolicyChanged",
                        "CreateHiddenList",
                        "ChangeSiteCollectionMetadata",
                        "UpdateSiteDirectoryForChangeSCMetadata",
                        "ChangeSiteCollectionContact",
                        "UpdateSiteDirectoryForChangeSCContact",
                        "CloneUserPermission",
                        "SearchUserPermission",
                        "InProgress",
                        "CompletedWithException",
                        "DeleteSubSite",
                        "UpdateDeleteSubSite",
                        "ArchiveSubSite",
                        "UpdateArchiveSubSite",
                        "ChangeSubSiteMetadata",
                        "UpdateSiteDirectoryForChangeSSMetadata",
                        "FirstTaskCreated",
                        "SecondTaskCreated",
                        "ThirdTaskCreated",
                        "GrantUserPermission",
                        "RemoveUserPermission",
                        "ChangeSCSettingsTitleDes",
                        "CreateMySiteCompleted",
                        "CreateCMPlan",
                        "RunCMPlan",
                        "ApplyArchiverProfile",
                        "CreateListCompleted",
                        "ChangeListURL",
                        "ChangeListSettingsCompleted",
                        "RegistSiteCollectionToDcoAveGroup",
                        "ApplyPolicyEnforcerProfile",
                        "UpdatePolicyEnforcerProfileCompleted",
                        "PermissionRecertificationTriggered",
                        "ChangingUserPermission",
                        "RequesterReportCreated",
                        "ApplyDeployAppPart",
                        "ApplyAddAppPart",
                        "ApplyingDeploymentManagerPlan",
                        "ApplyPermissionRecertification",
                        "ApplyMetadataRecertification",
                        "ApplyOwnershipRecertification",
                        "UnlockSiteCollection",
                        "UpdateSiteCollectionUnlocked",
                        "ChangeSiteCollectionOwner",
                        "ChangeSiteCollectionAdditionalAdmin",
                        "CreateOrValidYammerGroup",
                        "AddYammerGroupFeed",
                        "CancelAutoTask",
                        "ContinueAccess",
                        "ChangeSSSettingsTitleDes",
                        "FailedToSubmit",
                        "WaitingForSubmission",
                        "AllApprovalStageComplete",
                        "LockSiteCollection",
                        "UpdateSiteCollectionLocked",
                        "ChangeSiteCollectionQuota",
                        "UpdateSiteCollectionChangedQuota",
                        "ApplyAdditionalAdministrators",
                        "CallCustomActionBeforeApproval",
                        "MaintanceWindow",
                        "CreateUser",
                        "AssignManager",
                        "AssignLicense",
                        "AddUserToGroups",
                        "RemoveUserFromGroups",
                        "AddUserReport",
                        "ApplyUserPolicy",
                        "ApplyOneDriveSiteProperties",
                        "ChangeUser",
                        "ChangeUserContact",
                        "ChangeUserLicense",
                        "ChangeUserManager",
                        "ChangeUserGroups",
                        "UpdateUserReport",
                        "ApplyUserRole",
                        "ChangeUserMail",
                        "RemoveOriginalMail",
                        "DeleteUser",
                        "BlockUser",
                        "ResetPassword",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeGroup",
                        "UpdateGroupReport",
                        "AddOwnersToGroup",
                        "AddMembersToGroup",
                        "RemoveOwnersFromGroup",
                        "RemoveMembersFromGroup",
                        "UpdateMetadatasToSite",
                        "ChangeDynamicGroupRules",
                        "UpdateGroupOwners",
                        "UpdateGroupMembers",
                        "CreateGroup",
                        "UpdateGroup",
                        "SetGroupOwners",
                        "SetGroupMembers",
                        "SetGroupQuota",
                        "AddGroupReport",
                        "ApplyGroupPolicy",
                        "EnableTeamCollaboration",
                        "ApplySiteDesign",
                        "ApplyGroupCustomMetadata",
                        "DeleteGroup",
                        "ChangeGroupPolicy",
                        "ExtendGroup",
                        "UpdateGroupStatus",
                        "InstallApp",
                        "GetGroup",
                        "RegisterSiteDocave",
                        "GetGroupSite",
                        "ChangeGroupQuota",
                        "SetGeoLocation",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "ApplyGroupExtension",
                        "ChangeTeamPrivateChannelSiteQuota",
                        "CreatingSite",
                        "ApplyingCustomTemplate",
                        "ApplyingSecuritySettings",
                        "ApplyingCustomMetadata",
                        "ApplyingSitePolicy",
                        "ApplyingAdditionalAdministrators",
                        "AddingToSiteDirectory",
                        "RegistingSiteToDao",
                        "ApplyingServiceDpmPlan",
                        "ServiceDpmPlanExecuted",
                        "ApplyingPolicyDpmPlan",
                        "PolicyDpmPlanExecuted",
                        "ApplyingPolicyEnforcerProfile",
                        "ApplyingArchiverProfile",
                        "ApplyingRecertification",
                        "InstallingApp",
                        "AddingAppParts",
                        "CreatingOrValidYammerGroup",
                        "AddingYammerGroupFeed",
                        "RemovingServiceAccount",
                        "CreateGuestUser",
                        "UpdateGuestUser",
                        "AddGuestUserToGroup",
                        "AddGuestUserReport",
                        "ApplyGuestUserRenewal",
                        "ApplyGuestUserElection",
                        "UnblockGuestUser",
                        "BlockGuestUser",
                        "DeleteGuestUser",
                        "CreatingWeb",
                        "ApplyingSecuritySettingsToWeb",
                        "ApplyingSharePointConfigurationsToWeb",
                        "ApplyingCustomMetadataToWeb",
                        "ApplyAndRunDPMPlanInCreatingWeb",
                        "AddingWebToDatabase",
                        "UpdatingWebInDatabase",
                        "DeployingAppPartToWeb",
                        "AddingAppPartToWeb",
                        "CreatingOrValidingYammerGroupInCreatingWeb",
                        "AddingYammerGroupFeedInWeb",
                        "DeletingSite",
                        "ArchivingSite",
                        "ChangingSitePolicy",
                        "UnlockingSite",
                        "LockingSite",
                        "ExtendingSite",
                        "ChangingSiteQuota",
                        "ChangingSiteTitleAndDescription",
                        "ChangingSiteMetadata",
                        "UpdatingSiteDirectory",
                        "ConvertingToHubSite",
                        "ConnectingToHubSite",
                        "UnregisteringHubSite",
                        "ChangingSensitivity",
                        "ChangingWebTitleAndDescription",
                        "ChangingListSetting",
                        "WaitingForGrantPermission",
                        "GrantingPermission",
                        "CheckingList",
                        "UploadingTemplate",
                        "CreatingList",
                        "CreatingCMPlan",
                        "RunningCMPlan",
                        "SettingGroupSharing",
                        "SettingOutlookExperience",
                        "WelcomeEmail",
                        "FailedWithSubRequestException",
                        "ValidatePrivateChannel",
                        "CreatePrivateChannel",
                        "AddUserToChannel",
                        "AddChannelToDB",
                        "ApplyPolicyToChannel",
                        "ChangeChannelName",
                        "ChangeChannelDescription",
                        "ChangeChannelMembers",
                        "ChangeChannelOwners",
                        "ChangeChannelToDB",
                        "RegistingSiteToAos",
                        "RegistingGroupToAos",
                        "StartingProcess",
                        "DeletePowerApps",
                        "UpdatePowerAppsStatus",
                        "DeletePowerBI",
                        "UpdatePowerBIStatus",
                        "DeletePowerAutomate",
                        "UpdatePowerAutomateStatus",
                        "FourthTaskCreated",
                        "FifthTaskCreated",
                        "WaitingForReSubmission",
                        "FourthStageApproval",
                        "FifthStageApproval",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "processStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "modified": {
                    "format": "date-time",
                    "type": "string"
                },
                "submitStatus": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "assigned": {
                    "type": "string"
                },
                "assignedLoginName": {
                    "type": "string"
                },
                "serviceAdmin": {
                    "type": "string"
                },
                "enabledCopy": {
                    "default": false,
                    "type": "boolean"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportMetadata"
                    }
                },
                "questionnaireId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "RequestListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "RequestMetadata": {
            "description": "Metadata model of request.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Id of metadata.",
                    "type": "string"
                },
                "name": {
                    "description": "Name of metadata.",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "booleanValue": {
                    "description": "Value of Yes/No metadata.",
                    "default": false,
                    "type": "boolean"
                },
                "singleLineOrMultipleLineValue": {
                    "description": "Value of Single/Multiple line of text metadata.",
                    "type": "string"
                },
                "upsOrAzureAdValue": {
                    "description": "Value of User Profile or Azure AD metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LookupValue"
                        }
                    ]
                },
                "termsValue": {
                    "description": "Value of Managed metadata metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TermsValue"
                        }
                    ]
                },
                "userValue": {
                    "description": "Value of Person or Group metadata.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "linkValue": {
                    "description": "Value of Hyperlink metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkValue"
                        }
                    ]
                },
                "choiceValue": {
                    "description": "Value of Choice metadata.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lookupListValue": {
                    "description": "Value of Lookup to SharePoint library/list metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LookupListValue"
                        }
                    ]
                },
                "type": {
                    "format": "int32",
                    "description": "Type of metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "readOnly": true
                },
                "valueString": {
                    "description": "Display value of metadata.",
                    "type": "string",
                    "readOnly": true
                },
                "valueDisplayString": {
                    "description": "Display value of metadata for show in the page.\n            The customer maybe depend the valueString to do something, so we need a new property for show in the page\n            GAO-43948",
                    "type": "string"
                },
                "value": {
                    "description": "Value of metadata, you can set this value for all metadata types when calling API\n            Examples:\n            Yes/No metadata: \"True\"\n            User Profile or Azure AD metadata: \"user1@example.com\"\n            Managed metadata metadata: \"term1;term2\"\n            Person or Group metadata: \"user1@example.com;user2@example.com\"\n            Hyperlink metadata: \"linktitle;linkaddress\"\n            Lookup to SharePoint library/list metadata: \"value\"\n            Choice metadata: \"choice1;choice2\"",
                    "type": "string"
                },
                "action": {
                    "format": "int32",
                    "description": "Action of metadata, used in change workspace metadata service.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoChange",
                        "Add",
                        "Edit",
                        "Delete"
                    ]
                },
                "allowReferenceAsRoleInApprovalProcess": {
                    "description": "Whether the metadata is allowed to be referenced as a variable role that can be selected in an approval process.",
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "type": "string"
                }
            }
        },
        "RequestMetadataListChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "originalValue": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "RequestProgressStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                67,
                68,
                69,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                94,
                95,
                96,
                97,
                98,
                99,
                100,
                101,
                400,
                401,
                500,
                501,
                502,
                503,
                504,
                505,
                506,
                507,
                510,
                511,
                512,
                513,
                514,
                515,
                516,
                517,
                518,
                520,
                521,
                522,
                523,
                524,
                525,
                530,
                531,
                532,
                533,
                534,
                535,
                536,
                537,
                538,
                539,
                540,
                541,
                542,
                543,
                544,
                545,
                546,
                547,
                548,
                549,
                550,
                551,
                552,
                553,
                554,
                555,
                556,
                557,
                558,
                559,
                560,
                561,
                562,
                563,
                600,
                601,
                602,
                603,
                604,
                605,
                606,
                607,
                608,
                609,
                610,
                611,
                612,
                613,
                614,
                615,
                616,
                617,
                618,
                619,
                620,
                621,
                622,
                623,
                624,
                625,
                626,
                627,
                628,
                700,
                701,
                702,
                703,
                704,
                705,
                706,
                707,
                708,
                709,
                710,
                800,
                801,
                802,
                803,
                804,
                805,
                806,
                830,
                831,
                832,
                833,
                834,
                835,
                836,
                850,
                900,
                950,
                951,
                1000,
                1001,
                1002,
                1050,
                1051,
                1052,
                1053,
                1054,
                1055,
                1100,
                1101,
                1102,
                1103,
                1104,
                1200,
                1201,
                1202,
                1203,
                1204,
                2000,
                2001,
                3000,
                4000,
                4001,
                4002,
                4003,
                4004,
                4005,
                5000,
                5001,
                5002,
                5003,
                5004,
                6000
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "ErrorStart",
                "Error",
                "RequestSubmitted",
                "TaskCreated",
                "AdminContactIssueReview",
                "Cancelled",
                "Rejected",
                "FirstStageApproval",
                "SecondStageApproval",
                "ThirdStageApproval",
                "Completed",
                "AssignContentDatabase",
                "CreateSiteCollection",
                "ApplySecuritySettings",
                "ApplySharePointConfigurations",
                "ApplyCustomMetadata",
                "AddToSiteCollectionDirectory",
                "ApplyDocAveGranularBackupPlan",
                "ApplyDocAveAuditorPlan",
                "ApplyDocAveDeadAccountCleaningPlan",
                "ApplyDocAveScheduledStorageManagerProfile",
                "ApplyDocAveArchiverProfile",
                "ApplyDocAveVaultProfile",
                "ApplyAndRunDPMPlan",
                "ArchiveSiteCollection",
                "UpdateSiteCollectionArchived",
                "ExtendSiteCollection",
                "UpdateCustomMetadata",
                "UpdateSiteDirectory",
                "DeleteSiteCollection",
                "UpdateSiteCollectionDeleted",
                "CreateSubSite",
                "AddToSubSiteDirectory",
                "RetractDocAveGranularBackupPlan",
                "RetractDocAveAuditorPlan",
                "RetractDocAveDeadAccountCleaningPlan",
                "RetractDocAveScheduledStorageManagerProfile",
                "RetrieveDocAveArchiveProfile",
                "RetrieveDocAveVaultProfile",
                "UpdateChangeSCPolicyMetadata",
                "UpdateSiteCollectionPolicyChanged",
                "CreateHiddenList",
                "ChangeSiteCollectionMetadata",
                "UpdateSiteDirectoryForChangeSCMetadata",
                "ChangeSiteCollectionContact",
                "UpdateSiteDirectoryForChangeSCContact",
                "CloneUserPermission",
                "SearchUserPermission",
                "InProgress",
                "CompletedWithException",
                "DeleteSubSite",
                "UpdateDeleteSubSite",
                "ArchiveSubSite",
                "UpdateArchiveSubSite",
                "ChangeSubSiteMetadata",
                "UpdateSiteDirectoryForChangeSSMetadata",
                "FirstTaskCreated",
                "SecondTaskCreated",
                "ThirdTaskCreated",
                "GrantUserPermission",
                "RemoveUserPermission",
                "ChangeSCSettingsTitleDes",
                "CreateMySiteCompleted",
                "CreateCMPlan",
                "RunCMPlan",
                "ApplyArchiverProfile",
                "CreateListCompleted",
                "ChangeListURL",
                "ChangeListSettingsCompleted",
                "RegistSiteCollectionToDcoAveGroup",
                "ApplyPolicyEnforcerProfile",
                "UpdatePolicyEnforcerProfileCompleted",
                "PermissionRecertificationTriggered",
                "ChangingUserPermission",
                "RequesterReportCreated",
                "ApplyDeployAppPart",
                "ApplyAddAppPart",
                "ApplyingDeploymentManagerPlan",
                "ApplyPermissionRecertification",
                "ApplyMetadataRecertification",
                "ApplyOwnershipRecertification",
                "UnlockSiteCollection",
                "UpdateSiteCollectionUnlocked",
                "ChangeSiteCollectionOwner",
                "ChangeSiteCollectionAdditionalAdmin",
                "CreateOrValidYammerGroup",
                "AddYammerGroupFeed",
                "CancelAutoTask",
                "ContinueAccess",
                "ChangeSSSettingsTitleDes",
                "FailedToSubmit",
                "WaitingForSubmission",
                "AllApprovalStageComplete",
                "LockSiteCollection",
                "UpdateSiteCollectionLocked",
                "ChangeSiteCollectionQuota",
                "UpdateSiteCollectionChangedQuota",
                "ApplyAdditionalAdministrators",
                "CallCustomActionBeforeApproval",
                "MaintanceWindow",
                "CreateUser",
                "AssignManager",
                "AssignLicense",
                "AddUserToGroups",
                "RemoveUserFromGroups",
                "AddUserReport",
                "ApplyUserPolicy",
                "ApplyOneDriveSiteProperties",
                "ChangeUser",
                "ChangeUserContact",
                "ChangeUserLicense",
                "ChangeUserManager",
                "ChangeUserGroups",
                "UpdateUserReport",
                "ApplyUserRole",
                "ChangeUserMail",
                "RemoveOriginalMail",
                "DeleteUser",
                "BlockUser",
                "ResetPassword",
                "ExtendUser",
                "ChangeUserPolicy",
                "UnblockUser",
                "ChangeGroup",
                "UpdateGroupReport",
                "AddOwnersToGroup",
                "AddMembersToGroup",
                "RemoveOwnersFromGroup",
                "RemoveMembersFromGroup",
                "UpdateMetadatasToSite",
                "ChangeDynamicGroupRules",
                "UpdateGroupOwners",
                "UpdateGroupMembers",
                "CreateGroup",
                "UpdateGroup",
                "SetGroupOwners",
                "SetGroupMembers",
                "SetGroupQuota",
                "AddGroupReport",
                "ApplyGroupPolicy",
                "EnableTeamCollaboration",
                "ApplySiteDesign",
                "ApplyGroupCustomMetadata",
                "DeleteGroup",
                "ChangeGroupPolicy",
                "ExtendGroup",
                "UpdateGroupStatus",
                "InstallApp",
                "GetGroup",
                "RegisterSiteDocave",
                "GetGroupSite",
                "ChangeGroupQuota",
                "SetGeoLocation",
                "ArchiveTeam",
                "UnArchiveTeam",
                "ApplyGroupExtension",
                "ChangeTeamPrivateChannelSiteQuota",
                "CreatingSite",
                "ApplyingCustomTemplate",
                "ApplyingSecuritySettings",
                "ApplyingCustomMetadata",
                "ApplyingSitePolicy",
                "ApplyingAdditionalAdministrators",
                "AddingToSiteDirectory",
                "RegistingSiteToDao",
                "ApplyingServiceDpmPlan",
                "ServiceDpmPlanExecuted",
                "ApplyingPolicyDpmPlan",
                "PolicyDpmPlanExecuted",
                "ApplyingPolicyEnforcerProfile",
                "ApplyingArchiverProfile",
                "ApplyingRecertification",
                "InstallingApp",
                "AddingAppParts",
                "CreatingOrValidYammerGroup",
                "AddingYammerGroupFeed",
                "RemovingServiceAccount",
                "CreateGuestUser",
                "UpdateGuestUser",
                "AddGuestUserToGroup",
                "AddGuestUserReport",
                "ApplyGuestUserRenewal",
                "ApplyGuestUserElection",
                "UnblockGuestUser",
                "BlockGuestUser",
                "DeleteGuestUser",
                "CreatingWeb",
                "ApplyingSecuritySettingsToWeb",
                "ApplyingSharePointConfigurationsToWeb",
                "ApplyingCustomMetadataToWeb",
                "ApplyAndRunDPMPlanInCreatingWeb",
                "AddingWebToDatabase",
                "UpdatingWebInDatabase",
                "DeployingAppPartToWeb",
                "AddingAppPartToWeb",
                "CreatingOrValidingYammerGroupInCreatingWeb",
                "AddingYammerGroupFeedInWeb",
                "DeletingSite",
                "ArchivingSite",
                "ChangingSitePolicy",
                "UnlockingSite",
                "LockingSite",
                "ExtendingSite",
                "ChangingSiteQuota",
                "ChangingSiteTitleAndDescription",
                "ChangingSiteMetadata",
                "UpdatingSiteDirectory",
                "ConvertingToHubSite",
                "ConnectingToHubSite",
                "UnregisteringHubSite",
                "ChangingSensitivity",
                "ChangingWebTitleAndDescription",
                "ChangingListSetting",
                "WaitingForGrantPermission",
                "GrantingPermission",
                "CheckingList",
                "UploadingTemplate",
                "CreatingList",
                "CreatingCMPlan",
                "RunningCMPlan",
                "SettingGroupSharing",
                "SettingOutlookExperience",
                "WelcomeEmail",
                "FailedWithSubRequestException",
                "ValidatePrivateChannel",
                "CreatePrivateChannel",
                "AddUserToChannel",
                "AddChannelToDB",
                "ApplyPolicyToChannel",
                "ChangeChannelName",
                "ChangeChannelDescription",
                "ChangeChannelMembers",
                "ChangeChannelOwners",
                "ChangeChannelToDB",
                "RegistingSiteToAos",
                "RegistingGroupToAos",
                "StartingProcess",
                "DeletePowerApps",
                "UpdatePowerAppsStatus",
                "DeletePowerBI",
                "UpdatePowerBIStatus",
                "DeletePowerAutomate",
                "UpdatePowerAutomateStatus",
                "FourthTaskCreated",
                "FifthTaskCreated",
                "WaitingForReSubmission",
                "FourthStageApproval",
                "FifthStageApproval",
                "SubRequestWaitingForApproval"
            ]
        },
        "RequestResourceType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Unknown",
                "Web",
                "Teams",
                "Api",
                "PowerAutomateConnector"
            ]
        },
        "RequestStatus": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Saved",
                "Submitted"
            ]
        },
        "RequestTeamsSettings": {
            "description": "Teams settings model in request",
            "type": "object",
            "properties": {
                "allowMembersCreateUpdateChannels": {
                    "description": "Whether to allow team members to create and update channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreatePrivateChannels": {
                    "description": "Whether to allow members to create private channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMemberDeleteRestoreChannels": {
                    "description": "Whether to allow members to delete and restore channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersAddRemoveApps": {
                    "description": "Whether to allow members to add and remove apps.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreateUpdateRemoveTabs": {
                    "description": "Whether to allow members to create, update, and remove tabs.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreateUpdateRemoveConnections": {
                    "description": "Whether to allow members to create, update, and remove connectors.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersDeleteMessages": {
                    "description": "Whether to allow members to delete their messages.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersEditMessages": {
                    "description": "Whether to allow members to edit their messages.",
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsCreateUpdateChannels": {
                    "description": "Whether to allow guests to create and update channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsDeleteChannels": {
                    "description": "Whether to allow guests to delete channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMentionsTeam": {
                    "description": "Whether to show members the option to @team or @[team name] (this will send a notification to everyone on the team).",
                    "default": false,
                    "type": "boolean"
                },
                "allowMentionsChannel": {
                    "description": "Whether to show members the option to @channel or @[channel name] (this will send a notification to everyone who has favorited the channel being mentioned).",
                    "default": false,
                    "type": "boolean"
                },
                "enableGiphy": {
                    "description": "Whether to enable giphy for the team.",
                    "default": false,
                    "type": "boolean"
                },
                "enableStickersAndMemes": {
                    "description": "Whether to enable stickers and memes.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCustomMemes": {
                    "description": "Whether to allow memes to be uploaded.",
                    "default": false,
                    "type": "boolean"
                },
                "giphyRatingType": {
                    "format": "int32",
                    "description": "Set the gihpy type settings.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GiphyRatingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Moderate",
                        "Strict"
                    ]
                }
            }
        },
        "RequestUserWithPermissions": {
            "description": "User permissions model in request",
            "type": "object",
            "properties": {
                "user": {
                    "description": "User information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "permissionLevels": {
                    "description": "User permission levels' information",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                }
            }
        },
        "RestoreGroupRequest": {
            "description": "Restore group request model",
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "description": "Object ID",
                    "type": "string"
                },
                "groupName": {
                    "description": "Group name",
                    "type": "string",
                    "readOnly": true
                },
                "groupEmail": {
                    "description": "Group e-mail address",
                    "type": "string",
                    "readOnly": true
                },
                "groupObjectType": {
                    "format": "int32",
                    "description": "Group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "lifecycleType": {
                    "format": "int32",
                    "description": "Lifecycle type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "RootSiteWithManagedPaths": {
            "type": "object",
            "properties": {
                "rootSite": {
                    "type": "string"
                },
                "managedPaths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SCLifecycleActionModel": {
            "type": "object",
            "properties": {
                "lifecycleActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SCLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Lock",
                        "Unlock",
                        "Delete"
                    ]
                },
                "lockType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SCLifecycleLockType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoAccess",
                        "ReadOnly"
                    ]
                },
                "isPermanentlyDelete": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SCLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Lock",
                "Unlock",
                "Delete"
            ]
        },
        "SCLifecycleGallery": {
            "type": "object",
            "properties": {
                "scInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleSCModel"
                        }
                    ]
                },
                "scLifecycleActionDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SCLifecycleActionModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "SCLifecycleLockType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "NoAccess",
                "ReadOnly"
            ]
        },
        "ScopeType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ManuallyInput",
                "SelectFromTree"
            ]
        },
        "SenderOptions": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Inside",
                "InsideAndOutside"
            ]
        },
        "SensitivityLabelModel": {
            "type": "object",
            "properties": {
                "tenant": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentName": {
                    "type": "string"
                },
                "parentId": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "ServiceForRequest": {
            "type": "object",
            "properties": {
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                },
                "requestTemplate": {
                    "description": "Base model of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequest"
                        }
                    ]
                }
            }
        },
        "ServiceGroupWithPermissions": {
            "type": "object",
            "properties": {
                "usersAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "groupOwnerAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "allowChangePermissionLevel": {
                    "default": false,
                    "type": "boolean"
                },
                "removable": {
                    "default": false,
                    "type": "boolean"
                },
                "name": {
                    "description": "Group name",
                    "type": "string"
                },
                "description": {
                    "description": "Group description",
                    "type": "string"
                },
                "users": {
                    "description": "The list of the group users",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupUser"
                    }
                },
                "permissionLevels": {
                    "description": "The list of the group permission levels",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                },
                "groupOwner": {
                    "description": "Group owner information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "groupOwnerType": {
                    "format": "int32",
                    "description": "Group owner type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupOwnerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SpoGroup",
                        "User"
                    ]
                },
                "buildInGroupType": {
                    "format": "int32",
                    "description": "Built-in group type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharePointBuildInGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Owners",
                        "Members",
                        "Visitors"
                    ]
                }
            }
        },
        "ServiceList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "typeDescription": {
                    "type": "string"
                },
                "isQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "type": "string"
                },
                "rankedNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "ServiceListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "ServicePlanModel": {
            "type": "object",
            "properties": {
                "planId": {
                    "format": "uuid",
                    "type": "string"
                },
                "planDiscription": {
                    "type": "string"
                }
            }
        },
        "ServiceScopeSettings": {
            "type": "object",
            "properties": {
                "selectedNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SPNode"
                    }
                },
                "autoPopulateUrlWithSPContext": {
                    "default": false,
                    "type": "boolean"
                },
                "autoPopulateUrlWithSPContextAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                }
            }
        },
        "ServiceTeamsSettings": {
            "type": "object",
            "properties": {
                "memberPermissionsAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "guestPermissionsAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "mentionsAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "funStuffAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "allowMembersCreateUpdateChannels": {
                    "description": "Whether to allow team members to create and update channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreatePrivateChannels": {
                    "description": "Whether to allow members to create private channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMemberDeleteRestoreChannels": {
                    "description": "Whether to allow members to delete and restore channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersAddRemoveApps": {
                    "description": "Whether to allow members to add and remove apps.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreateUpdateRemoveTabs": {
                    "description": "Whether to allow members to create, update, and remove tabs.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersCreateUpdateRemoveConnections": {
                    "description": "Whether to allow members to create, update, and remove connectors.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersDeleteMessages": {
                    "description": "Whether to allow members to delete their messages.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMembersEditMessages": {
                    "description": "Whether to allow members to edit their messages.",
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsCreateUpdateChannels": {
                    "description": "Whether to allow guests to create and update channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsDeleteChannels": {
                    "description": "Whether to allow guests to delete channels.",
                    "default": false,
                    "type": "boolean"
                },
                "allowMentionsTeam": {
                    "description": "Whether to show members the option to @team or @[team name] (this will send a notification to everyone on the team).",
                    "default": false,
                    "type": "boolean"
                },
                "allowMentionsChannel": {
                    "description": "Whether to show members the option to @channel or @[channel name] (this will send a notification to everyone who has favorited the channel being mentioned).",
                    "default": false,
                    "type": "boolean"
                },
                "enableGiphy": {
                    "description": "Whether to enable giphy for the team.",
                    "default": false,
                    "type": "boolean"
                },
                "enableStickersAndMemes": {
                    "description": "Whether to enable stickers and memes.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCustomMemes": {
                    "description": "Whether to allow memes to be uploaded.",
                    "default": false,
                    "type": "boolean"
                },
                "giphyRatingType": {
                    "format": "int32",
                    "description": "Set the gihpy type settings.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GiphyRatingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Moderate",
                        "Strict"
                    ]
                }
            }
        },
        "ServiceType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                40,
                41,
                42,
                43,
                44,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                120,
                121,
                122,
                123,
                124,
                125,
                128,
                130,
                131,
                132,
                133,
                134,
                135,
                136,
                137,
                140,
                141,
                142,
                200,
                201,
                501,
                502,
                503,
                504,
                505,
                506,
                507,
                508,
                509,
                510,
                511,
                512,
                513,
                514,
                515,
                516,
                517,
                518,
                520,
                521,
                522,
                523,
                524,
                525,
                530,
                531,
                532,
                533,
                534,
                535,
                536,
                537,
                540,
                541,
                542,
                543,
                544,
                545,
                546,
                547,
                548,
                549,
                550,
                551,
                552,
                553,
                554,
                555,
                556,
                557,
                558,
                559,
                560,
                561,
                562,
                563,
                564,
                565,
                566,
                567,
                568,
                569,
                570,
                571,
                572,
                573,
                574,
                575,
                576,
                577,
                578,
                579,
                580,
                581,
                582,
                583,
                584,
                585,
                586,
                587,
                588,
                589,
                590,
                591,
                592,
                593,
                594,
                595,
                596,
                597,
                598,
                599,
                600,
                601,
                602,
                610,
                611,
                612,
                613,
                614,
                615,
                616,
                617,
                620,
                621,
                622,
                623,
                624,
                625,
                626,
                627,
                628,
                629,
                630,
                631,
                632,
                633,
                634,
                635,
                636,
                637,
                638,
                638,
                639,
                640,
                641,
                642,
                643,
                644,
                645,
                646,
                647,
                648,
                649,
                650,
                651,
                652,
                653,
                654,
                655,
                656,
                657,
                658,
                659,
                660,
                661,
                662,
                663,
                664,
                665,
                666,
                667,
                668,
                669,
                670,
                671,
                672,
                673,
                701,
                702,
                703,
                704,
                705,
                706,
                707,
                708,
                709,
                710,
                711,
                712,
                721,
                722,
                723,
                724,
                725,
                726,
                727,
                728,
                729,
                730,
                731,
                732,
                751,
                752,
                754,
                755,
                760,
                761,
                762,
                763,
                764,
                765,
                766
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "ProvisionSiteCollection",
                "CreateSubSite",
                "SiteCollectionLifecycleMgmt",
                "ArchiveSiteCollection",
                "DeleteSiteCollection",
                "ExtendSiteCollection",
                "ChangeSiteCollectionPolicy",
                "ChangeSiteCollectionMetadata",
                "ChangeSiteCollectionContact",
                "TransferUserPermission",
                "ManualArchiveSiteCollectionContent",
                "CloneUserPermissions",
                "SiteLifecycleManagement",
                "GrantUserPermissions",
                "RemoveUserPermissions",
                "ChangeSubSitePolicy",
                "ChangeSubSiteMetadata",
                "ChangeSubSiteContact",
                "CleanDeadAccounts",
                "BackupAndRestore",
                "ArchiveUserContent",
                "MoveListItem",
                "MoveList",
                "MoveSite",
                "SiteTemplateDeployment",
                "SiteThemeDeployment",
                "SandboxSolutionDeployment",
                "FarmSolutionDeployment",
                "SiteOwnerReporting",
                "SiteCollectionOwnerReporting",
                "SiteRequestReporting",
                "ContentManager",
                "ProvisionSiteCollectionExternal",
                "MySite",
                "CreateList",
                "ChangeList",
                "AutoSiteCollectionLifecycleMgmt",
                "QuestionaireMgmt",
                "PermRecertify",
                "MetadataRecertify",
                "OwnershipRecertification",
                "Election",
                "Unlock",
                "AutoLocking",
                "SCInactivityThreshold",
                "SCLeasePeriod",
                "Blank",
                "LockSC",
                "ChangeSCQuota",
                "ApplySiteInformation",
                "ImportSite",
                "ApplySitePolicy",
                "ImportWeb",
                "RenewSite",
                "RenewGroup",
                "ExportReport",
                "RequestValidation",
                "SyncSiteMetadata",
                "PermissionManagement",
                "BulkUpdate",
                "CreateGuestUser",
                "BulkUpdateGroupTeam",
                "RenewGuestUser",
                "UpdateSiteLockStatus",
                "ApplySitePolicyPartSetting",
                "ApplyGroupPolicyPartSetting",
                "ApplyGroupExternalSharingProfilePartSetting",
                "ApplyGroupQuotaProfilePartSetting",
                "DynamicService",
                "RenewPrivateChannel",
                "TeamsLifecycle",
                "ApplySiteExternalSharingModernProfile",
                "YammerLifecycle",
                "SiteCollectionLifecycle",
                "GroupAutoLifecycle",
                "RenewSharedChannel",
                "CreateUser",
                "ChangeUser",
                "UserLifecycle",
                "OffBoardingUser",
                "ExtendUser",
                "ChangeUserPolicy",
                "UnblockUser",
                "ChangeUserLoginName",
                "CreateGroup",
                "ChangeGroup",
                "GroupLifecycle",
                "DeleteGroup",
                "ExtendGroup",
                "ChangeGroupPolicy",
                "ChangeGroupQuota",
                "ContinueAccess",
                "ApplyGroupInformation",
                "ApplyGroupPolicy",
                "ImportAzureGroup",
                "ImportAzureUser",
                "PostCreateGroup",
                "ImportAzureGuestUser",
                "ImportYammer",
                "ArchiveTeam",
                "UnArchiveTeam",
                "CreateTeamArchivingProfile",
                "GroupMembershipRecertification",
                "GroupPermissionRecertification",
                "SyncSite",
                "UpgradeSiteLifecycleSetting",
                "AutoElection",
                "ManualArchiveTimer",
                "SyncWeb",
                "QuotaThresholdTimerJob",
                "SyncUserForDynamicRule",
                "SyncGroup",
                "AutoImportSiteCustomService",
                "AutoImportSite",
                "AutoImportGroup",
                "TemporaryPermissionStart",
                "TemporaryPermissionEnd",
                "TemporaryPermissionExpiringNotificationJob",
                "RenewTeams",
                "AutoExportReport",
                "SyncUserInformation",
                "SyncUpsMetadata",
                "GroupAutoElection",
                "SyncGuestUser",
                "RenewYammer",
                "SyncExchangeResource",
                "SyncSharedMailbox",
                "SyncResourceMailbox",
                "SpecifyContacts",
                "UpdateGroupStieLockStatus",
                "BulkDeleteWorkspace",
                "BulkManageWorkspaceLockState",
                "BulkArchiveSite",
                "BulkArchiveTeams",
                "BulkRestoreTeams",
                "GuestUserLifecycle",
                "RemoveSite",
                "RemoveGroup",
                "RemoveWeb",
                "AutoImportGroupEscalation",
                "AutoImportSiteEscalation",
                "BulkAutoCompleteRenewal",
                "BulkRestartRenewal",
                "AutoImportGuestUser",
                "MPWelcomeEmailTemplate",
                "AutoImportYammerCommunity",
                "BulkApplyGuestRenewal",
                "BulkSpecifyGuestContact",
                "BulkRestartGuestRenewal",
                "BulkSpecifyGuestOneTimeRenewal",
                "RemoveGuestUser",
                "RemoveWorkspace",
                "CreatePrivateChannel",
                "BulkApplyGroupExtensions",
                "BulkReassignRenewalTask",
                "BulkReassignAutoImportTask",
                "GuestAutoElection",
                "BulkApplyGuestElection",
                "ChangePrivateChannel",
                "RequestReportAction",
                "ApplyTeamProfiles",
                "ApplyGroupProfiles",
                "ApplyYammerProfiles",
                "ApplySiteProfiles",
                "UpdateModernRenewalProfile",
                "BulkTriggerWorkspaceElection",
                "DeleteModernRenewalProfile",
                "UpdateSiteQuotaProfile",
                "DeleteSiteModernRenewalProfile",
                "DeleteGroupModernRenewalProfile",
                "DeleteGenericRenewalProfile",
                "DeleteSharedMailboxRenewalProfile",
                "AutoImportSecurityGroup",
                "AutoImportSharedMaibox",
                "RenewSecurityGroup",
                "RenewSharedMailbox",
                "ApplyGenericProfile",
                "RestartGenericRenewal",
                "ApplySharedMailboxProfile",
                "RestartSharedMailboxRenewal",
                "RenewMailEnabledGroup",
                "RenewDistributionList",
                "SecurityGroupLifecycle",
                "DistributionListLifecycle",
                "MailEnabledGroupLifecycle",
                "SharedMailboxLifecycle",
                "SecurityGroupElection",
                "MailEnabledSecurityGroupElection",
                "DistributionListElection",
                "SharedMailboxElection",
                "AutoImportMailEnabledGroup",
                "AutoImportDistributionList",
                "SpecifyExchangeResourceContacts",
                "ExchangeResourceReassignRenewalTask",
                "ApplyGenericInformation",
                "ApplySharedMailboxInformation",
                "AutoImportPowerApps",
                "ApplyPowerAppsInformation",
                "AutoImportPowerAppsEscalation",
                "RenewPowerApps",
                "PowerAppsLifecycle",
                "DeletePowerApps",
                "RenewalPowerAppsEscalation",
                "ApplyPowerAppsProfile",
                "BulkRestartPowerAppsRenewal",
                "BulkSpecifyPowerAppsContact",
                "BulkReassignPowerAppsRenewal",
                "SyncPowerApp",
                "RemovePowerApp",
                "BulkUpdatePowerAppsMetadata",
                "BulkUpdateEnvironmentsMetadata",
                "RenewalEnvironments",
                "ApplyEnvironmentsProfile",
                "BulkSpecifyEnvironmentsContact",
                "BulkReassignEnvironmentsRenewal",
                "EnvironmentLifecycle",
                "RemoveEnvironment",
                "DeleteEnvironment",
                "SyncEnvironment",
                "DeleteEnvironmentRenewalProfile",
                "DeletePowerBIRenewalProfile",
                "AutoImportPowerAutomate",
                "ApplyPowerAutomateInformation",
                "AutoImportPowerAutomateEscalation",
                "PowerAutomateLifecycle",
                "DeletePowerAutomate",
                "DeletePowerAutomate",
                "BulkUpdatePowerAutomateMetadata",
                "AutoImportPowerBI",
                "ApplyPowerBIInformation",
                "AutoImportPowerBIEscalation",
                "RenewPowerBI",
                "PowerBILifecycle",
                "DeletePowerBI",
                "RenewalPowerBIEscalation",
                "BulkUpdatePowerBIMetadata",
                "ApplyPowerBIProfile",
                "BulkSpecifyPowerBIContact",
                "BulkReassignPowerBIRenewal",
                "ApplyPowerAutomateProfile",
                "BulkSpecifyPowerAutomateContact",
                "BulkReassignPowerAutomateRenewal",
                "SyncPowerBI",
                "SyncPowerAutomate",
                "RemovePowerBI",
                "RemovePowerAutomate",
                "AutoImportPowerAutomateDuration",
                "AutoImportPowerAutomateDurationReminder",
                "PowerAppElection",
                "AutoImportPowerBISubJob",
                "AutoImportPowerBIDuration",
                "AutoImportPowerBIDurationReminder",
                "AutoImportPowerAppsDuration",
                "AutoImportPowerAppsDurationReminder",
                "AutoImportGroupDuration",
                "AutoImportGroupDurationReminder",
                "AutoImportTeamEscalation",
                "PowerBIElection",
                "PowerAutomateElection",
                "EnvironmentElection",
                "DeletePowerAutomateRenewalProfile",
                "RenewPowerAutomate",
                "ManualImportSite",
                "ManualImportGroup",
                "ManualImportTeam",
                "ManualImportYammer",
                "ManualImportAdGroup",
                "ManualImportSharedMailbox",
                "ManualImportPowerApps",
                "ManualImportEnvironment",
                "ManualImportGuestUser",
                "ManualImportPowerBI",
                "ManualImportPowerAutomate",
                "ManualImportMicrosoft365User",
                "ManualExportSite",
                "ManualExportGroup",
                "ManualExportTeam",
                "ManualExportYammer",
                "ManualExportAdGroup",
                "ManualExportSharedMailbox",
                "ManualExportPowerApps",
                "ManualExportEnvironment",
                "ManualExportGuestUser",
                "ManualExportPowerBI",
                "ManualExportPowerAutomate",
                "ManualExportMicrosoft365User",
                "RemoveExchangeResource",
                "RemoveSharedMailbox",
                "BulkUpdateExchangeResourceMetadata",
                "BulkUpdateResourceMailboxMetadata",
                "ModernAutoImportGroup",
                "ModernAutoImportTeam",
                "ModernAutoImportSite",
                "ModernAutoImportSiteDuration",
                "ModernAutoImportSiteEscalation",
                "SpecifyResourceMailboxContacts",
                "RemoveInternalUser"
            ]
        },
        "ServiceUserWithPermissions": {
            "type": "object",
            "properties": {
                "userAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "user": {
                    "description": "User information",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "permissionLevels": {
                    "description": "User permission levels' information",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionLevel"
                    }
                }
            }
        },
        "SharedChannelChangedMembership": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserMembershipInfo"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharedChannelDescription": {
            "type": "object",
            "properties": {
                "newSharedChannelDescription": {
                    "type": "string"
                },
                "originalSharedChannelDescription": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharedChannelName": {
            "type": "object",
            "properties": {
                "newSharedChannelDisplayName": {
                    "type": "string"
                },
                "originalSharedChannelDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharedMailboxLifecycleGalleryRequestModel": {
            "type": "object",
            "properties": {
                "sharedMailboxInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSharedMailboxModel"
                        }
                    ]
                },
                "lifecycleActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleActions"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "SharePointBuildInGroupType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Owners",
                "Members",
                "Visitors"
            ]
        },
        "SharePointListMetadataSettings": {
            "type": "object",
            "properties": {
                "listUrl": {
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "propertyType": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "propertyName": {
                    "type": "string"
                },
                "isAdditionalColumnEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "matchedMetadataId": {
                    "type": "string"
                },
                "matchedMetadataName": {
                    "type": "string"
                },
                "additionalColumn": {
                    "type": "string"
                },
                "additionalColumnType": {
                    "type": "string"
                },
                "additionalColumnName": {
                    "type": "string"
                },
                "value": {
                    "description": "Value of Lookup User Profile or Azure Ad metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LookupListValue"
                        }
                    ]
                },
                "allowReferenceAsRoleInApprovalProcess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "SharingAdvanceSettingModel": {
            "type": "object",
            "properties": {
                "sharingDomainRestrictionMode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingDomainRestrictionMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "AllowDomainList",
                        "BlockDomainList"
                    ]
                },
                "limitDomainList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SharingAdvanceSettingModelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingAdvanceSettingModel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingAdvanceSettingModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharingCapabilities": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Disabled",
                "ExternalUserSharingOnly",
                "ExternalUserAndGuestSharing",
                "ExistingExternalUserSharingOnly"
            ]
        },
        "SharingCapabilitiesChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingCapabilities"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "ExternalUserSharingOnly",
                        "ExternalUserAndGuestSharing",
                        "ExistingExternalUserSharingOnly"
                    ]
                },
                "originalValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingCapabilities"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "ExternalUserSharingOnly",
                        "ExternalUserAndGuestSharing",
                        "ExistingExternalUserSharingOnly"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharingDomainRestrictionMode": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "AllowDomainList",
                "BlockDomainList"
            ]
        },
        "SharingEnabledUser": {
            "type": "object",
            "properties": {
                "isSharePointGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "isGuestUser": {
                    "default": false,
                    "type": "boolean"
                },
                "isGuestUserExistsInOrganization": {
                    "default": false,
                    "type": "boolean"
                },
                "apiUserType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "User",
                        "DistributionList",
                        "Office365Group",
                        "SharePointGroup",
                        "Guest",
                        "SecurityGroupOnly",
                        "MailEnabledSecurityGroup",
                        "UserAndMailEnableSecurityGroup",
                        "Group",
                        "UserAndGroup",
                        "AzureADGroup",
                        "Team",
                        "All",
                        "SharedMailbox",
                        "Yammer",
                        "OnlyOffice365Group",
                        "RoomList",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "Office365GroupSecurityEnable",
                        "Office365GroupSecurityDisable",
                        "MailContact"
                    ]
                },
                "id": {
                    "description": "Object ID",
                    "type": "string"
                },
                "loginName": {
                    "description": "Login name",
                    "type": "string"
                },
                "isExternalUser": {
                    "format": "int32",
                    "description": "Whether the user is an external user.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "azureUserType": {
                    "description": "User type in Azure AD",
                    "type": "string"
                },
                "displayName": {
                    "description": "User display name",
                    "type": "string"
                },
                "isGroup": {
                    "description": "Whether an object is a domain group.",
                    "default": false,
                    "type": "boolean"
                },
                "isLocalUser": {
                    "description": "Whether the user is a local system user.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "email": {
                    "description": "User e-mail address",
                    "type": "string"
                },
                "jobTitle": {
                    "description": "User job title",
                    "type": "string",
                    "readOnly": true
                },
                "physicalDeliveryOfficeName": {
                    "description": "Physical delivery office name of the user",
                    "type": "string",
                    "readOnly": true
                },
                "isValid": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "isAccountEnabled": {
                    "description": "Whether the user is valid.",
                    "default": false,
                    "type": "boolean",
                    "readOnly": true
                },
                "tenantId": {
                    "description": "Office 365 tenant ID of the user",
                    "type": "string",
                    "readOnly": true
                },
                "additionalData": {
                    "description": "User additional data",
                    "type": "object",
                    "additionalProperties": {},
                    "readOnly": true
                }
            }
        },
        "SharingExpireSettingModel": {
            "type": "object",
            "properties": {
                "expireType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonSharingExpirationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "NeverExpire",
                        "AllowExpire"
                    ]
                },
                "expirationInDays": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "SharingExpireSettingModelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingExpireSettingModel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingExpireSettingModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SharingLinkType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "SameAsOrganization",
                "SpecificPeople",
                "OnlyOrganizationpeople",
                "AnyOne",
                "PeopleWithExistingAccess"
            ]
        },
        "SharingLinkTypeChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingLinkType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "SpecificPeople",
                        "OnlyOrganizationpeople",
                        "AnyOne",
                        "PeopleWithExistingAccess"
                    ]
                },
                "originalValue": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingLinkType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "SpecificPeople",
                        "OnlyOrganizationpeople",
                        "AnyOne",
                        "PeopleWithExistingAccess"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "ShowLinksInRequestDetailsPage": {
            "type": "object",
            "properties": {
                "sharePointSiteUrl": {
                    "type": "string",
                    "readOnly": true
                },
                "groupPlannerLink": {
                    "type": "string",
                    "readOnly": true
                },
                "groupFilesLink": {
                    "type": "string",
                    "readOnly": true
                },
                "groupNotebookLink": {
                    "type": "string",
                    "readOnly": true
                },
                "teamLink": {
                    "type": "string",
                    "readOnly": true
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SingleLineOrMultipleLineMetadataSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "SiteAdmins": {
            "type": "object",
            "properties": {
                "primaryAdmin": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "additionalAdmins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteClassification": {
            "type": "object",
            "properties": {
                "classificationName": {
                    "type": "string"
                }
            }
        },
        "SiteClassificationAndSensitivityLabel": {
            "type": "object",
            "properties": {
                "sensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteSensitivityLabel"
                        }
                    ]
                },
                "classification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteClassification"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteCloudGovernancePanel": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteConstructTitleType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Text",
                "Metadata"
            ]
        },
        "SiteConstructUrlType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ManualInputUrl",
                "AutoGenerateUrl"
            ]
        },
        "SiteDesign": {
            "type": "object",
            "properties": {
                "appliedSiteDesignId": {
                    "type": "string"
                },
                "siteDesignName": {
                    "type": "string"
                },
                "isOutOfBoxSiteDesign": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteDesignModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "isDefault": {
                    "default": false,
                    "type": "boolean"
                },
                "isOutOfBoxTemplate": {
                    "default": false,
                    "type": "boolean"
                },
                "previewImageAltText": {
                    "type": "string"
                },
                "previewImageUrl": {
                    "type": "string"
                },
                "siteScriptIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "supportedWebTemplates": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "default": 0,
                        "type": "integer"
                    }
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "SiteElectionProfile": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteLanguage": {
            "type": "object",
            "properties": {
                "language": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteLeasePeriodRequestSettings": {
            "description": "Site Collection lease period request settings model",
            "type": "object",
            "properties": {
                "leaseInterval": {
                    "format": "int32",
                    "description": "Site Collection lease period",
                    "default": 0,
                    "type": "integer"
                },
                "leaseDurationType": {
                    "format": "int32",
                    "description": "Duration type of the site collection lease period",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "leaseWarningInterval": {
                    "format": "int32",
                    "description": "Site collection lease expiration warning interval",
                    "default": 0,
                    "type": "integer"
                },
                "leaseWarningDurationType": {
                    "format": "int32",
                    "description": "Duration type of the site collection lease expiration warning interval",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                }
            }
        },
        "SiteLeasePeriodServiceSettings": {
            "type": "object",
            "properties": {
                "leasePeriodAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "leaseWarningAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "leaseEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "leaseWarningEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "leaseInterval": {
                    "format": "int32",
                    "description": "Site Collection lease period",
                    "default": 0,
                    "type": "integer"
                },
                "leaseDurationType": {
                    "format": "int32",
                    "description": "Duration type of the site collection lease period",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "leaseWarningInterval": {
                    "format": "int32",
                    "description": "Site collection lease expiration warning interval",
                    "default": 0,
                    "type": "integer"
                },
                "leaseWarningDurationType": {
                    "format": "int32",
                    "description": "Duration type of the site collection lease expiration warning interval",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                }
            }
        },
        "SiteLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                7,
                8
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Extend",
                "Delete",
                "Archive",
                "ChangePolicy",
                "Unlock",
                "Lock",
                "ChangeQuota"
            ]
        },
        "SiteLifecycleRequest": {
            "description": "Site collection lifecycle request model",
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SiteLifecycleService": {
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "displayMetadataInAutoLifecycleTask": {
                    "default": false,
                    "type": "boolean"
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "description": "Site collection lifecycle request model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleRequest"
                        }
                    ]
                },
                "changePolicySetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangePolicyActionSetting"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "SiteLifecycleValidateResult": {
            "type": "object",
            "properties": {
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "approvalProcessHasManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "changeQuotaSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSiteQuotaSettings"
                        }
                    ]
                },
                "extendSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExtendSiteSetting"
                        }
                    ]
                },
                "unlockSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/UnlockSiteSetting"
                        }
                    ]
                },
                "changePolicySetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ChangeSitePolicySetting"
                        }
                    ]
                },
                "lockSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LockSiteSetting"
                        }
                    ]
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "SiteLockType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NoAccess",
                "ReadOnly",
                "NoAccessAndReadOnly",
                "Unlock"
            ]
        },
        "SitePolicyRef": {
            "type": "object",
            "properties": {
                "siteSharingOptions": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalSharingOptions"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "VerifiedGuestUser",
                        "Anyone",
                        "ExistingGuestUser",
                        "CrossTenantUser"
                    ]
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "detail": {
                    "type": "string"
                }
            }
        },
        "SiteSensitivityLabel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "SiteStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Active",
                "Deleted",
                "Archived",
                "Locked",
                "TemporaryLocked"
            ]
        },
        "SiteTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                }
            }
        },
        "SiteTemplateSetting": {
            "type": "object",
            "properties": {
                "customSiteTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomSiteTemplate"
                        }
                    ]
                },
                "siteTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/DRSiteTemplate"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteTemplateTypeInSiteDesign": {
            "format": "int32",
            "enum": [
                1,
                64,
                68
            ],
            "type": "integer",
            "x-enum-varnames": [
                "TeamSiteTemplateWithNoGroup",
                "TeamSiteTemplate",
                "CommunicationSiteTemplate"
            ]
        },
        "SiteTemplateTypeSetting": {
            "type": "object",
            "properties": {
                "templateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteTemplateTypeInSiteDesign"
                        }
                    ],
                    "x-enum-varnames": [
                        "TeamSiteTemplateWithNoGroup",
                        "TeamSiteTemplate",
                        "CommunicationSiteTemplate"
                    ]
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "SiteTimeZone": {
            "type": "object",
            "properties": {
                "timeZone": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteTitleConstructureRule": {
            "type": "object",
            "properties": {
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteConstructTitleType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Text",
                        "Metadata"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "SiteTitleDescription": {
            "type": "object",
            "properties": {
                "siteTitle": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SiteTitleSetting": {
            "type": "object",
            "properties": {
                "titleAssignBy": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "enableTitleConstructure": {
                    "default": false,
                    "type": "boolean"
                },
                "titlePrefixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTitleConstructureRule"
                    }
                },
                "titleSuffixes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteTitleConstructureRule"
                    }
                }
            }
        },
        "SiteUrl": {
            "description": "Site collection url model",
            "type": "object",
            "properties": {
                "root": {
                    "description": "Site collection root site url",
                    "type": "string"
                },
                "managedPath": {
                    "description": "Managed path",
                    "type": "string"
                },
                "name": {
                    "description": "Site collection name",
                    "type": "string"
                }
            }
        },
        "SiteUrlSetting": {
            "type": "object",
            "properties": {
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteConstructUrlType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ManualInputUrl",
                        "AutoGenerateUrl"
                    ]
                },
                "manuallyInputSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManuallyInputUrlSetting"
                        }
                    ]
                },
                "autoGenerateUrlSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoGenerateUrlSetting"
                        }
                    ]
                }
            }
        },
        "SiteValidationParameter": {
            "type": "object",
            "properties": {
                "uri": {
                    "format": "uri",
                    "type": "string"
                },
                "ignoreLock": {
                    "default": false,
                    "type": "boolean"
                },
                "isEditTask": {
                    "default": false,
                    "type": "boolean"
                },
                "isFromQuestionnaire": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "SPBaseType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                -1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "GenericList",
                "DocumentLibrary",
                "Unused",
                "DiscussionBoard",
                "Survey",
                "Issue",
                "UnspecifiedBaseType"
            ]
        },
        "SPGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "owner": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPPrincipal"
                        }
                    ]
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "permissionLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "spGroupViewType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupViewOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupMembers",
                        "EveryOne"
                    ]
                },
                "spGroupEditType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupEditOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupOwner",
                        "GroupMembers"
                    ]
                },
                "isAllowJoinOrLeaveRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "autoAcceptRequestToJoinLeave": {
                    "default": false,
                    "type": "boolean"
                },
                "requestToJoinLeaveEmailSetting": {
                    "type": "string"
                },
                "isTemporaryGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "roleID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SPGroupEditOption": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "GroupOwner",
                "GroupMembers"
            ]
        },
        "SPGroupManagementModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringChangedProperty"
                        }
                    ]
                },
                "description": {
                    "type": "string"
                },
                "owner": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SPUserManagementModel"
                    }
                },
                "spGroupViewType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupViewOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupMembers",
                        "EveryOne"
                    ]
                },
                "spGroupEditType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPGroupEditOption"
                        }
                    ],
                    "x-enum-varnames": [
                        "GroupOwner",
                        "GroupMembers"
                    ]
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Added",
                        "Changed",
                        "Deleted",
                        "Copied",
                        "Remove"
                    ]
                },
                "isAllowJoinOrLeaveRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "isAutoAcceptRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "sendMembershipRequestEmailAddress": {
                    "type": "string"
                },
                "isTemporaryGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "roleID": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isEnabelSPMemberWelcomeEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "spMemberWelcomeEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "SPGroupViewOption": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "GroupMembers",
                "EveryOne"
            ]
        },
        "SPList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "isLibrary": {
                    "default": false,
                    "type": "boolean"
                },
                "isOnQuickLaunch": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableModeration": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableVersioning": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnableMinorVersion": {
                    "default": false,
                    "type": "boolean"
                },
                "majorVersionLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "majorWithMinorVersionsLimit": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "SPListTemplateType": {
            "format": "int32",
            "enum": [
                0,
                100,
                101,
                102,
                103,
                104,
                105,
                106,
                107,
                108,
                109,
                110,
                111,
                112,
                113,
                114,
                115,
                116,
                117,
                118,
                119,
                120,
                121,
                122,
                123,
                124,
                125,
                130,
                140,
                150,
                151,
                160,
                171,
                175,
                200,
                201,
                202,
                204,
                207,
                210,
                211,
                212,
                301,
                302,
                303,
                402,
                403,
                404,
                405,
                420,
                421,
                499,
                600,
                700,
                850,
                1100,
                1200,
                1220,
                1221,
                1230,
                -1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NoListTemplate",
                "GenericList",
                "DocumentLibrary",
                "Survey",
                "Links",
                "Announcements",
                "Contacts",
                "Events",
                "Tasks",
                "DiscussionBoard",
                "PictureLibrary",
                "DataSources",
                "WebTemplateCatalog",
                "UserInformation",
                "WebPartCatalog",
                "ListTemplateCatalog",
                "XMLForm",
                "MasterPageCatalog",
                "NoCodeWorkflows",
                "WorkflowProcess",
                "WebPageLibrary",
                "CustomGrid",
                "SolutionCatalog",
                "NoCodePublic",
                "ThemeCatalog",
                "DesignCatalog",
                "AppDataCatalog",
                "DataConnectionLibrary",
                "WorkflowHistory",
                "GanttTasks",
                "HelpLibrary",
                "AccessRequest",
                "TasksWithTimelineAndHierarchy",
                "MaintenanceLogs",
                "Meetings",
                "Agenda",
                "MeetingUser",
                "Decision",
                "MeetingObjective",
                "TextBox",
                "ThingsToBring",
                "HomePageLibrary",
                "Posts",
                "Comments",
                "Categories",
                "Facility",
                "Whereabouts",
                "CallTrack",
                "Circulation",
                "Timecard",
                "Holidays",
                "IMEDic",
                "ExternalList",
                "MySiteDocumentLibrary",
                "PagesLibrary",
                "IssueTracking",
                "AdminTasks",
                "HealthRules",
                "HealthReports",
                "DeveloperSiteDraftApps",
                "InvalidType"
            ]
        },
        "SPNode": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "fullUrl": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/NodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Container",
                        "Site",
                        "Web",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Item",
                        "File",
                        "None"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "isSelected": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "SPPrincipal": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "loginName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "principalType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPPrincipalType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "User",
                        "DistributionList",
                        "SecurityGroup",
                        "SharePointGroup",
                        "All"
                    ]
                },
                "azureUserType": {
                    "type": "string"
                }
            }
        },
        "SPPrincipalType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                4,
                8,
                15
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "User",
                "DistributionList",
                "SecurityGroup",
                "SharePointGroup",
                "All"
            ]
        },
        "SPRoleAssignment": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "loginName": {
                    "type": "string"
                },
                "azureUserType": {
                    "type": "string"
                },
                "principalType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SPPrincipalType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "User",
                        "DistributionList",
                        "SecurityGroup",
                        "SharePointGroup",
                        "All"
                    ]
                },
                "principalTypeDescription": {
                    "type": "string"
                },
                "permissionLevels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "temporaryPermissionSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TemporaryPermissionRequestSetting"
                        }
                    ]
                },
                "objectId": {
                    "type": "string"
                }
            }
        },
        "SPTenantSharingSettingModel": {
            "type": "object",
            "properties": {
                "sharingCapability": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingCapabilities"
                        }
                    ],
                    "x-enum-varnames": [
                        "Disabled",
                        "ExternalUserSharingOnly",
                        "ExternalUserAndGuestSharing",
                        "ExistingExternalUserSharingOnly"
                    ]
                },
                "externalUserExpirationInDays": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "defaultSharingLinkType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingLinkType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "SpecificPeople",
                        "OnlyOrganizationpeople",
                        "AnyOne",
                        "PeopleWithExistingAccess"
                    ]
                },
                "defaultLinkPermission": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LinkPermissionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "SameAsOrganization",
                        "View",
                        "Edit"
                    ]
                },
                "requireAnonymousLinksExpireInDays": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "sharingDomainRestrictionMode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SharingDomainRestrictionMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "AllowDomainList",
                        "BlockDomainList"
                    ]
                },
                "limitDomainList": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SPUserManagementModel": {
            "type": "object",
            "properties": {
                "identityName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "isGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "azureUserType": {
                    "type": "string"
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ManagePermissionAction"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Added",
                        "Changed",
                        "Deleted",
                        "Copied",
                        "Remove"
                    ]
                },
                "externalUserType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "StartDateType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "CurrentDate",
                "SpecifiedDate"
            ]
        },
        "StringChangedProperty": {
            "type": "object",
            "properties": {
                "changeValue": {
                    "type": "string"
                },
                "originalValue": {
                    "type": "string"
                }
            }
        },
        "StringChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "type": "string"
                },
                "originalValue": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "StringModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "StringModelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "SubscribeMembers": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TaskApprovalStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "PendingApproval",
                "PendingConfirm",
                "PendingAndCompleted"
            ]
        },
        "TaskComment": {
            "type": "object",
            "properties": {
                "assigneeDisplayName": {
                    "type": "string"
                },
                "commentTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            }
        },
        "TaskDynamicActions": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Extend",
                "Archive",
                "ChangePolicy",
                "OffBoarding",
                "Delete",
                "ContinueAccess",
                "Claim",
                "Decline",
                "SpecifyContacts",
                "SpecifySecondaryContact"
            ]
        },
        "TaskList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "requestId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestTicketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "requesterDisplayName": {
                    "type": "string"
                },
                "requesterEmail": {
                    "type": "string"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "dueDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DueDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Expired",
                        "DueToday",
                        "DueThisWeek",
                        "DueThisMonth"
                    ]
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ApprovalTask",
                        "ErrorHandlingTask",
                        "SCExpired",
                        "SCNoAccess",
                        "ToDoTask",
                        "UserExpired",
                        "GroupExpired",
                        "GroupInactivityThreshold",
                        "AutoImportGroup",
                        "AutoImportSite",
                        "RenewGroup",
                        "RenewSite",
                        "RenewGuestUser",
                        "RenewPrivateChannel",
                        "RenewGeneric",
                        "RenewSharedMailbox",
                        "AutoImportGeneric",
                        "AutoImportSharedMailbox",
                        "PassbackTask",
                        "DynamicMembershipSubTask",
                        "AutoImportPowerApps",
                        "RenewPowerApps",
                        "RenewSharedChannel",
                        "RenewEnvironments",
                        "RenewPowerBIs",
                        "AutoImportPowerBI",
                        "AutoImportPowerAutomate",
                        "RenewPowerAutomates",
                        "ModernAutoImportTeam",
                        "ModernAutoImportGroup",
                        "ModernAutoImportSite"
                    ]
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskResult"
                        }
                    ],
                    "x-enum-varnames": [
                        "Running",
                        "Approved",
                        "Rejected",
                        "Canceled",
                        "TimeOut",
                        "Completed",
                        "AutoActionApproved",
                        "Retried",
                        "Skipped",
                        "Submited",
                        "WaitingForSubmission",
                        "AllStagesTimeOut",
                        "Declined",
                        "WaitingForClaim",
                        "ElectionTaskTimeOut",
                        "Claimed",
                        "AutoComplete",
                        "WaitingForSpecify",
                        "PendingConfirm",
                        "ConfirmOverdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "ConfirmException",
                        "RenewalException",
                        "WaitingForSpecifyBothContacts",
                        "WaitingForConfirmation",
                        "InProgress",
                        "ConfirmTaskOverdue",
                        "ConfirmTaskEscalation",
                        "WaitingForAssistant",
                        "GoBackRejected",
                        "ElectionTaskContinueWithDeclined",
                        "ElectionTaskContinueWithOverdue",
                        "GoBackWithNoChangesRejected",
                        "WaitingForSpecifyBothContactsOverdue",
                        "WaitingForSpecifyBothContactsEscalated",
                        "UnknownChannelTaskStatus",
                        "WaittingForResubmission",
                        "Deleted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "taskFullPath": {
                    "type": "string"
                },
                "lastUpdated": {
                    "format": "date-time",
                    "type": "string"
                },
                "category": {
                    "format": "uuid",
                    "type": "string"
                },
                "categoryDisplayName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "profileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "allowEdit": {
                    "default": false,
                    "type": "boolean"
                },
                "progressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ErrorStart",
                        "Error",
                        "RequestSubmitted",
                        "TaskCreated",
                        "AdminContactIssueReview",
                        "Cancelled",
                        "Rejected",
                        "FirstStageApproval",
                        "SecondStageApproval",
                        "ThirdStageApproval",
                        "Completed",
                        "AssignContentDatabase",
                        "CreateSiteCollection",
                        "ApplySecuritySettings",
                        "ApplySharePointConfigurations",
                        "ApplyCustomMetadata",
                        "AddToSiteCollectionDirectory",
                        "ApplyDocAveGranularBackupPlan",
                        "ApplyDocAveAuditorPlan",
                        "ApplyDocAveDeadAccountCleaningPlan",
                        "ApplyDocAveScheduledStorageManagerProfile",
                        "ApplyDocAveArchiverProfile",
                        "ApplyDocAveVaultProfile",
                        "ApplyAndRunDPMPlan",
                        "ArchiveSiteCollection",
                        "UpdateSiteCollectionArchived",
                        "ExtendSiteCollection",
                        "UpdateCustomMetadata",
                        "UpdateSiteDirectory",
                        "DeleteSiteCollection",
                        "UpdateSiteCollectionDeleted",
                        "CreateSubSite",
                        "AddToSubSiteDirectory",
                        "RetractDocAveGranularBackupPlan",
                        "RetractDocAveAuditorPlan",
                        "RetractDocAveDeadAccountCleaningPlan",
                        "RetractDocAveScheduledStorageManagerProfile",
                        "RetrieveDocAveArchiveProfile",
                        "RetrieveDocAveVaultProfile",
                        "UpdateChangeSCPolicyMetadata",
                        "UpdateSiteCollectionPolicyChanged",
                        "CreateHiddenList",
                        "ChangeSiteCollectionMetadata",
                        "UpdateSiteDirectoryForChangeSCMetadata",
                        "ChangeSiteCollectionContact",
                        "UpdateSiteDirectoryForChangeSCContact",
                        "CloneUserPermission",
                        "SearchUserPermission",
                        "InProgress",
                        "CompletedWithException",
                        "DeleteSubSite",
                        "UpdateDeleteSubSite",
                        "ArchiveSubSite",
                        "UpdateArchiveSubSite",
                        "ChangeSubSiteMetadata",
                        "UpdateSiteDirectoryForChangeSSMetadata",
                        "FirstTaskCreated",
                        "SecondTaskCreated",
                        "ThirdTaskCreated",
                        "GrantUserPermission",
                        "RemoveUserPermission",
                        "ChangeSCSettingsTitleDes",
                        "CreateMySiteCompleted",
                        "CreateCMPlan",
                        "RunCMPlan",
                        "ApplyArchiverProfile",
                        "CreateListCompleted",
                        "ChangeListURL",
                        "ChangeListSettingsCompleted",
                        "RegistSiteCollectionToDcoAveGroup",
                        "ApplyPolicyEnforcerProfile",
                        "UpdatePolicyEnforcerProfileCompleted",
                        "PermissionRecertificationTriggered",
                        "ChangingUserPermission",
                        "RequesterReportCreated",
                        "ApplyDeployAppPart",
                        "ApplyAddAppPart",
                        "ApplyingDeploymentManagerPlan",
                        "ApplyPermissionRecertification",
                        "ApplyMetadataRecertification",
                        "ApplyOwnershipRecertification",
                        "UnlockSiteCollection",
                        "UpdateSiteCollectionUnlocked",
                        "ChangeSiteCollectionOwner",
                        "ChangeSiteCollectionAdditionalAdmin",
                        "CreateOrValidYammerGroup",
                        "AddYammerGroupFeed",
                        "CancelAutoTask",
                        "ContinueAccess",
                        "ChangeSSSettingsTitleDes",
                        "FailedToSubmit",
                        "WaitingForSubmission",
                        "AllApprovalStageComplete",
                        "LockSiteCollection",
                        "UpdateSiteCollectionLocked",
                        "ChangeSiteCollectionQuota",
                        "UpdateSiteCollectionChangedQuota",
                        "ApplyAdditionalAdministrators",
                        "CallCustomActionBeforeApproval",
                        "MaintanceWindow",
                        "CreateUser",
                        "AssignManager",
                        "AssignLicense",
                        "AddUserToGroups",
                        "RemoveUserFromGroups",
                        "AddUserReport",
                        "ApplyUserPolicy",
                        "ApplyOneDriveSiteProperties",
                        "ChangeUser",
                        "ChangeUserContact",
                        "ChangeUserLicense",
                        "ChangeUserManager",
                        "ChangeUserGroups",
                        "UpdateUserReport",
                        "ApplyUserRole",
                        "ChangeUserMail",
                        "RemoveOriginalMail",
                        "DeleteUser",
                        "BlockUser",
                        "ResetPassword",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeGroup",
                        "UpdateGroupReport",
                        "AddOwnersToGroup",
                        "AddMembersToGroup",
                        "RemoveOwnersFromGroup",
                        "RemoveMembersFromGroup",
                        "UpdateMetadatasToSite",
                        "ChangeDynamicGroupRules",
                        "UpdateGroupOwners",
                        "UpdateGroupMembers",
                        "CreateGroup",
                        "UpdateGroup",
                        "SetGroupOwners",
                        "SetGroupMembers",
                        "SetGroupQuota",
                        "AddGroupReport",
                        "ApplyGroupPolicy",
                        "EnableTeamCollaboration",
                        "ApplySiteDesign",
                        "ApplyGroupCustomMetadata",
                        "DeleteGroup",
                        "ChangeGroupPolicy",
                        "ExtendGroup",
                        "UpdateGroupStatus",
                        "InstallApp",
                        "GetGroup",
                        "RegisterSiteDocave",
                        "GetGroupSite",
                        "ChangeGroupQuota",
                        "SetGeoLocation",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "ApplyGroupExtension",
                        "ChangeTeamPrivateChannelSiteQuota",
                        "CreatingSite",
                        "ApplyingCustomTemplate",
                        "ApplyingSecuritySettings",
                        "ApplyingCustomMetadata",
                        "ApplyingSitePolicy",
                        "ApplyingAdditionalAdministrators",
                        "AddingToSiteDirectory",
                        "RegistingSiteToDao",
                        "ApplyingServiceDpmPlan",
                        "ServiceDpmPlanExecuted",
                        "ApplyingPolicyDpmPlan",
                        "PolicyDpmPlanExecuted",
                        "ApplyingPolicyEnforcerProfile",
                        "ApplyingArchiverProfile",
                        "ApplyingRecertification",
                        "InstallingApp",
                        "AddingAppParts",
                        "CreatingOrValidYammerGroup",
                        "AddingYammerGroupFeed",
                        "RemovingServiceAccount",
                        "CreateGuestUser",
                        "UpdateGuestUser",
                        "AddGuestUserToGroup",
                        "AddGuestUserReport",
                        "ApplyGuestUserRenewal",
                        "ApplyGuestUserElection",
                        "UnblockGuestUser",
                        "BlockGuestUser",
                        "DeleteGuestUser",
                        "CreatingWeb",
                        "ApplyingSecuritySettingsToWeb",
                        "ApplyingSharePointConfigurationsToWeb",
                        "ApplyingCustomMetadataToWeb",
                        "ApplyAndRunDPMPlanInCreatingWeb",
                        "AddingWebToDatabase",
                        "UpdatingWebInDatabase",
                        "DeployingAppPartToWeb",
                        "AddingAppPartToWeb",
                        "CreatingOrValidingYammerGroupInCreatingWeb",
                        "AddingYammerGroupFeedInWeb",
                        "DeletingSite",
                        "ArchivingSite",
                        "ChangingSitePolicy",
                        "UnlockingSite",
                        "LockingSite",
                        "ExtendingSite",
                        "ChangingSiteQuota",
                        "ChangingSiteTitleAndDescription",
                        "ChangingSiteMetadata",
                        "UpdatingSiteDirectory",
                        "ConvertingToHubSite",
                        "ConnectingToHubSite",
                        "UnregisteringHubSite",
                        "ChangingSensitivity",
                        "ChangingWebTitleAndDescription",
                        "ChangingListSetting",
                        "WaitingForGrantPermission",
                        "GrantingPermission",
                        "CheckingList",
                        "UploadingTemplate",
                        "CreatingList",
                        "CreatingCMPlan",
                        "RunningCMPlan",
                        "SettingGroupSharing",
                        "SettingOutlookExperience",
                        "WelcomeEmail",
                        "FailedWithSubRequestException",
                        "ValidatePrivateChannel",
                        "CreatePrivateChannel",
                        "AddUserToChannel",
                        "AddChannelToDB",
                        "ApplyPolicyToChannel",
                        "ChangeChannelName",
                        "ChangeChannelDescription",
                        "ChangeChannelMembers",
                        "ChangeChannelOwners",
                        "ChangeChannelToDB",
                        "RegistingSiteToAos",
                        "RegistingGroupToAos",
                        "StartingProcess",
                        "DeletePowerApps",
                        "UpdatePowerAppsStatus",
                        "DeletePowerBI",
                        "UpdatePowerBIStatus",
                        "DeletePowerAutomate",
                        "UpdatePowerAutomateStatus",
                        "FourthTaskCreated",
                        "FifthTaskCreated",
                        "WaitingForReSubmission",
                        "FourthStageApproval",
                        "FifthStageApproval",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "batchId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "TaskListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "TaskResult": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                60,
                10000
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Running",
                "Approved",
                "Rejected",
                "Canceled",
                "TimeOut",
                "Completed",
                "AutoActionApproved",
                "Retried",
                "Skipped",
                "Submited",
                "WaitingForSubmission",
                "AllStagesTimeOut",
                "Declined",
                "WaitingForClaim",
                "ElectionTaskTimeOut",
                "Claimed",
                "AutoComplete",
                "WaitingForSpecify",
                "PendingConfirm",
                "ConfirmOverdue",
                "PendingRenewal",
                "RenewalExpired",
                "ConfirmException",
                "RenewalException",
                "WaitingForSpecifyBothContacts",
                "WaitingForConfirmation",
                "InProgress",
                "ConfirmTaskOverdue",
                "ConfirmTaskEscalation",
                "WaitingForAssistant",
                "GoBackRejected",
                "ElectionTaskContinueWithDeclined",
                "ElectionTaskContinueWithOverdue",
                "GoBackWithNoChangesRejected",
                "WaitingForSpecifyBothContactsOverdue",
                "WaitingForSpecifyBothContactsEscalated",
                "UnknownChannelTaskStatus",
                "WaittingForResubmission",
                "Deleted"
            ]
        },
        "TaskType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                20,
                21,
                22,
                23,
                60,
                61,
                600,
                601,
                602,
                603,
                604,
                605,
                606,
                607,
                608,
                609,
                610
            ],
            "type": "integer",
            "x-enum-varnames": [
                "ApprovalTask",
                "ErrorHandlingTask",
                "SCExpired",
                "SCNoAccess",
                "ToDoTask",
                "UserExpired",
                "GroupExpired",
                "GroupInactivityThreshold",
                "AutoImportGroup",
                "AutoImportSite",
                "RenewGroup",
                "RenewSite",
                "RenewGuestUser",
                "RenewPrivateChannel",
                "RenewGeneric",
                "RenewSharedMailbox",
                "AutoImportGeneric",
                "AutoImportSharedMailbox",
                "PassbackTask",
                "DynamicMembershipSubTask",
                "AutoImportPowerApps",
                "RenewPowerApps",
                "RenewSharedChannel",
                "RenewEnvironments",
                "RenewPowerBIs",
                "AutoImportPowerBI",
                "AutoImportPowerAutomate",
                "RenewPowerAutomates",
                "ModernAutoImportTeam",
                "ModernAutoImportGroup",
                "ModernAutoImportSite"
            ]
        },
        "TeamClassification": {
            "type": "object",
            "properties": {
                "classificationName": {
                    "type": "string"
                }
            }
        },
        "TeamClassificationAndSensitivityLabel": {
            "type": "object",
            "properties": {
                "sensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "originalSensitivityLabel": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "classification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassification"
                        }
                    ]
                },
                "originalClassification": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamClassification"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamElectionProfile": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "valueDisplayName": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamFunSetting": {
            "type": "object",
            "properties": {
                "allowGiphy": {
                    "default": false,
                    "type": "boolean"
                },
                "giphyContentRating": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TemplateGiphyRatingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Moderate",
                        "Strict"
                    ]
                },
                "allowStickersAndMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCustomMemes": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamGuestPermissionSetting": {
            "type": "object",
            "properties": {
                "allowGuestsCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowGuestsDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamId": {
            "description": "Activity model for team id",
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamLifecycleActionModel": {
            "type": "object",
            "properties": {
                "lifecycleActionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Archive",
                        "Restore",
                        "Delete"
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Archive",
                "Restore",
                "Delete"
            ]
        },
        "TeamLifecycleGallery": {
            "type": "object",
            "properties": {
                "teamInfo": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleTeamModel"
                        }
                    ]
                },
                "teamLifecycleActionDetails": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamLifecycleActionModel"
                        }
                    ]
                },
                "galleryType": {
                    "type": "string"
                },
                "galleryInternalName": {
                    "type": "string"
                },
                "galleryMetadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                }
            }
        },
        "TeamLocale": {
            "type": "object",
            "properties": {
                "locale": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamMemberPermissionSetting": {
            "type": "object",
            "properties": {
                "allowCreateUpdateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreatePrivateChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowDeleteChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "allowAddRemoveApps": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreateUpdateRemoveTabs": {
                    "default": false,
                    "type": "boolean"
                },
                "allowCreateUpdateRemoveConnectors": {
                    "default": false,
                    "type": "boolean"
                },
                "allowEditMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "allowDeleteMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamMembers": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedMembers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamMentionSetting": {
            "type": "object",
            "properties": {
                "allowTeamMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "allowChannelMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamMessagingSettings": {
            "type": "object",
            "properties": {
                "allowUserEditMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "allowUserDeleteMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "allowOwnerDeleteMessages": {
                    "default": false,
                    "type": "boolean"
                },
                "allowTeamMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "allowChannelMentions": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamNameDescription": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "suffix": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamOwners": {
            "type": "object",
            "properties": {
                "owners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "predefinedOwners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamSensitivityLabel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TeamSensitivityLabelChangedValueRequestModel": {
            "type": "object",
            "properties": {
                "newValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "originalValue": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSensitivityLabel"
                        }
                    ]
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamSiteUrl": {
            "description": "Activity model for team site url",
            "type": "object",
            "properties": {
                "rootSite": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "hasSequenceNumber": {
                    "default": false,
                    "type": "boolean"
                },
                "urlwithSequenceNumber": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamsTemplateServiceSettings": {
            "type": "object",
            "properties": {
                "enableCreateTeamFromScratch": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromExistTeam": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromTeamTemplate": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromIT": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromOwned": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneChannels": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneApps": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTabs": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneMembers": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamSetting": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamPrivacy": {
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamClassification": {
                    "default": false,
                    "type": "boolean"
                },
                "cloneTeamTemplateSettingValueAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "templateTeams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "teamTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextModel"
                    }
                },
                "hidden": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "TeamsTemplateSettings": {
            "description": "Teams template settings model",
            "type": "object",
            "properties": {
                "enableCreateTeamFromScratch": {
                    "description": "Whether to allow business users to create a team from scratch.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromExistTeam": {
                    "description": "Whether to allow business users to create a team from an existing team.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCreateTeamFromTeamTemplate": {
                    "description": "Whether to allow business users to create a team using a team template.",
                    "default": false,
                    "type": "boolean"
                },
                "selectedTemplate": {
                    "description": "The selected custom team template",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "selectedMSTemplate": {
                    "description": "The selected built-in team template",
                    "allOf": [
                        {
                            "$ref": "#/definitions/StringModel"
                        }
                    ]
                },
                "teamTemplates": {
                    "description": "All team templates",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TextModel"
                    }
                },
                "enableCloneChannels": {
                    "description": "Set whether copying channels from the team is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneApps": {
                    "description": "Set whether copying apps from the team is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTabs": {
                    "description": "Set whether copying tabs from the team is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneMembers": {
                    "description": "Set whether copying members from the team is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamSetting": {
                    "description": "Set whether copying team settings from the team is enabled.",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamPrivacy": {
                    "description": "Whether to enable the team privacy. (Currently not supported)",
                    "default": false,
                    "type": "boolean"
                },
                "enableCloneTeamClassification": {
                    "description": "Whether to enable the team classification. (Currently not supported)",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "TeamTemplate": {
            "description": "Activity model for team template",
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "templateName": {
                    "type": "string"
                },
                "templateId": {
                    "type": "string"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TeamTimeZone": {
            "type": "object",
            "properties": {
                "timeZone": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "TemplateGiphyRatingType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Moderate",
                "Strict"
            ]
        },
        "TemplateWithPermissions": {
            "type": "object",
            "properties": {
                "templateId": {
                    "type": "string"
                },
                "isUseCommon": {
                    "default": false,
                    "type": "boolean"
                },
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceGroupWithPermissions"
                    }
                }
            }
        },
        "TemporaryPermissionRequestSetting": {
            "type": "object",
            "properties": {
                "isGrantTemporaryPermission": {
                    "default": false,
                    "type": "boolean"
                },
                "isGrantAdminGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "expirationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExpirationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Duration",
                        "Date"
                    ]
                },
                "durationInterval": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "durationDateType": {
                    "format": "int32",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ]
                },
                "startTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "tempPermissionGroupIdentity": {
                    "type": "string"
                }
            }
        },
        "TermsMetadataSettings": {
            "type": "object",
            "properties": {
                "allowMultiple": {
                    "default": false,
                    "type": "boolean"
                },
                "adminCenter": {
                    "type": "string"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                },
                "termStore": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "termGroup": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "termSet": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "scope": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "tree": {
                    "title": "TermTreeModel",
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "TermsValue": {
            "description": "Value of Managed metadata metadata.",
            "type": "object",
            "properties": {
                "termStore": {
                    "description": "Id and name of term store.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ],
                    "readOnly": true
                },
                "termGroup": {
                    "description": "Id and name of term group.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ],
                    "readOnly": true
                },
                "termSet": {
                    "description": "Id and name of term set.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ],
                    "readOnly": true
                },
                "value": {
                    "description": "Id and name collection of terms.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuidModel"
                    }
                }
            }
        },
        "TextModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "TextValidationRuleRef": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "expression": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TextValidationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "RegularExpression",
                        "BlockWord"
                    ]
                },
                "modifiedBy": {
                    "type": "string"
                },
                "blockWord": {
                    "type": "string"
                }
            }
        },
        "TextValidationType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "RegularExpression",
                "BlockWord"
            ]
        },
        "ThemeSettingType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "BusinessUserConfig",
                "ITConfig"
            ]
        },
        "TimeZoneSettings": {
            "description": "TimeZone Settings",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Enabled",
                    "default": false,
                    "type": "boolean"
                },
                "timeZone": {
                    "format": "int32",
                    "description": "time zone",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "TreeNode": {
            "type": "object",
            "properties": {
                "webApplicationId": {
                    "type": "string"
                },
                "webApplicationUri": {
                    "type": "string"
                },
                "siteCollectionId": {
                    "type": "string"
                },
                "siteCollectionUrl": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "nodeId": {
                    "type": "string"
                },
                "startIndex": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "pageSize": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "pageIndex": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "fullCount": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "managedPath": {
                    "type": "string"
                },
                "agentID": {
                    "type": "string"
                },
                "fullPath": {
                    "type": "string"
                },
                "farmName": {
                    "type": "string"
                },
                "hasNextPage": {
                    "default": false,
                    "type": "boolean"
                },
                "farmID": {
                    "format": "uuid",
                    "type": "string"
                },
                "parentID": {
                    "format": "uuid",
                    "type": "string"
                },
                "extension": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TreeNodeExtension"
                        }
                    ]
                },
                "parent": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TreeNode"
                        }
                    ]
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TreeNodeType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Root",
                        "WebApplication",
                        "Tenant",
                        "Container",
                        "ManagedPath",
                        "SiteCollection",
                        "Site",
                        "Sites",
                        "Lists",
                        "List",
                        "DocumentLibrary",
                        "Folder",
                        "Folders",
                        "Items",
                        "Item",
                        "File",
                        "Team",
                        "Yammer",
                        "Group",
                        "GuestUser",
                        "PrivateChannel",
                        "PowerApps",
                        "SecurityGroup",
                        "DistributionList",
                        "MailEnableGroup",
                        "SharedMailbox",
                        "SharedChannel",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User",
                        "All",
                        "WebApplication_D",
                        "BPOSDCA",
                        "SelectAll",
                        "None",
                        "Farm"
                    ]
                },
                "spObjectID": {
                    "format": "uuid",
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "parentSPObjectID": {
                    "format": "uuid",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "loadManagedPath": {
                    "default": false,
                    "type": "boolean"
                },
                "loadChildrenFromDB": {
                    "default": false,
                    "type": "boolean"
                },
                "loadedPageCount": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "selectedChildren": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    }
                },
                "filterUrls": {
                    "type": "string"
                },
                "filterType": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "checkNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "selectedWebAppId_SubSiteProvServ": {
                    "format": "uuid",
                    "type": "string"
                },
                "selectedSiteCollIds_SubSiteProvServ": {
                    "type": "string"
                },
                "childrenType": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "listId": {
                    "format": "uuid",
                    "type": "string"
                },
                "serverRelativeUrl": {
                    "type": "string"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "TreeNodeExtension": {
            "type": "object",
            "properties": {
                "size": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "TreeNodeType": {
            "format": "int32",
            "enum": [
                0,
                2,
                3,
                4,
                10,
                100,
                200,
                201,
                202,
                300,
                310,
                400,
                401,
                402,
                500,
                501,
                598,
                599,
                600,
                601,
                602,
                603,
                604,
                605,
                606,
                607,
                608,
                609,
                610,
                611,
                612,
                613,
                614,
                1000,
                -5,
                -4,
                -3,
                -2,
                -1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Root",
                "WebApplication",
                "Tenant",
                "Container",
                "ManagedPath",
                "SiteCollection",
                "Site",
                "Sites",
                "Lists",
                "List",
                "DocumentLibrary",
                "Folder",
                "Folders",
                "Items",
                "Item",
                "File",
                "Team",
                "Yammer",
                "Group",
                "GuestUser",
                "PrivateChannel",
                "PowerApps",
                "SecurityGroup",
                "DistributionList",
                "MailEnableGroup",
                "SharedMailbox",
                "SharedChannel",
                "Environment",
                "PowerBI",
                "PowerAutomate",
                "RoomMailbox",
                "EquipmentMailbox",
                "User",
                "All",
                "WebApplication_D",
                "BPOSDCA",
                "SelectAll",
                "None",
                "Farm"
            ]
        },
        "UnlockSiteRequest": {
            "description": "Unlock site collection request model",
            "type": "object",
            "properties": {
                "extendDuration": {
                    "format": "int32",
                    "description": "Extend site collection lease duration",
                    "default": 0,
                    "type": "integer"
                },
                "extendDurationType": {
                    "format": "int32",
                    "description": "Extend site collection lease duration type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiDurationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Day",
                        "Week",
                        "Month",
                        "Year"
                    ]
                },
                "action": {
                    "format": "int32",
                    "description": "Lifecycle management action type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Extend",
                        "Delete",
                        "Archive",
                        "ChangePolicy",
                        "Unlock",
                        "Lock",
                        "ChangeQuota"
                    ]
                },
                "actionDescription": {
                    "description": "Description of lifecycle management actions. You can get all available description of lifecycle management actions by invoking the GetSiteLifecycleService api.",
                    "type": "string",
                    "readOnly": true
                },
                "siteId": {
                    "format": "uuid",
                    "description": "Site collection ID",
                    "type": "string"
                },
                "siteUrl": {
                    "description": "Site collection URL",
                    "type": "string"
                },
                "siteTitle": {
                    "description": "Site Title",
                    "type": "string"
                },
                "generateFromRenewal": {
                    "description": "If generate from renewal",
                    "default": false,
                    "type": "boolean"
                },
                "generateFromElection": {
                    "description": "If generate from election",
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "UnlockSiteSetting": {
            "type": "object",
            "properties": {
                "isExpired": {
                    "default": false,
                    "type": "boolean"
                },
                "isExtendEnabled": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "UrlRandomStringSettings": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "maxLength": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "minLength": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "UrlSequentialNumberingSettings": {
            "type": "object",
            "properties": {
                "prefix": {
                    "type": "string"
                },
                "delimiter": {
                    "type": "string"
                },
                "sequenceNumber": {
                    "type": "string"
                }
            }
        },
        "UserGroupPermissions": {
            "type": "object",
            "properties": {
                "userPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceUserWithPermissions"
                    }
                },
                "groupPermissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceGroupWithPermissions"
                    }
                }
            }
        },
        "UserInfo": {
            "type": "object",
            "properties": {
                "identityName": {
                    "type": "string"
                },
                "userDisplayName": {
                    "type": "string"
                },
                "domainGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "department": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "manager": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "isDeleted": {
                    "default": false,
                    "type": "boolean"
                },
                "securityToken": {
                    "type": "string"
                },
                "userType": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "azureUserType": {
                    "type": "string"
                },
                "legalPerson": {
                    "default": false,
                    "type": "boolean"
                },
                "authenticationType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AuthenticationType"
                        }
                    ],
                    "x-enum-varnames": [
                        "LocalSystem",
                        "WindowsIntegration",
                        "ADIntegration",
                        "ADFSIntegration",
                        "Federation",
                        "SharePointOnline",
                        "SalesForce",
                        "Yammer",
                        "AzureAD",
                        "Sandbox",
                        "SharePoint",
                        "Exchange"
                    ]
                },
                "adminCenterUrl": {
                    "type": "string"
                },
                "inviteType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/InviteType"
                        }
                    ],
                    "x-enum-varnames": [
                        "User",
                        "Group",
                        "UserInGroup",
                        "PortalSupport",
                        "ProductSupport"
                    ]
                },
                "type": {
                    "type": "string"
                },
                "isRegisteredAosGroup": {
                    "default": false,
                    "type": "boolean"
                },
                "isExternalUser": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Authentication",
                        "NoAuthentication"
                    ]
                },
                "isAPIExceptional": {
                    "default": false,
                    "type": "boolean"
                },
                "tenantId": {
                    "type": "string"
                },
                "objectId": {
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "jobTitle": {
                    "type": "string"
                },
                "usageLocation": {
                    "type": "string"
                },
                "physicalDeliveryOfficeName": {
                    "type": "string"
                },
                "isOtherTenantUser": {
                    "default": false,
                    "type": "boolean"
                },
                "isAccountEnabled": {
                    "default": false,
                    "type": "boolean"
                },
                "networkId": {
                    "type": "string"
                },
                "isValidateByProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "proxyAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "principalType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/PrincipalType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "User",
                        "DistributionList",
                        "Office365Group",
                        "SharePointGroup",
                        "Guest",
                        "SecurityGroupOnly",
                        "MailEnabledSecurityGroup",
                        "SecurityGroup",
                        "AzureADGroup",
                        "All",
                        "Team",
                        "SharedMailbox",
                        "Yammer",
                        "OnlyOffice365Group",
                        "RoomList",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "Office365GroupSecurityEnable",
                        "Office365GroupSecurityDisable",
                        "MailContact"
                    ]
                },
                "inviter": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastModifiedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "displayName": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "existInAOS": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "UserLevelControlMode": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AnyUserOrGroup",
                "PeersAndDirectOrIn",
                "DirectOrIn"
            ]
        },
        "UserLevelControlSettings": {
            "type": "object",
            "properties": {
                "userLevelControlMode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserLevelControlMode"
                        }
                    ],
                    "x-enum-varnames": [
                        "AnyUserOrGroup",
                        "PeersAndDirectOrIn",
                        "DirectOrIn"
                    ]
                },
                "isSetRequesterAsDefaultEnabled": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "UserLevelRestrictionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "AnyUser",
                "PeersAndDirectOrIndirectReport",
                "DirectOrIndirectReports"
            ]
        },
        "UserManagementSourceType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "User",
                "Group",
                "All"
            ]
        },
        "UserMembershipInfo": {
            "type": "object",
            "properties": {
                "objectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "identityName": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "userType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MembershipUserType"
                        }
                    ],
                    "x-enum-varnames": [
                        "User",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "Office365Group",
                        "Guest",
                        "Team",
                        "MailContact"
                    ]
                },
                "actionType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserMembershipStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Added",
                        "Deleted"
                    ]
                },
                "email": {
                    "type": "string"
                },
                "loginName": {
                    "type": "string"
                }
            }
        },
        "UserMembershipStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Added",
                "Deleted"
            ]
        },
        "UserMetadataSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "peoplePickerProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "allowReferenceAsRoleInApprovalProcess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "UserProfileMetadataSettings": {
            "type": "object",
            "properties": {
                "adminCenter": {
                    "type": "string"
                },
                "valueType": {
                    "type": "string"
                },
                "enableValueSync": {
                    "default": false,
                    "type": "boolean"
                },
                "enableRoleValueSync": {
                    "default": false,
                    "type": "boolean"
                },
                "value": {
                    "description": "Value of Lookup to SharePoint library/list metadata.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LookupValue"
                        }
                    ]
                },
                "property": {
                    "type": "string"
                },
                "extensionAttribute": {
                    "type": "string"
                },
                "allowReferenceAsRoleInApprovalProcess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "UserSource": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "All",
                "Local",
                "Azure",
                "SharePoint",
                "Yammer",
                "Exchange"
            ]
        },
        "WebLifecycleActionType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Delete",
                "Archive"
            ]
        },
        "WebLifecycleRequest": {
            "type": "object",
            "properties": {
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webRelativeUrl": {
                    "type": "string"
                },
                "webTitle": {
                    "description": "Web Title",
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Delete",
                        "Archive"
                    ]
                },
                "actionDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of request.",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "description": "Id of service.",
                    "type": "string"
                },
                "summary": {
                    "description": "Summary of request.",
                    "type": "string"
                },
                "notesToApprovers": {
                    "description": "Notes to approvers.",
                    "type": "string"
                },
                "questionnaireId": {
                    "format": "uuid",
                    "description": "Id of questionnaire",
                    "type": "string"
                },
                "questionnaireResponse": {
                    "description": "Questionnaire question and answer of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/QuestionAnswerResponse"
                    }
                },
                "metadatas": {
                    "description": "Metadata of request.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RequestMetadata"
                    }
                },
                "ticketNumber": {
                    "format": "int32",
                    "description": "Ticket number of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "type": {
                    "format": "int32",
                    "description": "Service type of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "readOnly": true
                },
                "typeDescription": {
                    "description": "Service type description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "requester": {
                    "description": "Requester display name.",
                    "type": "string",
                    "readOnly": true
                },
                "requesterLoginName": {
                    "description": "Requester login name.",
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "format": "int32",
                    "description": "Status of request.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestStatus"
                        }
                    ],
                    "readOnly": true
                },
                "progressStatus": {
                    "format": "int32",
                    "description": "Progress status of request.",
                    "default": 0,
                    "type": "integer",
                    "readOnly": true
                },
                "progressStatusDescription": {
                    "description": "Progress status description of request.",
                    "type": "string",
                    "readOnly": true
                },
                "submittedTime": {
                    "format": "date-time",
                    "description": "Submitted time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "lastUpdated": {
                    "format": "date-time",
                    "description": "Last updated time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "createdTime": {
                    "format": "date-time",
                    "description": "Created time of request.",
                    "type": "string",
                    "readOnly": true
                },
                "hasSubRequest": {
                    "description": "HasSubRequest",
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "description": "RequestResourceType",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "modifiedBy": {
                    "description": "ModifiedBy",
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "description": "ModifiedByDisplayName",
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "description": "ModifiedDate",
                    "type": "string"
                },
                "assignTo": {
                    "description": "Task assignee of request.",
                    "type": "string",
                    "readOnly": true
                },
                "fullPath": {
                    "description": "Object full path of request.",
                    "type": "string",
                    "readOnly": true
                },
                "approvalStageName": {
                    "description": "Approval stage name of request.",
                    "type": "string",
                    "readOnly": true
                },
                "participants": {
                    "description": "Participants of request.",
                    "type": "string",
                    "readOnly": true
                },
                "objectID": {
                    "description": "Object full path/email/private channel of request.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WebLifecycleService": {
            "type": "object",
            "properties": {
                "action": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebLifecycleActionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Delete",
                        "Archive"
                    ]
                },
                "archiveContentProfile": {
                    "type": "string"
                },
                "scopeSettings": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceScopeSettings"
                        }
                    ]
                },
                "requestTemplate": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/WebLifecycleRequest"
                        }
                    ]
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomMetadata"
                    }
                },
                "hideRequestSummary": {
                    "default": false,
                    "type": "boolean"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "serviceAdminContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "approversContainManagerRole": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "showServiceInCatalog": {
                    "default": false,
                    "type": "boolean"
                },
                "customActions": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/CustomActionSettings"
                        }
                    ]
                },
                "approvalProcessId": {
                    "format": "uuid",
                    "type": "string"
                },
                "languageId": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "type": "string"
                }
            }
        },
        "WebLifecycleValidateResult": {
            "type": "object",
            "properties": {
                "webId": {
                    "format": "uuid",
                    "type": "string"
                },
                "webUrl": {
                    "type": "string"
                },
                "webRelativeUrl": {
                    "type": "string"
                },
                "siteId": {
                    "format": "uuid",
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "isValid": {
                    "default": false,
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                },
                "messageCode": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MessageCode"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "NoServicePermission",
                        "SiteNotInScope",
                        "SiteUnlock",
                        "SiteNotInGADB",
                        "SiteInvalid",
                        "SiteLifecycleLock",
                        "SiteAutoLifecycleLock",
                        "SiteHasPendingRenewal",
                        "SiteHasRecertification",
                        "SitePolicyInvalid",
                        "SiteExtendTimeError",
                        "SiteLocked",
                        "NotInAos",
                        "InvalidSiteUrl",
                        "InvalidActivityId",
                        "SiteIsConnectToChannel",
                        "GroupArchived",
                        "GroupNotInGADB",
                        "TeamArchiveAvaliable",
                        "TeamRestoreAvaliable",
                        "TeamArchivedNotRestore",
                        "GroupNotInScope",
                        "TeamNotInScope",
                        "GroupDisableDelete",
                        "GroupDisableExtend",
                        "GroupDisableChangePolicy",
                        "GroupDisableChangeQuota",
                        "GroupDisableArchive",
                        "GroupDisableUnArchive",
                        "GroupNotInServiceScope",
                        "GroupNotAllowAddGuestUser",
                        "YammerNotInScope",
                        "YammerNotSupportedArchive",
                        "GroupRestrictAccess",
                        "NotSupportDynamicServiceCreated",
                        "NotSupportDynamicServiceCreatedSite",
                        "ExchangeResourceNotInAos",
                        "ExchangeResourceNotInScope",
                        "TeamLifecycleNoAvaliableAction",
                        "GroupNotExistInAzureAD",
                        "TeamArchived",
                        "NotSupportYammer",
                        "GroupEnabledTeam",
                        "GroupEnabledYammer",
                        "TeamAPINotSupportForGCCH",
                        "CreateGuestUserEmailExist",
                        "CreateGuestUserEmailVerified",
                        "NotSupportDynamicServiceCreatedGroup",
                        "GuestLifecycleNoAvaliableAction",
                        "ListTitleExist",
                        "ListUrlExist",
                        "ParentSiteUrlNotExist",
                        "GroupDisableLease",
                        "SharedMailboxNotInScope",
                        "ObjectNotInScope",
                        "ObjectNotInGADB",
                        "SharedMailboxNotExistInAzureAD",
                        "GuestUserNotExistInAzureAD",
                        "PowerAppNotExistInAzureAD",
                        "PowerAppNotInGADB",
                        "GuestUserNotInGADB",
                        "PowerAppNotInScope",
                        "GuestUserNotHasScope",
                        "ObjectHasRunningAutoImportTask",
                        "TeamMarkedAsDeleted",
                        "TeamNotExistInMSEnvironment",
                        "TeamIsApplyingPolicy",
                        "TeamHasNotBeenConfirmed",
                        "NotManagedASTeamWithinGAO",
                        "IsAlreadyTeam",
                        "TeamSiteLocked",
                        "SCLifecycleNoAvailableAction",
                        "SCNotInScope",
                        "PowerBINotExistInAzureAD",
                        "PowerAutomateNotExistInAzureAD",
                        "EnvironmentNotExistInAzureAD",
                        "EnvironmentNotInScope",
                        "PowerAutomateNotInScope",
                        "PowerBINotInScope",
                        "NotSupportGroupSite",
                        "PowerBINotInGADB",
                        "PowerAutomateNotInGADB",
                        "PowerEnvironmentNotInGADB",
                        "GroupSiteIsLocked",
                        "YammerSiteIsLocked",
                        "TeamSiteIsLocked",
                        "Office365GroupNotInGADB",
                        "TeamNotInGADB",
                        "YammerNotInGADB",
                        "SecurityGroupNotInGADB",
                        "DistributionGroupNotInGADB",
                        "MailEnabledNotInGADB",
                        "SharedMailboxNotInGADB",
                        "PowerAppIsQuarantined",
                        "PowerEnvironmentIsDisabled",
                        "PowerAutomateIsDisabled",
                        "PowerAutomateIsSuspended",
                        "SecurityGroupNotInScope",
                        "DistributionGroupNotInScope",
                        "MailEnabledNotInScope",
                        "SiteArchived",
                        "SiteIsApplyingPolicy",
                        "SiteHasNotBeenConfirmed",
                        "UserNotInScope",
                        "UserNotExists",
                        "GroupMarkedAsDeleted",
                        "GroupNotExistInMSEnvironment",
                        "GroupIsApplyingPolicy",
                        "GroupHasNotBeenConfirmed",
                        "UserEnabledOnPremiseSync",
                        "GroupEnabledOnPremiseSync",
                        "ManagePermissionUrlNotInScope",
                        "UserTypeNotSupport",
                        "NoAADAppProfile"
                    ]
                }
            }
        },
        "WebServiceAuthenticationType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Anonymous",
                "AzureAD"
            ]
        },
        "WelcomeEmail": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "activityId": {
                    "description": "An unique identifier for the activity which can be used to find configuration in the dynamic service if it is assign by IT",
                    "type": "string"
                }
            }
        },
        "WelcomeEmailSettings": {
            "type": "object",
            "properties": {
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "subject": {
                    "type": "string"
                },
                "personalMessage": {
                    "type": "string"
                },
                "enabledSendEmailInService": {
                    "default": false,
                    "type": "boolean"
                },
                "welcomeEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isWelcomeEmailTemplate": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "WorkspaceCreatedSourceType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "DynamicService"
            ]
        },
        "WorkspaceList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "siteUrl": {
                    "type": "string"
                },
                "groupEmail": {
                    "type": "string"
                },
                "typeDescription": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "primaryContactEmail": {
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseDescription": {
                    "type": "string"
                },
                "isCurrentRenewer": {
                    "default": false,
                    "type": "boolean"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted",
                        "Archived",
                        "Locked",
                        "TemporaryLocked"
                    ]
                },
                "autoImportProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "pendingAction": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "secondaryContactEmail": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "renewalProfile": {
                    "type": "string"
                },
                "renewalProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfile": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "quotaProfile": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfile": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "primaryAdmin": {
                    "type": "string"
                },
                "primaryAdminEmail": {
                    "type": "string"
                },
                "additionalAdmin": {
                    "type": "string"
                },
                "additionalAdminEmail": {
                    "type": "string"
                },
                "geoLocation": {
                    "type": "string"
                },
                "geoLocationDescription": {
                    "type": "string"
                },
                "storageLimit": {
                    "type": "string"
                },
                "storageUsage": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "privacy": {
                    "default": false,
                    "type": "boolean"
                },
                "sensitivity": {
                    "type": "string"
                },
                "privacyDescription": {
                    "type": "string"
                },
                "enableDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "webLink": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "lastAccessedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "enableDynamicMembershipDescription": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EndUserReportMetadata"
                    }
                }
            }
        },
        "WorkspaceListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "WorkspaceType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Site",
                "Web",
                "Group",
                "Teams",
                "Yammer",
                "PowerApps",
                "SecurityGroup",
                "MailEnabledSecurityGroup",
                "DistributionList",
                "SharedMailbox",
                "Environment",
                "PowerBI",
                "PowerAutomate",
                "GuestUser",
                "RoomMailbox",
                "EquipmentMailbox",
                "User"
            ]
        },
        "YammerGroupJoinType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Anyone",
                "AdminApproved"
            ]
        },
        "YammerGroupRequestSettings": {
            "description": "Yammer community request settings model",
            "type": "object",
            "properties": {
                "nameOrId": {
                    "description": "Yammer community name or ID",
                    "type": "string"
                },
                "description": {
                    "description": "Yammer community description",
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "description": "Yammer community privacy type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Public",
                        "Private"
                    ]
                },
                "joinType": {
                    "format": "int32",
                    "description": "Set who can view Yammer community content. Whether to allow every user in the Yammer network to view the community content or allow users approved by community members to view the community content.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupJoinType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Anyone",
                        "AdminApproved"
                    ]
                },
                "isListInDirectory": {
                    "description": "Whether the Yammer community is associated with a Microsoft 365 Group.",
                    "default": false,
                    "type": "boolean"
                },
                "isGroupAlreadyExisted": {
                    "description": "Whether the Yammer community already exists.",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "YammerGroupServiceSettings": {
            "type": "object",
            "properties": {
                "networkId": {
                    "type": "string"
                },
                "allowCreate": {
                    "default": false,
                    "type": "boolean"
                },
                "allowReuseExisting": {
                    "default": false,
                    "type": "boolean"
                },
                "enabled": {
                    "default": false,
                    "type": "boolean"
                },
                "createNewGroupAssignBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AssignBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "BusinessUser",
                        "BusinessUserWithRequired",
                        "ITAdminWithReadOnly",
                        "ITAdminWithHide"
                    ]
                },
                "nameOrId": {
                    "description": "Yammer community name or ID",
                    "type": "string"
                },
                "description": {
                    "description": "Yammer community description",
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "description": "Yammer community privacy type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Public",
                        "Private"
                    ]
                },
                "joinType": {
                    "format": "int32",
                    "description": "Set who can view Yammer community content. Whether to allow every user in the Yammer network to view the community content or allow users approved by community members to view the community content.",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/YammerGroupJoinType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Anyone",
                        "AdminApproved"
                    ]
                },
                "isListInDirectory": {
                    "description": "Whether the Yammer community is associated with a Microsoft 365 Group.",
                    "default": false,
                    "type": "boolean"
                },
                "isGroupAlreadyExisted": {
                    "description": "Whether the Yammer community already exists.",
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "YammerGroupType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Public",
                "Private"
            ]
        },
        "AllRequestDetails": {
            "type": "object",
            "properties": {
                "lastApprovedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "completedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "category": {
                    "format": "uuid",
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "approvalStageName": {
                    "type": "string"
                },
                "participants": {
                    "type": "string"
                },
                "participantDisplayName": {
                    "type": "string"
                },
                "ticketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "requesterDisplayName": {
                    "type": "string"
                },
                "detailStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ErrorStart",
                        "Error",
                        "RequestSubmitted",
                        "TaskCreated",
                        "AdminContactIssueReview",
                        "Cancelled",
                        "Rejected",
                        "FirstStageApproval",
                        "SecondStageApproval",
                        "ThirdStageApproval",
                        "Completed",
                        "AssignContentDatabase",
                        "CreateSiteCollection",
                        "ApplySecuritySettings",
                        "ApplySharePointConfigurations",
                        "ApplyCustomMetadata",
                        "AddToSiteCollectionDirectory",
                        "ApplyDocAveGranularBackupPlan",
                        "ApplyDocAveAuditorPlan",
                        "ApplyDocAveDeadAccountCleaningPlan",
                        "ApplyDocAveScheduledStorageManagerProfile",
                        "ApplyDocAveArchiverProfile",
                        "ApplyDocAveVaultProfile",
                        "ApplyAndRunDPMPlan",
                        "ArchiveSiteCollection",
                        "UpdateSiteCollectionArchived",
                        "ExtendSiteCollection",
                        "UpdateCustomMetadata",
                        "UpdateSiteDirectory",
                        "DeleteSiteCollection",
                        "UpdateSiteCollectionDeleted",
                        "CreateSubSite",
                        "AddToSubSiteDirectory",
                        "RetractDocAveGranularBackupPlan",
                        "RetractDocAveAuditorPlan",
                        "RetractDocAveDeadAccountCleaningPlan",
                        "RetractDocAveScheduledStorageManagerProfile",
                        "RetrieveDocAveArchiveProfile",
                        "RetrieveDocAveVaultProfile",
                        "UpdateChangeSCPolicyMetadata",
                        "UpdateSiteCollectionPolicyChanged",
                        "CreateHiddenList",
                        "ChangeSiteCollectionMetadata",
                        "UpdateSiteDirectoryForChangeSCMetadata",
                        "ChangeSiteCollectionContact",
                        "UpdateSiteDirectoryForChangeSCContact",
                        "CloneUserPermission",
                        "SearchUserPermission",
                        "InProgress",
                        "CompletedWithException",
                        "DeleteSubSite",
                        "UpdateDeleteSubSite",
                        "ArchiveSubSite",
                        "UpdateArchiveSubSite",
                        "ChangeSubSiteMetadata",
                        "UpdateSiteDirectoryForChangeSSMetadata",
                        "FirstTaskCreated",
                        "SecondTaskCreated",
                        "ThirdTaskCreated",
                        "GrantUserPermission",
                        "RemoveUserPermission",
                        "ChangeSCSettingsTitleDes",
                        "CreateMySiteCompleted",
                        "CreateCMPlan",
                        "RunCMPlan",
                        "ApplyArchiverProfile",
                        "CreateListCompleted",
                        "ChangeListURL",
                        "ChangeListSettingsCompleted",
                        "RegistSiteCollectionToDcoAveGroup",
                        "ApplyPolicyEnforcerProfile",
                        "UpdatePolicyEnforcerProfileCompleted",
                        "PermissionRecertificationTriggered",
                        "ChangingUserPermission",
                        "RequesterReportCreated",
                        "ApplyDeployAppPart",
                        "ApplyAddAppPart",
                        "ApplyingDeploymentManagerPlan",
                        "ApplyPermissionRecertification",
                        "ApplyMetadataRecertification",
                        "ApplyOwnershipRecertification",
                        "UnlockSiteCollection",
                        "UpdateSiteCollectionUnlocked",
                        "ChangeSiteCollectionOwner",
                        "ChangeSiteCollectionAdditionalAdmin",
                        "CreateOrValidYammerGroup",
                        "AddYammerGroupFeed",
                        "CancelAutoTask",
                        "ContinueAccess",
                        "ChangeSSSettingsTitleDes",
                        "FailedToSubmit",
                        "WaitingForSubmission",
                        "AllApprovalStageComplete",
                        "LockSiteCollection",
                        "UpdateSiteCollectionLocked",
                        "ChangeSiteCollectionQuota",
                        "UpdateSiteCollectionChangedQuota",
                        "ApplyAdditionalAdministrators",
                        "CallCustomActionBeforeApproval",
                        "MaintanceWindow",
                        "CreateUser",
                        "AssignManager",
                        "AssignLicense",
                        "AddUserToGroups",
                        "RemoveUserFromGroups",
                        "AddUserReport",
                        "ApplyUserPolicy",
                        "ApplyOneDriveSiteProperties",
                        "ChangeUser",
                        "ChangeUserContact",
                        "ChangeUserLicense",
                        "ChangeUserManager",
                        "ChangeUserGroups",
                        "UpdateUserReport",
                        "ApplyUserRole",
                        "ChangeUserMail",
                        "RemoveOriginalMail",
                        "DeleteUser",
                        "BlockUser",
                        "ResetPassword",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeGroup",
                        "UpdateGroupReport",
                        "AddOwnersToGroup",
                        "AddMembersToGroup",
                        "RemoveOwnersFromGroup",
                        "RemoveMembersFromGroup",
                        "UpdateMetadatasToSite",
                        "ChangeDynamicGroupRules",
                        "UpdateGroupOwners",
                        "UpdateGroupMembers",
                        "CreateGroup",
                        "UpdateGroup",
                        "SetGroupOwners",
                        "SetGroupMembers",
                        "SetGroupQuota",
                        "AddGroupReport",
                        "ApplyGroupPolicy",
                        "EnableTeamCollaboration",
                        "ApplySiteDesign",
                        "ApplyGroupCustomMetadata",
                        "DeleteGroup",
                        "ChangeGroupPolicy",
                        "ExtendGroup",
                        "UpdateGroupStatus",
                        "InstallApp",
                        "GetGroup",
                        "RegisterSiteDocave",
                        "GetGroupSite",
                        "ChangeGroupQuota",
                        "SetGeoLocation",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "ApplyGroupExtension",
                        "ChangeTeamPrivateChannelSiteQuota",
                        "CreatingSite",
                        "ApplyingCustomTemplate",
                        "ApplyingSecuritySettings",
                        "ApplyingCustomMetadata",
                        "ApplyingSitePolicy",
                        "ApplyingAdditionalAdministrators",
                        "AddingToSiteDirectory",
                        "RegistingSiteToDao",
                        "ApplyingServiceDpmPlan",
                        "ServiceDpmPlanExecuted",
                        "ApplyingPolicyDpmPlan",
                        "PolicyDpmPlanExecuted",
                        "ApplyingPolicyEnforcerProfile",
                        "ApplyingArchiverProfile",
                        "ApplyingRecertification",
                        "InstallingApp",
                        "AddingAppParts",
                        "CreatingOrValidYammerGroup",
                        "AddingYammerGroupFeed",
                        "RemovingServiceAccount",
                        "CreateGuestUser",
                        "UpdateGuestUser",
                        "AddGuestUserToGroup",
                        "AddGuestUserReport",
                        "ApplyGuestUserRenewal",
                        "ApplyGuestUserElection",
                        "UnblockGuestUser",
                        "BlockGuestUser",
                        "DeleteGuestUser",
                        "CreatingWeb",
                        "ApplyingSecuritySettingsToWeb",
                        "ApplyingSharePointConfigurationsToWeb",
                        "ApplyingCustomMetadataToWeb",
                        "ApplyAndRunDPMPlanInCreatingWeb",
                        "AddingWebToDatabase",
                        "UpdatingWebInDatabase",
                        "DeployingAppPartToWeb",
                        "AddingAppPartToWeb",
                        "CreatingOrValidingYammerGroupInCreatingWeb",
                        "AddingYammerGroupFeedInWeb",
                        "DeletingSite",
                        "ArchivingSite",
                        "ChangingSitePolicy",
                        "UnlockingSite",
                        "LockingSite",
                        "ExtendingSite",
                        "ChangingSiteQuota",
                        "ChangingSiteTitleAndDescription",
                        "ChangingSiteMetadata",
                        "UpdatingSiteDirectory",
                        "ConvertingToHubSite",
                        "ConnectingToHubSite",
                        "UnregisteringHubSite",
                        "ChangingSensitivity",
                        "ChangingWebTitleAndDescription",
                        "ChangingListSetting",
                        "WaitingForGrantPermission",
                        "GrantingPermission",
                        "CheckingList",
                        "UploadingTemplate",
                        "CreatingList",
                        "CreatingCMPlan",
                        "RunningCMPlan",
                        "SettingGroupSharing",
                        "SettingOutlookExperience",
                        "WelcomeEmail",
                        "FailedWithSubRequestException",
                        "ValidatePrivateChannel",
                        "CreatePrivateChannel",
                        "AddUserToChannel",
                        "AddChannelToDB",
                        "ApplyPolicyToChannel",
                        "ChangeChannelName",
                        "ChangeChannelDescription",
                        "ChangeChannelMembers",
                        "ChangeChannelOwners",
                        "ChangeChannelToDB",
                        "RegistingSiteToAos",
                        "RegistingGroupToAos",
                        "StartingProcess",
                        "DeletePowerApps",
                        "UpdatePowerAppsStatus",
                        "DeletePowerBI",
                        "UpdatePowerBIStatus",
                        "DeletePowerAutomate",
                        "UpdatePowerAutomateStatus",
                        "FourthTaskCreated",
                        "FifthTaskCreated",
                        "WaitingForReSubmission",
                        "FourthStageApproval",
                        "FifthStageApproval",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "detailStatusDescription": {
                    "type": "string"
                },
                "progressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "progressStatusDescription": {
                    "type": "string"
                },
                "modified": {
                    "format": "date-time",
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "assignTo": {
                    "type": "string"
                },
                "assignToDisplayName": {
                    "type": "string"
                },
                "assignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "serviceAdmin": {
                    "type": "string"
                },
                "serviceAdminDisplayName": {
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "objectID": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "hasSubRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "requestResourceTypeDescription": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportMetadata"
                    }
                }
            }
        },
        "AllRequestDetailsPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllRequestDetails"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "AllRequestList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "category": {
                    "format": "uuid",
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "approvalStageName": {
                    "type": "string"
                },
                "participants": {
                    "type": "string"
                },
                "participantDisplayName": {
                    "type": "string"
                },
                "ticketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "requesterDisplayName": {
                    "type": "string"
                },
                "detailStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ErrorStart",
                        "Error",
                        "RequestSubmitted",
                        "TaskCreated",
                        "AdminContactIssueReview",
                        "Cancelled",
                        "Rejected",
                        "FirstStageApproval",
                        "SecondStageApproval",
                        "ThirdStageApproval",
                        "Completed",
                        "AssignContentDatabase",
                        "CreateSiteCollection",
                        "ApplySecuritySettings",
                        "ApplySharePointConfigurations",
                        "ApplyCustomMetadata",
                        "AddToSiteCollectionDirectory",
                        "ApplyDocAveGranularBackupPlan",
                        "ApplyDocAveAuditorPlan",
                        "ApplyDocAveDeadAccountCleaningPlan",
                        "ApplyDocAveScheduledStorageManagerProfile",
                        "ApplyDocAveArchiverProfile",
                        "ApplyDocAveVaultProfile",
                        "ApplyAndRunDPMPlan",
                        "ArchiveSiteCollection",
                        "UpdateSiteCollectionArchived",
                        "ExtendSiteCollection",
                        "UpdateCustomMetadata",
                        "UpdateSiteDirectory",
                        "DeleteSiteCollection",
                        "UpdateSiteCollectionDeleted",
                        "CreateSubSite",
                        "AddToSubSiteDirectory",
                        "RetractDocAveGranularBackupPlan",
                        "RetractDocAveAuditorPlan",
                        "RetractDocAveDeadAccountCleaningPlan",
                        "RetractDocAveScheduledStorageManagerProfile",
                        "RetrieveDocAveArchiveProfile",
                        "RetrieveDocAveVaultProfile",
                        "UpdateChangeSCPolicyMetadata",
                        "UpdateSiteCollectionPolicyChanged",
                        "CreateHiddenList",
                        "ChangeSiteCollectionMetadata",
                        "UpdateSiteDirectoryForChangeSCMetadata",
                        "ChangeSiteCollectionContact",
                        "UpdateSiteDirectoryForChangeSCContact",
                        "CloneUserPermission",
                        "SearchUserPermission",
                        "InProgress",
                        "CompletedWithException",
                        "DeleteSubSite",
                        "UpdateDeleteSubSite",
                        "ArchiveSubSite",
                        "UpdateArchiveSubSite",
                        "ChangeSubSiteMetadata",
                        "UpdateSiteDirectoryForChangeSSMetadata",
                        "FirstTaskCreated",
                        "SecondTaskCreated",
                        "ThirdTaskCreated",
                        "GrantUserPermission",
                        "RemoveUserPermission",
                        "ChangeSCSettingsTitleDes",
                        "CreateMySiteCompleted",
                        "CreateCMPlan",
                        "RunCMPlan",
                        "ApplyArchiverProfile",
                        "CreateListCompleted",
                        "ChangeListURL",
                        "ChangeListSettingsCompleted",
                        "RegistSiteCollectionToDcoAveGroup",
                        "ApplyPolicyEnforcerProfile",
                        "UpdatePolicyEnforcerProfileCompleted",
                        "PermissionRecertificationTriggered",
                        "ChangingUserPermission",
                        "RequesterReportCreated",
                        "ApplyDeployAppPart",
                        "ApplyAddAppPart",
                        "ApplyingDeploymentManagerPlan",
                        "ApplyPermissionRecertification",
                        "ApplyMetadataRecertification",
                        "ApplyOwnershipRecertification",
                        "UnlockSiteCollection",
                        "UpdateSiteCollectionUnlocked",
                        "ChangeSiteCollectionOwner",
                        "ChangeSiteCollectionAdditionalAdmin",
                        "CreateOrValidYammerGroup",
                        "AddYammerGroupFeed",
                        "CancelAutoTask",
                        "ContinueAccess",
                        "ChangeSSSettingsTitleDes",
                        "FailedToSubmit",
                        "WaitingForSubmission",
                        "AllApprovalStageComplete",
                        "LockSiteCollection",
                        "UpdateSiteCollectionLocked",
                        "ChangeSiteCollectionQuota",
                        "UpdateSiteCollectionChangedQuota",
                        "ApplyAdditionalAdministrators",
                        "CallCustomActionBeforeApproval",
                        "MaintanceWindow",
                        "CreateUser",
                        "AssignManager",
                        "AssignLicense",
                        "AddUserToGroups",
                        "RemoveUserFromGroups",
                        "AddUserReport",
                        "ApplyUserPolicy",
                        "ApplyOneDriveSiteProperties",
                        "ChangeUser",
                        "ChangeUserContact",
                        "ChangeUserLicense",
                        "ChangeUserManager",
                        "ChangeUserGroups",
                        "UpdateUserReport",
                        "ApplyUserRole",
                        "ChangeUserMail",
                        "RemoveOriginalMail",
                        "DeleteUser",
                        "BlockUser",
                        "ResetPassword",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeGroup",
                        "UpdateGroupReport",
                        "AddOwnersToGroup",
                        "AddMembersToGroup",
                        "RemoveOwnersFromGroup",
                        "RemoveMembersFromGroup",
                        "UpdateMetadatasToSite",
                        "ChangeDynamicGroupRules",
                        "UpdateGroupOwners",
                        "UpdateGroupMembers",
                        "CreateGroup",
                        "UpdateGroup",
                        "SetGroupOwners",
                        "SetGroupMembers",
                        "SetGroupQuota",
                        "AddGroupReport",
                        "ApplyGroupPolicy",
                        "EnableTeamCollaboration",
                        "ApplySiteDesign",
                        "ApplyGroupCustomMetadata",
                        "DeleteGroup",
                        "ChangeGroupPolicy",
                        "ExtendGroup",
                        "UpdateGroupStatus",
                        "InstallApp",
                        "GetGroup",
                        "RegisterSiteDocave",
                        "GetGroupSite",
                        "ChangeGroupQuota",
                        "SetGeoLocation",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "ApplyGroupExtension",
                        "ChangeTeamPrivateChannelSiteQuota",
                        "CreatingSite",
                        "ApplyingCustomTemplate",
                        "ApplyingSecuritySettings",
                        "ApplyingCustomMetadata",
                        "ApplyingSitePolicy",
                        "ApplyingAdditionalAdministrators",
                        "AddingToSiteDirectory",
                        "RegistingSiteToDao",
                        "ApplyingServiceDpmPlan",
                        "ServiceDpmPlanExecuted",
                        "ApplyingPolicyDpmPlan",
                        "PolicyDpmPlanExecuted",
                        "ApplyingPolicyEnforcerProfile",
                        "ApplyingArchiverProfile",
                        "ApplyingRecertification",
                        "InstallingApp",
                        "AddingAppParts",
                        "CreatingOrValidYammerGroup",
                        "AddingYammerGroupFeed",
                        "RemovingServiceAccount",
                        "CreateGuestUser",
                        "UpdateGuestUser",
                        "AddGuestUserToGroup",
                        "AddGuestUserReport",
                        "ApplyGuestUserRenewal",
                        "ApplyGuestUserElection",
                        "UnblockGuestUser",
                        "BlockGuestUser",
                        "DeleteGuestUser",
                        "CreatingWeb",
                        "ApplyingSecuritySettingsToWeb",
                        "ApplyingSharePointConfigurationsToWeb",
                        "ApplyingCustomMetadataToWeb",
                        "ApplyAndRunDPMPlanInCreatingWeb",
                        "AddingWebToDatabase",
                        "UpdatingWebInDatabase",
                        "DeployingAppPartToWeb",
                        "AddingAppPartToWeb",
                        "CreatingOrValidingYammerGroupInCreatingWeb",
                        "AddingYammerGroupFeedInWeb",
                        "DeletingSite",
                        "ArchivingSite",
                        "ChangingSitePolicy",
                        "UnlockingSite",
                        "LockingSite",
                        "ExtendingSite",
                        "ChangingSiteQuota",
                        "ChangingSiteTitleAndDescription",
                        "ChangingSiteMetadata",
                        "UpdatingSiteDirectory",
                        "ConvertingToHubSite",
                        "ConnectingToHubSite",
                        "UnregisteringHubSite",
                        "ChangingSensitivity",
                        "ChangingWebTitleAndDescription",
                        "ChangingListSetting",
                        "WaitingForGrantPermission",
                        "GrantingPermission",
                        "CheckingList",
                        "UploadingTemplate",
                        "CreatingList",
                        "CreatingCMPlan",
                        "RunningCMPlan",
                        "SettingGroupSharing",
                        "SettingOutlookExperience",
                        "WelcomeEmail",
                        "FailedWithSubRequestException",
                        "ValidatePrivateChannel",
                        "CreatePrivateChannel",
                        "AddUserToChannel",
                        "AddChannelToDB",
                        "ApplyPolicyToChannel",
                        "ChangeChannelName",
                        "ChangeChannelDescription",
                        "ChangeChannelMembers",
                        "ChangeChannelOwners",
                        "ChangeChannelToDB",
                        "RegistingSiteToAos",
                        "RegistingGroupToAos",
                        "StartingProcess",
                        "DeletePowerApps",
                        "UpdatePowerAppsStatus",
                        "DeletePowerBI",
                        "UpdatePowerBIStatus",
                        "DeletePowerAutomate",
                        "UpdatePowerAutomateStatus",
                        "FourthTaskCreated",
                        "FifthTaskCreated",
                        "WaitingForReSubmission",
                        "FourthStageApproval",
                        "FifthStageApproval",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "detailStatusDescription": {
                    "type": "string"
                },
                "progressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiRequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "WaitingForApproval",
                        "WaitingForSubmission",
                        "Cancelled",
                        "Rejected",
                        "Completed",
                        "CompletedWithException",
                        "EncounterError",
                        "InProgress",
                        "FailedWithSubRequestException",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "progressStatusDescription": {
                    "type": "string"
                },
                "modified": {
                    "format": "date-time",
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "modifiedDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "assignTo": {
                    "type": "string"
                },
                "assignToDisplayName": {
                    "type": "string"
                },
                "assignees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiUser"
                    }
                },
                "serviceAdmin": {
                    "type": "string"
                },
                "serviceAdminDisplayName": {
                    "type": "string"
                },
                "objectUrl": {
                    "type": "string"
                },
                "objectID": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "hasSubRequest": {
                    "default": false,
                    "type": "boolean"
                },
                "isEnabledPassback": {
                    "default": false,
                    "type": "boolean"
                },
                "requestResourceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestResourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "Web",
                        "Teams",
                        "Api",
                        "PowerAutomateConnector"
                    ]
                },
                "requestResourceTypeDescription": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportMetadata"
                    }
                }
            }
        },
        "AllRequestListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllRequestList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "AllTaskList": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "requesterLoginName": {
                    "type": "string"
                },
                "requesterDisplayName": {
                    "type": "string"
                },
                "requestTicketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "dueDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DueDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Expired",
                        "DueToday",
                        "DueThisWeek",
                        "DueThisMonth"
                    ]
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ApprovalTask",
                        "ErrorHandlingTask",
                        "SCExpired",
                        "SCNoAccess",
                        "ToDoTask",
                        "UserExpired",
                        "GroupExpired",
                        "GroupInactivityThreshold",
                        "AutoImportGroup",
                        "AutoImportSite",
                        "RenewGroup",
                        "RenewSite",
                        "RenewGuestUser",
                        "RenewPrivateChannel",
                        "RenewGeneric",
                        "RenewSharedMailbox",
                        "AutoImportGeneric",
                        "AutoImportSharedMailbox",
                        "PassbackTask",
                        "DynamicMembershipSubTask",
                        "AutoImportPowerApps",
                        "RenewPowerApps",
                        "RenewSharedChannel",
                        "RenewEnvironments",
                        "RenewPowerBIs",
                        "AutoImportPowerBI",
                        "AutoImportPowerAutomate",
                        "RenewPowerAutomates",
                        "ModernAutoImportTeam",
                        "ModernAutoImportGroup",
                        "ModernAutoImportSite"
                    ]
                },
                "taskTypeDescription": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskResult"
                        }
                    ],
                    "x-enum-varnames": [
                        "Running",
                        "Approved",
                        "Rejected",
                        "Canceled",
                        "TimeOut",
                        "Completed",
                        "AutoActionApproved",
                        "Retried",
                        "Skipped",
                        "Submited",
                        "WaitingForSubmission",
                        "AllStagesTimeOut",
                        "Declined",
                        "WaitingForClaim",
                        "ElectionTaskTimeOut",
                        "Claimed",
                        "AutoComplete",
                        "WaitingForSpecify",
                        "PendingConfirm",
                        "ConfirmOverdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "ConfirmException",
                        "RenewalException",
                        "WaitingForSpecifyBothContacts",
                        "WaitingForConfirmation",
                        "InProgress",
                        "ConfirmTaskOverdue",
                        "ConfirmTaskEscalation",
                        "WaitingForAssistant",
                        "GoBackRejected",
                        "ElectionTaskContinueWithDeclined",
                        "ElectionTaskContinueWithOverdue",
                        "GoBackWithNoChangesRejected",
                        "WaitingForSpecifyBothContactsOverdue",
                        "WaitingForSpecifyBothContactsEscalated",
                        "UnknownChannelTaskStatus",
                        "WaittingForResubmission",
                        "Deleted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "isApproveTask": {
                    "default": false,
                    "type": "boolean"
                },
                "assignee": {
                    "type": "string"
                },
                "assigneeLoginName": {
                    "type": "string"
                },
                "assigneeDisplayName": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "AllTaskListPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AllTaskList"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "ApiProfileObjectType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Site",
                "Office365Group",
                "Team",
                "GuestUser",
                "Yammer",
                "PowerApps"
            ]
        },
        "ApiUploadFileType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9
            ],
            "type": "integer",
            "x-enum-varnames": [
                "InviteSupport",
                "ImportServiceTemplate",
                "EmailBrandingLogo",
                "PreviewEmailBrandingLogo",
                "JobMonitorReport",
                "ActionableMessageBanner",
                "EmailTemplates",
                "LibraryTemplates",
                "Terminologies",
                "ManualImport"
            ]
        },
        "ApplyGroupPolicyModel": {
            "type": "object",
            "properties": {
                "subType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupPolicySubType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Group",
                        "Team",
                        "Yammer"
                    ]
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isApplyAllSetting": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplySharing": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyQuotaThreshold": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyDeactivatedElection": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyLifecycle": {
                    "default": false,
                    "type": "boolean"
                },
                "lifecycleRenewalSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleRenewalSetting"
                        }
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "selectedObjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hasOngoingTasks": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyUniqueAccess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ApplyPolicyStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Applying",
                "Waiting",
                "Succeed",
                "Failed"
            ]
        },
        "ApplyProfilesModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "enableModernRenewalProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "modernRenewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableElectionProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableQuotaProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "quotaProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableExternalSharingProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "externalSharingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "profileObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiProfileObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Office365Group",
                        "Team",
                        "GuestUser",
                        "Yammer",
                        "PowerApps"
                    ]
                },
                "selectedObjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handleOngoingType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleOngoingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Skip",
                        "CancelOngoing"
                    ]
                },
                "handleTaskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleTaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "OnlyRenewal",
                        "OnlyElection",
                        "BothRenewalAndElection"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "ApplySitePolicyModel": {
            "type": "object",
            "properties": {
                "isApplyDesigner": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplySiteMaxDepth": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyPolicyIcon": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyAosPlans": {
                    "default": false,
                    "type": "boolean"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "isApplyAllSetting": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplySharing": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyQuotaThreshold": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyDeactivatedElection": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyLifecycle": {
                    "default": false,
                    "type": "boolean"
                },
                "lifecycleRenewalSetting": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleRenewalSetting"
                        }
                    ]
                },
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "selectedObjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hasOngoingTasks": {
                    "default": false,
                    "type": "boolean"
                },
                "isApplyUniqueAccess": {
                    "default": false,
                    "type": "boolean"
                }
            }
        },
        "ApplyTeamProfilesModel": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "string"
                },
                "search": {
                    "type": "string"
                },
                "enableModernRenewalProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "modernRenewalProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableElectionProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "electionProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableQuotaProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "quotaProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "enableExternalSharingProfile": {
                    "default": false,
                    "type": "boolean"
                },
                "externalSharingProfile": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuidModel"
                        }
                    ]
                },
                "profileObjectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiProfileObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Office365Group",
                        "Team",
                        "GuestUser",
                        "Yammer",
                        "PowerApps"
                    ]
                },
                "selectedObjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handleOngoingType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleOngoingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Skip",
                        "CancelOngoing"
                    ]
                },
                "handleTaskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleTaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "OnlyRenewal",
                        "OnlyElection",
                        "BothRenewalAndElection"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "AppSettingType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "OnlyApp",
                "AppAndCloudGovernancePanel"
            ]
        },
        "ArchiveWorkspaceParameter": {
            "description": "archive workspace parameter",
            "type": "object",
            "properties": {
                "archiveProfile": {
                    "description": "WorkspaceType is site, you should set profile name\n            WorkspaceType is teams, you should set profile id",
                    "type": "string"
                },
                "workspaceType": {
                    "format": "int32",
                    "description": "workspace type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceArchivedType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Teams"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "AutoCompleteRenewalTaskParameter": {
            "type": "object",
            "properties": {
                "isMarkAsCanceled": {
                    "default": false,
                    "type": "boolean"
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "AutoImportProcessHookMessage": {
            "description": "When an import process with pre-defined governance details or end user completes a confirm governance details task is completed",
            "type": "object",
            "properties": {
                "autoImportProfileName": {
                    "description": "Name of the import job",
                    "type": "string"
                },
                "taskLink": {
                    "description": "Link of task",
                    "type": "string"
                },
                "objectTitle": {
                    "description": "Name of the workspace",
                    "type": "string"
                },
                "objectType": {
                    "description": "Type of the workspace",
                    "type": "string"
                },
                "objectTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of the workspace, availabe values:SiteCollection,Group,Team,GuestUser,Yammer",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HookMessageObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SiteCollection",
                        "Group",
                        "Team",
                        "GuestUser",
                        "Yammer"
                    ]
                },
                "groupEmail": {
                    "description": "E-mail address of the workspace",
                    "type": "string"
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "ClaimStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Unclaimed",
                "Claiming",
                "Claimed",
                "Failed",
                "Overdue"
            ]
        },
        "CustomExtensionPropertyModel": {
            "type": "object",
            "properties": {
                "propertyName": {
                    "type": "string"
                },
                "propertyDataType": {
                    "type": "string"
                }
            }
        },
        "DeleteWorkspaceParameter": {
            "type": "object",
            "properties": {
                "enableRemoveObject": {
                    "default": false,
                    "type": "boolean"
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "DistinctResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "displayValue": {
                    "type": "string"
                }
            }
        },
        "ElectionContact": {
            "type": "object",
            "properties": {
                "displayName": {
                    "description": "Display name of contact",
                    "type": "string"
                },
                "identityName": {
                    "description": "User principal name of contact",
                    "type": "string"
                }
            }
        },
        "ElectionHookMessage": {
            "type": "object",
            "properties": {
                "serviceType": {
                    "description": "Type enum of election, available values: Group Deactivated Contact Election, Site Collection Deactivated Contact Election\n            , Elect Contact, Specify contact",
                    "type": "string"
                },
                "isPrimaryContactDeactived": {
                    "description": "Is primary contact deactived",
                    "default": false,
                    "type": "boolean"
                },
                "originalPrimaryContact": {
                    "description": "Original primary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElectionContact"
                        }
                    ]
                },
                "isPrimaryContactChanged": {
                    "description": "Is primary contact changed",
                    "default": false,
                    "type": "boolean"
                },
                "newPrimaryContact": {
                    "description": "New primary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElectionContact"
                        }
                    ]
                },
                "isSecondaryContactDeactived": {
                    "description": "Is secondary contact deactived",
                    "default": false,
                    "type": "boolean"
                },
                "originalSecondaryContact": {
                    "description": "Original secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElectionContact"
                        }
                    ]
                },
                "isSecondaryContactChanged": {
                    "description": "Is secondary contact changed",
                    "default": false,
                    "type": "boolean"
                },
                "newSecondaryContact": {
                    "description": "New secondary contact",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElectionContact"
                        }
                    ]
                },
                "taskLink": {
                    "description": "Link of task",
                    "type": "string"
                },
                "objectTitle": {
                    "description": "Name of the workspace",
                    "type": "string"
                },
                "objectType": {
                    "description": "Type of the workspace",
                    "type": "string"
                },
                "objectTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of the workspace, availabe values:SiteCollection,Group,Team,GuestUser,Yammer",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HookMessageObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SiteCollection",
                        "Group",
                        "Team",
                        "GuestUser",
                        "Yammer"
                    ]
                },
                "groupEmail": {
                    "description": "E-mail address of the workspace",
                    "type": "string"
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "ExternalUserState": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "PendingAcceptance",
                "Accepted"
            ]
        },
        "GroupEnableSharingStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Allowed",
                "NotAllowed"
            ]
        },
        "GroupPolicySubType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Group",
                "Team",
                "Yammer"
            ]
        },
        "GuestUserGridModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "userPrincipalName": {
                    "type": "string"
                },
                "mail": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "primaryContactEmail": {
                    "type": "string"
                },
                "primaryContactDisplayName": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "secondaryContactEmail": {
                    "type": "string"
                },
                "secondaryContactDisplayName": {
                    "type": "string"
                },
                "primaryContactJobTitle": {
                    "type": "string"
                },
                "primaryContactDepartment": {
                    "type": "string"
                },
                "primaryContactCompanyName": {
                    "type": "string"
                },
                "secondaryContactJobTitle": {
                    "type": "string"
                },
                "secondaryContactDepartment": {
                    "type": "string"
                },
                "secondaryContactCompanyName": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GuestUserStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "RenewalPreparing",
                        "RenewalPending",
                        "RenewalProcessing",
                        "RenewalCompleted",
                        "RenewalException",
                        "RenewalOverdue",
                        "Deleted",
                        "Disabled",
                        "RenewalDisabled",
                        "AutoImportProcessInProgress",
                        "AutoImportTaskException",
                        "AutoImportComplete",
                        "ElectionDisabled",
                        "GuestLifecycleDisabled"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "phaseProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "profileName": {
                    "type": "string"
                },
                "tenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "nextRenewalDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "renewalAssignees": {
                    "type": "string"
                },
                "renewalAssigneeDisplayNames": {
                    "type": "string"
                },
                "lastRenewalBy": {
                    "type": "string"
                },
                "lastRenewalByEmail": {
                    "type": "string"
                },
                "lastRenewalByDisplayName": {
                    "type": "string"
                },
                "externalUserState": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ExternalUserState"
                        }
                    ],
                    "x-enum-varnames": [
                        "PendingAcceptance",
                        "Accepted"
                    ]
                },
                "externalUserStateDescription": {
                    "type": "string"
                },
                "lastSyncTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "inviteTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastRenewalTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "renewalStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "renewalDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "claimStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClaimStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unclaimed",
                        "Claiming",
                        "Claimed",
                        "Failed",
                        "Overdue"
                    ]
                },
                "ongoingTaskCount": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportMetadata"
                    }
                }
            }
        },
        "GuestUserGridModelPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GuestUserGridModel"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "GuestUserStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Active",
                "RenewalPreparing",
                "RenewalPending",
                "RenewalProcessing",
                "RenewalCompleted",
                "RenewalException",
                "RenewalOverdue",
                "Deleted",
                "Disabled",
                "RenewalDisabled",
                "AutoImportProcessInProgress",
                "AutoImportTaskException",
                "AutoImportComplete",
                "ElectionDisabled",
                "GuestLifecycleDisabled"
            ]
        },
        "HandleTaskType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "OnlyRenewal",
                "OnlyElection",
                "BothRenewalAndElection"
            ]
        },
        "HookMessageList": {
            "type": "object",
            "properties": {
                "renewalTaskCompleted": {
                    "description": "When a Renewal Task is Completed",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RenewalTaskHookMessage"
                        }
                    ]
                },
                "taskCreated": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskHookMessage"
                        }
                    ]
                },
                "autoImportCompleted": {
                    "description": "When an import process with pre-defined governance details or end user completes a confirm governance details task is completed",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportProcessHookMessage"
                        }
                    ]
                },
                "requestsRelated": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestHookMessage"
                        }
                    ]
                },
                "lifecycleHookMessage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleHookMessage"
                        }
                    ]
                },
                "electionHookMessage": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/ElectionHookMessage"
                        }
                    ]
                }
            }
        },
        "HookMessageObjectType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "SiteCollection",
                "Group",
                "Team",
                "GuestUser",
                "Yammer"
            ]
        },
        "HubSiteType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "No",
                "Registere",
                "Associated"
            ]
        },
        "ImportEnvironmentModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "contactElectionProfile": {
                    "type": "string"
                },
                "renewalProfile": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportMetadataModel"
                    }
                }
            }
        },
        "ImportGroupModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "groupName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "isKeepSiteQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "appSetting": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AppSettingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "OnlyApp",
                        "AppAndCloudGovernancePanel"
                    ]
                },
                "externalSharingProfile": {
                    "type": "string"
                },
                "storageManagementProfile": {
                    "type": "string"
                },
                "contactElectionProfile": {
                    "type": "string"
                },
                "renewalProfile": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportMetadataModel"
                    }
                }
            }
        },
        "ImportMetadataModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ImportObjectType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Site",
                "Group",
                "Team",
                "Yammer",
                "AdGroup",
                "SharedMailbox",
                "PowerApps",
                "Environment",
                "GuestUser",
                "PowerBI",
                "PowerAutomate",
                "Microsoft365User"
            ]
        },
        "ImportSiteModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "siteTitle": {
                    "type": "string"
                },
                "siteUrl": {
                    "type": "string"
                },
                "isKeepSiteQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "appSetting": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AppSettingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "OnlyApp",
                        "AppAndCloudGovernancePanel"
                    ]
                },
                "externalSharingProfile": {
                    "type": "string"
                },
                "storageManagementProfile": {
                    "type": "string"
                },
                "contactElectionProfile": {
                    "type": "string"
                },
                "renewalProfile": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportMetadataModel"
                    }
                }
            }
        },
        "ImportTeamModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "teamName": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "isKeepSiteQuota": {
                    "default": false,
                    "type": "boolean"
                },
                "appSetting": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AppSettingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "OnlyApp",
                        "AppAndCloudGovernancePanel"
                    ]
                },
                "externalSharingProfile": {
                    "type": "string"
                },
                "storageManagementProfile": {
                    "type": "string"
                },
                "contactElectionProfile": {
                    "type": "string"
                },
                "renewalProfile": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportMetadataModel"
                    }
                }
            }
        },
        "InsightsStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NotRegistered",
                "Registered",
                "InProgress"
            ]
        },
        "LeaseDateType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "KeepStartDate",
                "NewStartDate",
                "KeepLeaseDate"
            ]
        },
        "LeaseStartDateType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "CreateDate",
                "SpecificDate"
            ]
        },
        "LifecycleHookMessage": {
            "type": "object",
            "properties": {
                "policyId": {
                    "format": "uuid",
                    "description": "Unique ID of policy",
                    "type": "string"
                },
                "policyName": {
                    "description": "Name of policy",
                    "type": "string"
                },
                "taskType": {
                    "description": "Lifecycle type of workspace, availabe values: SCNoAccess,SCExpired,GroupExpired,GroupInactivityThreshold",
                    "type": "string"
                },
                "reachedTime": {
                    "format": "date-time",
                    "description": "Expiration time",
                    "type": "string"
                },
                "assigneeDisplayName": {
                    "description": "Display name of assignee",
                    "type": "string"
                },
                "assigneeIdentityName": {
                    "description": "User principal name of assignee",
                    "type": "string"
                },
                "taskLink": {
                    "description": "Link of task",
                    "type": "string"
                },
                "objectTitle": {
                    "description": "Name of the workspace",
                    "type": "string"
                },
                "objectType": {
                    "description": "Type of the workspace",
                    "type": "string"
                },
                "objectTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of the workspace, availabe values:SiteCollection,Group,Team,GuestUser,Yammer",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HookMessageObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SiteCollection",
                        "Group",
                        "Team",
                        "GuestUser",
                        "Yammer"
                    ]
                },
                "groupEmail": {
                    "description": "E-mail address of the workspace",
                    "type": "string"
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "LifecycleJobTimeBaseType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "LastModifiedTime",
                "ImportedTime"
            ]
        },
        "LifecycleRenewalSetting": {
            "type": "object",
            "properties": {
                "leaseDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LeaseDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "KeepStartDate",
                        "NewStartDate",
                        "KeepLeaseDate"
                    ]
                },
                "startDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LeaseStartDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "CreateDate",
                        "SpecificDate"
                    ]
                },
                "specifyStartDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "handleOngoingType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HandleOngoingType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Skip",
                        "CancelOngoing"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "cancelEmailTemplateName": {
                    "type": "string"
                }
            }
        },
        "LockedBy": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Unknown",
                "ManuallyLockRequest",
                "AutoImportEscalation",
                "AutoImportEscalationRestrictedPostingPermission",
                "LifecycleEscalation",
                "ManuallyLockInWorkspace",
                "RenewEscalation",
                "ElectionEscalation",
                "ManuallyLockInSharePoint"
            ]
        },
        "LockSiteCollectionType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "NoAccess",
                "ReadOnly"
            ]
        },
        "LockSiteParameter": {
            "type": "object",
            "properties": {
                "lockType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LockSiteCollectionType"
                        }
                    ],
                    "x-enum-varnames": [
                        "NoAccess",
                        "ReadOnly"
                    ]
                },
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "ManualImportAdGroupJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportEnvironmentJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportEnvironmentModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportGroupJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "inactiveJobTimeBaseType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleJobTimeBaseType"
                        }
                    ],
                    "x-enum-varnames": [
                        "LastModifiedTime",
                        "ImportedTime"
                    ]
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportGroupModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportPowerAppsJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportPowerAutomateJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportPowerBIJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportSharedMailboxJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportSiteJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "inactiveJobTimeBaseType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleJobTimeBaseType"
                        }
                    ],
                    "x-enum-varnames": [
                        "LastModifiedTime",
                        "ImportedTime"
                    ]
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportSiteModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "ManualImportTeamJobModel": {
            "type": "object",
            "properties": {
                "objectType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ImportObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Site",
                        "Group",
                        "Team",
                        "Yammer",
                        "AdGroup",
                        "SharedMailbox",
                        "PowerApps",
                        "Environment",
                        "GuestUser",
                        "PowerBI",
                        "PowerAutomate",
                        "Microsoft365User"
                    ]
                },
                "isIncludeArchivedTeams": {
                    "default": false,
                    "type": "boolean"
                },
                "inactiveJobTimeBaseType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LifecycleJobTimeBaseType"
                        }
                    ],
                    "x-enum-varnames": [
                        "LastModifiedTime",
                        "ImportedTime"
                    ]
                },
                "workspaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImportTeamModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "MetadataDisplayType": {
            "format": "int32",
            "enum": [
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "DoNotDisplayInReport",
                "DisplayInPublicSCDirectoryReport",
                "DisplayInAdministrationReport",
                "DisplayInEndUserReport"
            ]
        },
        "OldMetadataGridModel": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdByDisplayName": {
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fieldType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataFieldType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SingleLineText",
                        "MultiLineText",
                        "YesOrNo",
                        "Choices",
                        "PeoplePickerValue",
                        "Terms",
                        "Hyperlink",
                        "UserProfileService",
                        "AzureADProperty",
                        "SharePointList"
                    ]
                },
                "fieldTypeDescription": {
                    "type": "string"
                },
                "metadataValue": {
                    "type": "string"
                },
                "showInReportType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/MetadataDisplayType"
                        }
                    ],
                    "x-enum-varnames": [
                        "DoNotDisplayInReport",
                        "DisplayInPublicSCDirectoryReport",
                        "DisplayInAdministrationReport",
                        "DisplayInEndUserReport"
                    ]
                },
                "showInReportTypeDescription": {
                    "type": "string"
                },
                "lastModifiedTime": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "OldMetadataGridModelPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OldMetadataGridModel"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "RenewalTaskHookMessage": {
            "description": "When a Renewal Task is Completed",
            "type": "object",
            "properties": {
                "phaseStartTime": {
                    "format": "date-time",
                    "description": "Start time of the renewal process",
                    "type": "string"
                },
                "renewalProfileName": {
                    "description": "Name of the renewal profile",
                    "type": "string"
                },
                "message": {
                    "description": "Details of the renewal exception",
                    "type": "string"
                },
                "dueDate": {
                    "format": "date-time",
                    "description": "Due date for the task assignee to complete the renewal task",
                    "type": "string"
                },
                "assigneeDisplayName": {
                    "description": "Display name of the renewal task assignee",
                    "type": "string"
                },
                "assigneeIdentityName": {
                    "description": "User principal name of the renewal task assignee",
                    "type": "string"
                },
                "taskLink": {
                    "description": "Link of task",
                    "type": "string"
                },
                "objectTitle": {
                    "description": "Name of the workspace",
                    "type": "string"
                },
                "objectType": {
                    "description": "Type of the workspace",
                    "type": "string"
                },
                "objectTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of the workspace, availabe values:SiteCollection,Group,Team,GuestUser,Yammer",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HookMessageObjectType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "SiteCollection",
                        "Group",
                        "Team",
                        "GuestUser",
                        "Yammer"
                    ]
                },
                "groupEmail": {
                    "description": "E-mail address of the workspace",
                    "type": "string"
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "RequestHookMessage": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "type": "string"
                },
                "serviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestId": {
                    "format": "int32",
                    "description": "Ticket number of the request",
                    "default": 0,
                    "type": "integer"
                },
                "requestGuid": {
                    "format": "uuid",
                    "description": "Unique ID of the request",
                    "type": "string"
                },
                "requesterIdentityName": {
                    "description": "User principal name of the requester",
                    "type": "string"
                },
                "requester": {
                    "description": "Display name of the requester",
                    "type": "string"
                },
                "serviceType": {
                    "description": "Type of service that is used to submit this request",
                    "type": "string"
                },
                "serviceTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of service that is used to submit this request",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "SASUriModel": {
            "type": "object",
            "properties": {
                "uri": {
                    "format": "uri",
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "expiredTime": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                }
            }
        },
        "ServiceGridModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/CommonStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Inactive",
                        "Active"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "language": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "categoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "modifiedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "modifiedBy": {
                    "type": "string"
                },
                "modifiedByDisplayName": {
                    "type": "string"
                },
                "createdByDisplayName": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                }
            }
        },
        "ServiceGridModelPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceGridModel"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "SiteSharingStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "AnyOne",
                "NewAndExistingGuest",
                "ExistingGuestOnly",
                "Disabled"
            ]
        },
        "SpecifyContactParameter": {
            "type": "object",
            "properties": {
                "primaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "secondaryContact": {
                    "description": "ApiUser model",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApiUser"
                        }
                    ]
                },
                "primaryContactNotifiedEmail": {
                    "format": "uuid",
                    "type": "string"
                },
                "secondaryContactNotifiedEmail": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "TaskHookMessage": {
            "type": "object",
            "properties": {
                "taskId": {
                    "format": "uuid",
                    "description": "Unique ID of the task",
                    "type": "string"
                },
                "taskLink": {
                    "description": "Link of the task",
                    "type": "string"
                },
                "assigneeDisplayName": {
                    "description": "Display name of the task assignee",
                    "type": "string"
                },
                "assigneeIdentityName": {
                    "description": "User principal name of the task assignee",
                    "type": "string"
                },
                "approverDisplayName": {
                    "description": "Display name of the task assignee",
                    "type": "string"
                },
                "approverIdentityName": {
                    "description": "User principal name of the task assignee",
                    "type": "string"
                },
                "message": {
                    "description": "Task comments or error message",
                    "type": "string"
                },
                "requestId": {
                    "format": "int32",
                    "description": "Ticket number of the request",
                    "default": 0,
                    "type": "integer"
                },
                "requestGuid": {
                    "format": "uuid",
                    "description": "Unique ID of the request",
                    "type": "string"
                },
                "requesterIdentityName": {
                    "description": "User principal name of the requester",
                    "type": "string"
                },
                "requester": {
                    "description": "Display name of the requester",
                    "type": "string"
                },
                "serviceType": {
                    "description": "Type of service that is used to submit this request",
                    "type": "string"
                },
                "serviceTypeEnum": {
                    "format": "int32",
                    "description": "Type enum of service that is used to submit this request",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "triggerType": {
                    "format": "int32",
                    "description": "Event type that being triggered, available values and corresponding messages:\n            \n            RequestSubmitted,RequestCompleted,RequestCancelled ----> RequestHookMessage\n            TaskCreated,TaskApproved,TaskRejected,ErrorTaskCreated,TaskRetried,TaskSkipped ----> TaskHookMessage\n            RenewalSuccess RenewalException,RenewalOverdue ----> RenewalTaskHookMessage\n            FullyAutoImportSuccess,ConfirmDetailSuccess ----> AutoImportProcessHookMessage\n            ElectionCompleted,ElectionOverdue ---> ElectionHookMessage\n            LifecycleInactiveTaskCreated,LifecycleLeaseTaskCreated ----> ElectionOverdue",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TriggerType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "RequestSubmitted",
                        "RequestCompleted",
                        "RequestCancelled",
                        "TaskCreated",
                        "TaskApproved",
                        "TaskRejected",
                        "ErrorTaskCreated",
                        "TaskRetried",
                        "TaskSkipped",
                        "RenewalSuccess",
                        "RenewalException",
                        "RenewalOverdue",
                        "FullyAutoImportSuccess",
                        "ConfirmDetailSuccess",
                        "ElectionCompleted",
                        "LifecycleInactiveTaskCreated",
                        "LifecycleLeaseTaskCreated",
                        "ElectionOverdue"
                    ]
                },
                "triggerTime": {
                    "format": "date-time",
                    "description": "Time that the webhook is triggered",
                    "type": "string"
                },
                "objectUrl": {
                    "description": "URL of the workspace",
                    "type": "string"
                },
                "objectId": {
                    "format": "uuid",
                    "description": "The unique ID of the workspace",
                    "type": "string"
                },
                "summary": {
                    "description": "Request or task summary",
                    "type": "string"
                }
            }
        },
        "TaskPriority": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Lowest",
                "BelowNormal",
                "Normal",
                "AboveNormal",
                "Highest"
            ]
        },
        "TaskReport": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "requestId": {
                    "format": "uuid",
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "requester": {
                    "type": "string"
                },
                "requesterLoginName": {
                    "type": "string"
                },
                "requesterDisplayName": {
                    "type": "string"
                },
                "requestTicketNumber": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "dueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "dueDateType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/DueDateType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Expired",
                        "DueToday",
                        "DueThisWeek",
                        "DueThisMonth"
                    ]
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "taskLastModifiedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "requestLastModifiedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "requestProgressStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/RequestProgressStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ErrorStart",
                        "Error",
                        "RequestSubmitted",
                        "TaskCreated",
                        "AdminContactIssueReview",
                        "Cancelled",
                        "Rejected",
                        "FirstStageApproval",
                        "SecondStageApproval",
                        "ThirdStageApproval",
                        "Completed",
                        "AssignContentDatabase",
                        "CreateSiteCollection",
                        "ApplySecuritySettings",
                        "ApplySharePointConfigurations",
                        "ApplyCustomMetadata",
                        "AddToSiteCollectionDirectory",
                        "ApplyDocAveGranularBackupPlan",
                        "ApplyDocAveAuditorPlan",
                        "ApplyDocAveDeadAccountCleaningPlan",
                        "ApplyDocAveScheduledStorageManagerProfile",
                        "ApplyDocAveArchiverProfile",
                        "ApplyDocAveVaultProfile",
                        "ApplyAndRunDPMPlan",
                        "ArchiveSiteCollection",
                        "UpdateSiteCollectionArchived",
                        "ExtendSiteCollection",
                        "UpdateCustomMetadata",
                        "UpdateSiteDirectory",
                        "DeleteSiteCollection",
                        "UpdateSiteCollectionDeleted",
                        "CreateSubSite",
                        "AddToSubSiteDirectory",
                        "RetractDocAveGranularBackupPlan",
                        "RetractDocAveAuditorPlan",
                        "RetractDocAveDeadAccountCleaningPlan",
                        "RetractDocAveScheduledStorageManagerProfile",
                        "RetrieveDocAveArchiveProfile",
                        "RetrieveDocAveVaultProfile",
                        "UpdateChangeSCPolicyMetadata",
                        "UpdateSiteCollectionPolicyChanged",
                        "CreateHiddenList",
                        "ChangeSiteCollectionMetadata",
                        "UpdateSiteDirectoryForChangeSCMetadata",
                        "ChangeSiteCollectionContact",
                        "UpdateSiteDirectoryForChangeSCContact",
                        "CloneUserPermission",
                        "SearchUserPermission",
                        "InProgress",
                        "CompletedWithException",
                        "DeleteSubSite",
                        "UpdateDeleteSubSite",
                        "ArchiveSubSite",
                        "UpdateArchiveSubSite",
                        "ChangeSubSiteMetadata",
                        "UpdateSiteDirectoryForChangeSSMetadata",
                        "FirstTaskCreated",
                        "SecondTaskCreated",
                        "ThirdTaskCreated",
                        "GrantUserPermission",
                        "RemoveUserPermission",
                        "ChangeSCSettingsTitleDes",
                        "CreateMySiteCompleted",
                        "CreateCMPlan",
                        "RunCMPlan",
                        "ApplyArchiverProfile",
                        "CreateListCompleted",
                        "ChangeListURL",
                        "ChangeListSettingsCompleted",
                        "RegistSiteCollectionToDcoAveGroup",
                        "ApplyPolicyEnforcerProfile",
                        "UpdatePolicyEnforcerProfileCompleted",
                        "PermissionRecertificationTriggered",
                        "ChangingUserPermission",
                        "RequesterReportCreated",
                        "ApplyDeployAppPart",
                        "ApplyAddAppPart",
                        "ApplyingDeploymentManagerPlan",
                        "ApplyPermissionRecertification",
                        "ApplyMetadataRecertification",
                        "ApplyOwnershipRecertification",
                        "UnlockSiteCollection",
                        "UpdateSiteCollectionUnlocked",
                        "ChangeSiteCollectionOwner",
                        "ChangeSiteCollectionAdditionalAdmin",
                        "CreateOrValidYammerGroup",
                        "AddYammerGroupFeed",
                        "CancelAutoTask",
                        "ContinueAccess",
                        "ChangeSSSettingsTitleDes",
                        "FailedToSubmit",
                        "WaitingForSubmission",
                        "AllApprovalStageComplete",
                        "LockSiteCollection",
                        "UpdateSiteCollectionLocked",
                        "ChangeSiteCollectionQuota",
                        "UpdateSiteCollectionChangedQuota",
                        "ApplyAdditionalAdministrators",
                        "CallCustomActionBeforeApproval",
                        "MaintanceWindow",
                        "CreateUser",
                        "AssignManager",
                        "AssignLicense",
                        "AddUserToGroups",
                        "RemoveUserFromGroups",
                        "AddUserReport",
                        "ApplyUserPolicy",
                        "ApplyOneDriveSiteProperties",
                        "ChangeUser",
                        "ChangeUserContact",
                        "ChangeUserLicense",
                        "ChangeUserManager",
                        "ChangeUserGroups",
                        "UpdateUserReport",
                        "ApplyUserRole",
                        "ChangeUserMail",
                        "RemoveOriginalMail",
                        "DeleteUser",
                        "BlockUser",
                        "ResetPassword",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeGroup",
                        "UpdateGroupReport",
                        "AddOwnersToGroup",
                        "AddMembersToGroup",
                        "RemoveOwnersFromGroup",
                        "RemoveMembersFromGroup",
                        "UpdateMetadatasToSite",
                        "ChangeDynamicGroupRules",
                        "UpdateGroupOwners",
                        "UpdateGroupMembers",
                        "CreateGroup",
                        "UpdateGroup",
                        "SetGroupOwners",
                        "SetGroupMembers",
                        "SetGroupQuota",
                        "AddGroupReport",
                        "ApplyGroupPolicy",
                        "EnableTeamCollaboration",
                        "ApplySiteDesign",
                        "ApplyGroupCustomMetadata",
                        "DeleteGroup",
                        "ChangeGroupPolicy",
                        "ExtendGroup",
                        "UpdateGroupStatus",
                        "InstallApp",
                        "GetGroup",
                        "RegisterSiteDocave",
                        "GetGroupSite",
                        "ChangeGroupQuota",
                        "SetGeoLocation",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "ApplyGroupExtension",
                        "ChangeTeamPrivateChannelSiteQuota",
                        "CreatingSite",
                        "ApplyingCustomTemplate",
                        "ApplyingSecuritySettings",
                        "ApplyingCustomMetadata",
                        "ApplyingSitePolicy",
                        "ApplyingAdditionalAdministrators",
                        "AddingToSiteDirectory",
                        "RegistingSiteToDao",
                        "ApplyingServiceDpmPlan",
                        "ServiceDpmPlanExecuted",
                        "ApplyingPolicyDpmPlan",
                        "PolicyDpmPlanExecuted",
                        "ApplyingPolicyEnforcerProfile",
                        "ApplyingArchiverProfile",
                        "ApplyingRecertification",
                        "InstallingApp",
                        "AddingAppParts",
                        "CreatingOrValidYammerGroup",
                        "AddingYammerGroupFeed",
                        "RemovingServiceAccount",
                        "CreateGuestUser",
                        "UpdateGuestUser",
                        "AddGuestUserToGroup",
                        "AddGuestUserReport",
                        "ApplyGuestUserRenewal",
                        "ApplyGuestUserElection",
                        "UnblockGuestUser",
                        "BlockGuestUser",
                        "DeleteGuestUser",
                        "CreatingWeb",
                        "ApplyingSecuritySettingsToWeb",
                        "ApplyingSharePointConfigurationsToWeb",
                        "ApplyingCustomMetadataToWeb",
                        "ApplyAndRunDPMPlanInCreatingWeb",
                        "AddingWebToDatabase",
                        "UpdatingWebInDatabase",
                        "DeployingAppPartToWeb",
                        "AddingAppPartToWeb",
                        "CreatingOrValidingYammerGroupInCreatingWeb",
                        "AddingYammerGroupFeedInWeb",
                        "DeletingSite",
                        "ArchivingSite",
                        "ChangingSitePolicy",
                        "UnlockingSite",
                        "LockingSite",
                        "ExtendingSite",
                        "ChangingSiteQuota",
                        "ChangingSiteTitleAndDescription",
                        "ChangingSiteMetadata",
                        "UpdatingSiteDirectory",
                        "ConvertingToHubSite",
                        "ConnectingToHubSite",
                        "UnregisteringHubSite",
                        "ChangingSensitivity",
                        "ChangingWebTitleAndDescription",
                        "ChangingListSetting",
                        "WaitingForGrantPermission",
                        "GrantingPermission",
                        "CheckingList",
                        "UploadingTemplate",
                        "CreatingList",
                        "CreatingCMPlan",
                        "RunningCMPlan",
                        "SettingGroupSharing",
                        "SettingOutlookExperience",
                        "WelcomeEmail",
                        "FailedWithSubRequestException",
                        "ValidatePrivateChannel",
                        "CreatePrivateChannel",
                        "AddUserToChannel",
                        "AddChannelToDB",
                        "ApplyPolicyToChannel",
                        "ChangeChannelName",
                        "ChangeChannelDescription",
                        "ChangeChannelMembers",
                        "ChangeChannelOwners",
                        "ChangeChannelToDB",
                        "RegistingSiteToAos",
                        "RegistingGroupToAos",
                        "StartingProcess",
                        "DeletePowerApps",
                        "UpdatePowerAppsStatus",
                        "DeletePowerBI",
                        "UpdatePowerBIStatus",
                        "DeletePowerAutomate",
                        "UpdatePowerAutomateStatus",
                        "FourthTaskCreated",
                        "FifthTaskCreated",
                        "WaitingForReSubmission",
                        "FourthStageApproval",
                        "FifthStageApproval",
                        "SubRequestWaitingForApproval"
                    ]
                },
                "taskType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskType"
                        }
                    ],
                    "x-enum-varnames": [
                        "ApprovalTask",
                        "ErrorHandlingTask",
                        "SCExpired",
                        "SCNoAccess",
                        "ToDoTask",
                        "UserExpired",
                        "GroupExpired",
                        "GroupInactivityThreshold",
                        "AutoImportGroup",
                        "AutoImportSite",
                        "RenewGroup",
                        "RenewSite",
                        "RenewGuestUser",
                        "RenewPrivateChannel",
                        "RenewGeneric",
                        "RenewSharedMailbox",
                        "AutoImportGeneric",
                        "AutoImportSharedMailbox",
                        "PassbackTask",
                        "DynamicMembershipSubTask",
                        "AutoImportPowerApps",
                        "RenewPowerApps",
                        "RenewSharedChannel",
                        "RenewEnvironments",
                        "RenewPowerBIs",
                        "AutoImportPowerBI",
                        "AutoImportPowerAutomate",
                        "RenewPowerAutomates",
                        "ModernAutoImportTeam",
                        "ModernAutoImportGroup",
                        "ModernAutoImportSite"
                    ]
                },
                "taskTypeDescription": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskResult"
                        }
                    ],
                    "x-enum-varnames": [
                        "Running",
                        "Approved",
                        "Rejected",
                        "Canceled",
                        "TimeOut",
                        "Completed",
                        "AutoActionApproved",
                        "Retried",
                        "Skipped",
                        "Submited",
                        "WaitingForSubmission",
                        "AllStagesTimeOut",
                        "Declined",
                        "WaitingForClaim",
                        "ElectionTaskTimeOut",
                        "Claimed",
                        "AutoComplete",
                        "WaitingForSpecify",
                        "PendingConfirm",
                        "ConfirmOverdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "ConfirmException",
                        "RenewalException",
                        "WaitingForSpecifyBothContacts",
                        "WaitingForConfirmation",
                        "InProgress",
                        "ConfirmTaskOverdue",
                        "ConfirmTaskEscalation",
                        "WaitingForAssistant",
                        "GoBackRejected",
                        "ElectionTaskContinueWithDeclined",
                        "ElectionTaskContinueWithOverdue",
                        "GoBackWithNoChangesRejected",
                        "WaitingForSpecifyBothContactsOverdue",
                        "WaitingForSpecifyBothContactsEscalated",
                        "UnknownChannelTaskStatus",
                        "WaittingForResubmission",
                        "Deleted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "isApproveTask": {
                    "default": false,
                    "type": "boolean"
                },
                "assignee": {
                    "type": "string"
                },
                "assigneeLoginName": {
                    "type": "string"
                },
                "assigneeDisplayName": {
                    "type": "string"
                }
            }
        },
        "TaskReportPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskReport"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "TaskStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Created",
                "WaitingForActivation",
                "WaitingToRun",
                "Running",
                "WaitingForChildrenToComplete",
                "RanToCompletion",
                "Canceled",
                "Faulted"
            ]
        },
        "TeamSiteStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "Deleted",
                "Active",
                "Locked"
            ]
        },
        "TriggerType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                4,
                8,
                16,
                32,
                64,
                128,
                256,
                512,
                1024,
                2048,
                4096,
                8192,
                16384,
                32768,
                65536,
                131072
            ],
            "type": "integer",
            "x-enum-varnames": [
                "None",
                "RequestSubmitted",
                "RequestCompleted",
                "RequestCancelled",
                "TaskCreated",
                "TaskApproved",
                "TaskRejected",
                "ErrorTaskCreated",
                "TaskRetried",
                "TaskSkipped",
                "RenewalSuccess",
                "RenewalException",
                "RenewalOverdue",
                "FullyAutoImportSuccess",
                "ConfirmDetailSuccess",
                "ElectionCompleted",
                "LifecycleInactiveTaskCreated",
                "LifecycleLeaseTaskCreated",
                "ElectionOverdue"
            ]
        },
        "UserCustomAction": {
            "description": "Represents a custom action associated with a Web site, or subsite.",
            "type": "object",
            "properties": {
                "webFullUrl": {
                    "description": "The target subsite or site's root web url which the user custom actions added to.",
                    "type": "string"
                },
                "title": {
                    "description": "The display title of the custom action.",
                    "type": "string"
                },
                "sequence": {
                    "format": "int32",
                    "description": "An implementation-specific value that determines the order of the custom action that appears on the page.",
                    "default": 0,
                    "type": "integer"
                },
                "scriptSrc": {
                    "description": "The URI of a file which contains the ECMAScript to execute on the page.",
                    "type": "string"
                },
                "scriptBlock": {
                    "description": "the ECMAScript to be executed when the custom action is performed.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the custom action.",
                    "type": "string"
                },
                "url": {
                    "description": "The URL, URI, or ECMAScript (JScript, JavaScript) function associated with the action.",
                    "type": "string"
                },
                "location": {
                    "description": "The location of the custom action.",
                    "type": "string"
                },
                "group": {
                    "description": "An implementation-specific value that determines the position of the custom action in the page",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "The URL of the image associated with the custom action.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the custom action.",
                    "type": "string"
                }
            }
        },
        "WorkerJobGridModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "updateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "nextRunTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "isTimer": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Created",
                        "WaitingForActivation",
                        "WaitingToRun",
                        "Running",
                        "WaitingForChildrenToComplete",
                        "RanToCompletion",
                        "Canceled",
                        "Faulted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskPriority"
                        }
                    ],
                    "x-enum-varnames": [
                        "Lowest",
                        "BelowNormal",
                        "Normal",
                        "AboveNormal",
                        "Highest"
                    ]
                },
                "priorityDescription": {
                    "type": "string"
                },
                "intervalSeconds": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "jobType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "jobTypeDescription": {
                    "type": "string"
                }
            }
        },
        "WorkerJobGridModelPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkerJobGridModel"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "WorkerJobModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "type": "array",
                    "items": {}
                },
                "updateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "isTimer": {
                    "default": false,
                    "type": "boolean"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Created",
                        "WaitingForActivation",
                        "WaitingToRun",
                        "Running",
                        "WaitingForChildrenToComplete",
                        "RanToCompletion",
                        "Canceled",
                        "Faulted"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "priority": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TaskPriority"
                        }
                    ],
                    "x-enum-varnames": [
                        "Lowest",
                        "BelowNormal",
                        "Normal",
                        "AboveNormal",
                        "Highest"
                    ]
                },
                "priorityDescription": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "intervalSeconds": {
                    "format": "int32",
                    "default": 0,
                    "type": "integer"
                },
                "nextRunTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "jobType": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                }
            }
        },
        "WorkerObjectType": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "type": "integer",
            "x-enum-varnames": [
                "GroupOrTeamOrYammer",
                "Site",
                "Web",
                "GuestUser",
                "PrivateChannel",
                "PowerApps",
                "SecurityGroup",
                "MailEnabledGroup",
                "DistributionList",
                "SharedMailbox",
                "Environment",
                "PowerBI",
                "PowerAutomate"
            ]
        },
        "WorksapceOngoingTasksModel": {
            "type": "object",
            "properties": {
                "taskName": {
                    "type": "string"
                },
                "serviceType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ServiceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "ProvisionSiteCollection",
                        "CreateSubSite",
                        "SiteCollectionLifecycleMgmt",
                        "ArchiveSiteCollection",
                        "DeleteSiteCollection",
                        "ExtendSiteCollection",
                        "ChangeSiteCollectionPolicy",
                        "ChangeSiteCollectionMetadata",
                        "ChangeSiteCollectionContact",
                        "TransferUserPermission",
                        "ManualArchiveSiteCollectionContent",
                        "CloneUserPermissions",
                        "SiteLifecycleManagement",
                        "GrantUserPermissions",
                        "RemoveUserPermissions",
                        "ChangeSubSitePolicy",
                        "ChangeSubSiteMetadata",
                        "ChangeSubSiteContact",
                        "CleanDeadAccounts",
                        "BackupAndRestore",
                        "ArchiveUserContent",
                        "MoveListItem",
                        "MoveList",
                        "MoveSite",
                        "SiteTemplateDeployment",
                        "SiteThemeDeployment",
                        "SandboxSolutionDeployment",
                        "FarmSolutionDeployment",
                        "SiteOwnerReporting",
                        "SiteCollectionOwnerReporting",
                        "SiteRequestReporting",
                        "ContentManager",
                        "ProvisionSiteCollectionExternal",
                        "MySite",
                        "CreateList",
                        "ChangeList",
                        "AutoSiteCollectionLifecycleMgmt",
                        "QuestionaireMgmt",
                        "PermRecertify",
                        "MetadataRecertify",
                        "OwnershipRecertification",
                        "Election",
                        "Unlock",
                        "AutoLocking",
                        "SCInactivityThreshold",
                        "SCLeasePeriod",
                        "Blank",
                        "LockSC",
                        "ChangeSCQuota",
                        "ApplySiteInformation",
                        "ImportSite",
                        "ApplySitePolicy",
                        "ImportWeb",
                        "RenewSite",
                        "RenewGroup",
                        "ExportReport",
                        "RequestValidation",
                        "SyncSiteMetadata",
                        "PermissionManagement",
                        "BulkUpdate",
                        "CreateGuestUser",
                        "BulkUpdateGroupTeam",
                        "RenewGuestUser",
                        "UpdateSiteLockStatus",
                        "ApplySitePolicyPartSetting",
                        "ApplyGroupPolicyPartSetting",
                        "ApplyGroupExternalSharingProfilePartSetting",
                        "ApplyGroupQuotaProfilePartSetting",
                        "DynamicService",
                        "RenewPrivateChannel",
                        "TeamsLifecycle",
                        "ApplySiteExternalSharingModernProfile",
                        "YammerLifecycle",
                        "SiteCollectionLifecycle",
                        "GroupAutoLifecycle",
                        "RenewSharedChannel",
                        "CreateUser",
                        "ChangeUser",
                        "UserLifecycle",
                        "OffBoardingUser",
                        "ExtendUser",
                        "ChangeUserPolicy",
                        "UnblockUser",
                        "ChangeUserLoginName",
                        "CreateGroup",
                        "ChangeGroup",
                        "GroupLifecycle",
                        "DeleteGroup",
                        "ExtendGroup",
                        "ChangeGroupPolicy",
                        "ChangeGroupQuota",
                        "ContinueAccess",
                        "ApplyGroupInformation",
                        "ApplyGroupPolicy",
                        "ImportAzureGroup",
                        "ImportAzureUser",
                        "PostCreateGroup",
                        "ImportAzureGuestUser",
                        "ImportYammer",
                        "ArchiveTeam",
                        "UnArchiveTeam",
                        "CreateTeamArchivingProfile",
                        "GroupMembershipRecertification",
                        "GroupPermissionRecertification",
                        "SyncSite",
                        "UpgradeSiteLifecycleSetting",
                        "AutoElection",
                        "ManualArchiveTimer",
                        "SyncWeb",
                        "QuotaThresholdTimerJob",
                        "SyncUserForDynamicRule",
                        "SyncGroup",
                        "AutoImportSiteCustomService",
                        "AutoImportSite",
                        "AutoImportGroup",
                        "TemporaryPermissionStart",
                        "TemporaryPermissionEnd",
                        "TemporaryPermissionExpiringNotificationJob",
                        "RenewTeams",
                        "AutoExportReport",
                        "SyncUserInformation",
                        "SyncUpsMetadata",
                        "GroupAutoElection",
                        "SyncGuestUser",
                        "RenewYammer",
                        "SyncExchangeResource",
                        "SyncSharedMailbox",
                        "SyncResourceMailbox",
                        "SpecifyContacts",
                        "UpdateGroupStieLockStatus",
                        "BulkDeleteWorkspace",
                        "BulkManageWorkspaceLockState",
                        "BulkArchiveSite",
                        "BulkArchiveTeams",
                        "BulkRestoreTeams",
                        "GuestUserLifecycle",
                        "RemoveSite",
                        "RemoveGroup",
                        "RemoveWeb",
                        "AutoImportGroupEscalation",
                        "AutoImportSiteEscalation",
                        "BulkAutoCompleteRenewal",
                        "BulkRestartRenewal",
                        "AutoImportGuestUser",
                        "MPWelcomeEmailTemplate",
                        "AutoImportYammerCommunity",
                        "BulkApplyGuestRenewal",
                        "BulkSpecifyGuestContact",
                        "BulkRestartGuestRenewal",
                        "BulkSpecifyGuestOneTimeRenewal",
                        "RemoveGuestUser",
                        "RemoveWorkspace",
                        "CreatePrivateChannel",
                        "BulkApplyGroupExtensions",
                        "BulkReassignRenewalTask",
                        "BulkReassignAutoImportTask",
                        "GuestAutoElection",
                        "BulkApplyGuestElection",
                        "ChangePrivateChannel",
                        "RequestReportAction",
                        "ApplyTeamProfiles",
                        "ApplyGroupProfiles",
                        "ApplyYammerProfiles",
                        "ApplySiteProfiles",
                        "UpdateModernRenewalProfile",
                        "BulkTriggerWorkspaceElection",
                        "DeleteModernRenewalProfile",
                        "UpdateSiteQuotaProfile",
                        "DeleteSiteModernRenewalProfile",
                        "DeleteGroupModernRenewalProfile",
                        "DeleteGenericRenewalProfile",
                        "DeleteSharedMailboxRenewalProfile",
                        "AutoImportSecurityGroup",
                        "AutoImportSharedMaibox",
                        "RenewSecurityGroup",
                        "RenewSharedMailbox",
                        "ApplyGenericProfile",
                        "RestartGenericRenewal",
                        "ApplySharedMailboxProfile",
                        "RestartSharedMailboxRenewal",
                        "RenewMailEnabledGroup",
                        "RenewDistributionList",
                        "SecurityGroupLifecycle",
                        "DistributionListLifecycle",
                        "MailEnabledGroupLifecycle",
                        "SharedMailboxLifecycle",
                        "SecurityGroupElection",
                        "MailEnabledSecurityGroupElection",
                        "DistributionListElection",
                        "SharedMailboxElection",
                        "AutoImportMailEnabledGroup",
                        "AutoImportDistributionList",
                        "SpecifyExchangeResourceContacts",
                        "ExchangeResourceReassignRenewalTask",
                        "ApplyGenericInformation",
                        "ApplySharedMailboxInformation",
                        "AutoImportPowerApps",
                        "ApplyPowerAppsInformation",
                        "AutoImportPowerAppsEscalation",
                        "RenewPowerApps",
                        "PowerAppsLifecycle",
                        "DeletePowerApps",
                        "RenewalPowerAppsEscalation",
                        "ApplyPowerAppsProfile",
                        "BulkRestartPowerAppsRenewal",
                        "BulkSpecifyPowerAppsContact",
                        "BulkReassignPowerAppsRenewal",
                        "SyncPowerApp",
                        "RemovePowerApp",
                        "BulkUpdatePowerAppsMetadata",
                        "BulkUpdateEnvironmentsMetadata",
                        "RenewalEnvironments",
                        "ApplyEnvironmentsProfile",
                        "BulkSpecifyEnvironmentsContact",
                        "BulkReassignEnvironmentsRenewal",
                        "EnvironmentLifecycle",
                        "RemoveEnvironment",
                        "DeleteEnvironment",
                        "SyncEnvironment",
                        "DeleteEnvironmentRenewalProfile",
                        "DeletePowerBIRenewalProfile",
                        "AutoImportPowerAutomate",
                        "ApplyPowerAutomateInformation",
                        "AutoImportPowerAutomateEscalation",
                        "PowerAutomateLifecycle",
                        "DeletePowerAutomate",
                        "DeletePowerAutomate",
                        "BulkUpdatePowerAutomateMetadata",
                        "AutoImportPowerBI",
                        "ApplyPowerBIInformation",
                        "AutoImportPowerBIEscalation",
                        "RenewPowerBI",
                        "PowerBILifecycle",
                        "DeletePowerBI",
                        "RenewalPowerBIEscalation",
                        "BulkUpdatePowerBIMetadata",
                        "ApplyPowerBIProfile",
                        "BulkSpecifyPowerBIContact",
                        "BulkReassignPowerBIRenewal",
                        "ApplyPowerAutomateProfile",
                        "BulkSpecifyPowerAutomateContact",
                        "BulkReassignPowerAutomateRenewal",
                        "SyncPowerBI",
                        "SyncPowerAutomate",
                        "RemovePowerBI",
                        "RemovePowerAutomate",
                        "AutoImportPowerAutomateDuration",
                        "AutoImportPowerAutomateDurationReminder",
                        "PowerAppElection",
                        "AutoImportPowerBISubJob",
                        "AutoImportPowerBIDuration",
                        "AutoImportPowerBIDurationReminder",
                        "AutoImportPowerAppsDuration",
                        "AutoImportPowerAppsDurationReminder",
                        "AutoImportGroupDuration",
                        "AutoImportGroupDurationReminder",
                        "AutoImportTeamEscalation",
                        "PowerBIElection",
                        "PowerAutomateElection",
                        "EnvironmentElection",
                        "DeletePowerAutomateRenewalProfile",
                        "RenewPowerAutomate",
                        "ManualImportSite",
                        "ManualImportGroup",
                        "ManualImportTeam",
                        "ManualImportYammer",
                        "ManualImportAdGroup",
                        "ManualImportSharedMailbox",
                        "ManualImportPowerApps",
                        "ManualImportEnvironment",
                        "ManualImportGuestUser",
                        "ManualImportPowerBI",
                        "ManualImportPowerAutomate",
                        "ManualImportMicrosoft365User",
                        "ManualExportSite",
                        "ManualExportGroup",
                        "ManualExportTeam",
                        "ManualExportYammer",
                        "ManualExportAdGroup",
                        "ManualExportSharedMailbox",
                        "ManualExportPowerApps",
                        "ManualExportEnvironment",
                        "ManualExportGuestUser",
                        "ManualExportPowerBI",
                        "ManualExportPowerAutomate",
                        "ManualExportMicrosoft365User",
                        "RemoveExchangeResource",
                        "RemoveSharedMailbox",
                        "BulkUpdateExchangeResourceMetadata",
                        "BulkUpdateResourceMailboxMetadata",
                        "ModernAutoImportGroup",
                        "ModernAutoImportTeam",
                        "ModernAutoImportSite",
                        "ModernAutoImportSiteDuration",
                        "ModernAutoImportSiteEscalation",
                        "SpecifyResourceMailboxContacts",
                        "RemoveInternalUser"
                    ]
                },
                "serviceTypeDescription": {
                    "type": "string"
                },
                "instanceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspaceId": {
                    "format": "uuid",
                    "type": "string"
                }
            }
        },
        "WorkspaceActionParameter": {
            "type": "object",
            "properties": {
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "WorkspaceArchivedType": {
            "format": "int32",
            "enum": [
                0,
                1
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Site",
                "Teams"
            ]
        },
        "WorkspaceGridModel": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Active",
                        "Deleted",
                        "Archived",
                        "Locked",
                        "TemporaryLocked",
                        "GroupSiteLocked",
                        "RestrictAccess",
                        "Quarantined",
                        "Ready",
                        "Disabled",
                        "Suspend",
                        "Inactived"
                    ]
                },
                "statusDescription": {
                    "type": "string"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                },
                "typeDescription": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "privacy": {
                    "default": false,
                    "type": "boolean"
                },
                "privacyDescription": {
                    "type": "string"
                },
                "policyName": {
                    "type": "string"
                },
                "policyDisplay": {
                    "type": "string"
                },
                "policyId": {
                    "format": "uuid",
                    "type": "string"
                },
                "enableDynamicMembership": {
                    "default": false,
                    "type": "boolean"
                },
                "enableDynamicMembershipDescription": {
                    "type": "string"
                },
                "primaryAdministrators": {
                    "type": "string"
                },
                "primaryAdministratorObjectIds": {
                    "type": "string"
                },
                "primaryAdministratorDisplayNames": {
                    "type": "string"
                },
                "additionalAdministrators": {
                    "type": "string"
                },
                "additionalAdministratorObjectIds": {
                    "type": "string"
                },
                "additionalAdministratorDisplayNames": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "string"
                },
                "primaryContactEmail": {
                    "type": "string"
                },
                "primaryContactObjectId": {
                    "type": "string"
                },
                "primaryContactDisplayName": {
                    "type": "string"
                },
                "secondaryContact": {
                    "type": "string"
                },
                "secondaryContactEmail": {
                    "type": "string"
                },
                "secondaryContactObjectId": {
                    "type": "string"
                },
                "secondaryContactDisplayName": {
                    "type": "string"
                },
                "primaryContactJobTitle": {
                    "type": "string"
                },
                "primaryContactDepartment": {
                    "type": "string"
                },
                "primaryContactCompanyName": {
                    "type": "string"
                },
                "secondaryContactJobTitle": {
                    "type": "string"
                },
                "secondaryContactDepartment": {
                    "type": "string"
                },
                "secondaryContactCompanyName": {
                    "type": "string"
                },
                "hubType": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/HubSiteType"
                        }
                    ],
                    "x-enum-varnames": [
                        "No",
                        "Registere",
                        "Associated"
                    ]
                },
                "associateHubTitle": {
                    "type": "string"
                },
                "geoLocation": {
                    "type": "string"
                },
                "geoLocationDescription": {
                    "type": "string"
                },
                "storageLimit": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "storageUsed": {
                    "format": "double",
                    "type": "number"
                },
                "siteSharing": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/SiteSharingStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "AnyOne",
                        "NewAndExistingGuest",
                        "ExistingGuestOnly",
                        "Disabled"
                    ]
                },
                "siteSharingDescription": {
                    "type": "string"
                },
                "groupSharing": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/GroupEnableSharingStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Allowed",
                        "NotAllowed"
                    ]
                },
                "groupSharingDescription": {
                    "type": "string"
                },
                "classification": {
                    "type": "string"
                },
                "claimStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ClaimStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unclaimed",
                        "Claiming",
                        "Claimed",
                        "Failed",
                        "Overdue"
                    ]
                },
                "claimStatusDescription": {
                    "type": "string"
                },
                "createdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "leaseExpirationTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "inactivityThresholdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastRenewalTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "lastAccessedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "applyPolicyStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/ApplyPolicyStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Applying",
                        "Waiting",
                        "Succeed",
                        "Failed"
                    ]
                },
                "hasOngoingTasks": {
                    "default": false,
                    "type": "boolean"
                },
                "hasOngoingTasksDescription": {
                    "type": "string"
                },
                "hasElectionOngoingTasks": {
                    "default": false,
                    "type": "boolean"
                },
                "lastRenewalBy": {
                    "type": "string"
                },
                "lastRenewalByEmail": {
                    "type": "string"
                },
                "lastRenewalByObejctId": {
                    "type": "string"
                },
                "lastRenewalByDisplayName": {
                    "type": "string"
                },
                "sensitivity": {
                    "type": "string"
                },
                "insightsStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/InsightsStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "NotRegistered",
                        "Registered",
                        "InProgress"
                    ]
                },
                "siteStatus": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/TeamSiteStatus"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "Deleted",
                        "Active",
                        "Locked"
                    ]
                },
                "siteStatusDescription": {
                    "type": "string"
                },
                "lockedBy": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/LockedBy"
                        }
                    ],
                    "x-enum-varnames": [
                        "Unknown",
                        "ManuallyLockRequest",
                        "AutoImportEscalation",
                        "AutoImportEscalationRestrictedPostingPermission",
                        "LifecycleEscalation",
                        "ManuallyLockInWorkspace",
                        "RenewEscalation",
                        "ElectionEscalation",
                        "ManuallyLockInSharePoint"
                    ]
                },
                "lastSyncTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "lockedByDescription": {
                    "type": "string"
                },
                "createdSource": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceCreatedSourceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "None",
                        "DynamicService"
                    ]
                },
                "siteTemplate": {
                    "type": "string"
                },
                "siteTemplateTitle": {
                    "type": "string"
                },
                "quotaProfileName": {
                    "type": "string"
                },
                "quotaProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "externalSharingProfileName": {
                    "type": "string"
                },
                "externalSharingProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "electionProfileName": {
                    "type": "string"
                },
                "electionProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "phaseAssigneeDisplayNames": {
                    "type": "string"
                },
                "phaseAssigneeObjectIds": {
                    "type": "string"
                },
                "phaseAssignees": {
                    "type": "string"
                },
                "phaseProfileName": {
                    "type": "string"
                },
                "phaseProfileId": {
                    "format": "uuid",
                    "type": "string"
                },
                "phaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "renewalDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "nextRenewalDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "phase": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/AutoImportPhase"
                        }
                    ],
                    "x-enum-varnames": [
                        "Confirmed",
                        "Processing",
                        "PendingInition",
                        "ApplyInformationException",
                        "Overdue",
                        "PendingRenewal",
                        "RenewalExpired",
                        "RenewalProcessing",
                        "RenewalException",
                        "Locked",
                        "RenewalCanceled",
                        "RenewalPreparing",
                        "Invalid",
                        "Archived",
                        "Escalation",
                        "ITRenewalCanceled"
                    ]
                },
                "phaseDescription": {
                    "type": "string"
                },
                "metadata": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportMetadata"
                    }
                }
            }
        },
        "WorkspaceGridModelPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceGridModel"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "WorkspaceIdTypeModel": {
            "description": "id and type of workspace",
            "type": "object",
            "properties": {
                "objectId": {
                    "format": "uuid",
                    "description": "workspace id",
                    "type": "string"
                },
                "workspaceType": {
                    "format": "int32",
                    "description": "workspace type",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "WorkspaceReport": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "PolicyName": {
                    "type": "string"
                },
                "PrimaryContact": {
                    "type": "string"
                },
                "PrimaryContactEmail": {
                    "type": "string"
                },
                "PrimaryContactDisplayName": {
                    "type": "string"
                },
                "SecondaryContact": {
                    "type": "string"
                },
                "SecondaryContactEmail": {
                    "type": "string"
                },
                "SecondaryContactDisplayName": {
                    "type": "string"
                },
                "PrimaryAdministrators": {
                    "type": "string"
                },
                "PrimaryAdministratorDisplayNames": {
                    "type": "string"
                },
                "AdditionalAdministrators": {
                    "type": "string"
                },
                "AdditionalAdministratorDisplayNames": {
                    "type": "string"
                },
                "Phase": {
                    "type": "string"
                },
                "PhaseAssigneeDisplayNames": {
                    "type": "string"
                },
                "PhaseAssignees": {
                    "type": "string"
                },
                "PhaseProfileName": {
                    "type": "string"
                },
                "PhaseStartTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "RenewalDueDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "NextRenewalDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Privacy": {
                    "type": "string"
                },
                "AssociateHubTitle": {
                    "type": "string"
                },
                "GeoLocation": {
                    "type": "string"
                },
                "StorageLimit": {
                    "format": "int64",
                    "default": 0,
                    "type": "integer"
                },
                "StorageUsed": {
                    "format": "double",
                    "type": "number"
                },
                "SiteSharing": {
                    "type": "string"
                },
                "GroupSharing": {
                    "type": "string"
                },
                "SensitivityLable": {
                    "type": "string"
                },
                "Classification": {
                    "type": "string"
                },
                "ClaimStatus": {
                    "type": "string"
                },
                "CreatedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "LeaseExpirationTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "InactivityThresholdTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "Metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "HasOngoingTasks": {
                    "type": "string"
                },
                "LastRenewalTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastRenewalBy": {
                    "type": "string"
                },
                "LastRenewalByDisplayName": {
                    "type": "string"
                },
                "LastAccessedTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastSyncTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "QuotaProfileName": {
                    "type": "string"
                },
                "ExternalSharingProfileName": {
                    "type": "string"
                },
                "ElectionProfileName": {
                    "type": "string"
                },
                "SiteStatusDescription": {
                    "type": "string"
                }
            }
        },
        "WorkspaceReportPageResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceReport"
                    }
                },
                "nextLink": {
                    "format": "uri",
                    "type": "string"
                },
                "nextToken": {
                    "type": "string"
                }
            }
        },
        "WorkspaceSendCancelEmailParameter": {
            "type": "object",
            "properties": {
                "isSendCancelEmail": {
                    "default": false,
                    "type": "boolean"
                },
                "cancelEmailTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "workspace": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WorkspaceIdTypeModel"
                    }
                },
                "isSelectAllWorkspace": {
                    "default": false,
                    "type": "boolean"
                },
                "type": {
                    "format": "int32",
                    "type": "integer",
                    "allOf": [
                        {
                            "$ref": "#/definitions/WorkspaceType"
                        }
                    ],
                    "x-enum-varnames": [
                        "Site",
                        "Web",
                        "Group",
                        "Teams",
                        "Yammer",
                        "PowerApps",
                        "SecurityGroup",
                        "MailEnabledSecurityGroup",
                        "DistributionList",
                        "SharedMailbox",
                        "Environment",
                        "PowerBI",
                        "PowerAutomate",
                        "GuestUser",
                        "RoomMailbox",
                        "EquipmentMailbox",
                        "User"
                    ]
                }
            }
        },
        "WorkspaceStatus": {
            "format": "int32",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11
            ],
            "type": "integer",
            "x-enum-varnames": [
                "Active",
                "Deleted",
                "Archived",
                "Locked",
                "TemporaryLocked",
                "GroupSiteLocked",
                "RestrictAccess",
                "Quarantined",
                "Ready",
                "Disabled",
                "Suspend",
                "Inactived"
            ]
        }
    },
    "securityDefinitions": {
        "userPrincipalName": {
            "type": "apiKey",
            "name": "userPrincipalName",
            "in": "header",
            "description": "Configured in Cloud Governance API Authentication Management"
        },
        "clientSecret": {
            "type": "apiKey",
            "name": "clientSecret",
            "in": "header",
            "description": "Configured in Cloud Governance API Authentication Management"
        }
    },
    "security": [
        {
            "userPrincipalName": []
        },
        {
            "clientSecret": []
        }
    ]
}